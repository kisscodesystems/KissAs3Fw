    +---------------------------------------------------------------------------
    | Application map from Doccer.
    | Generated   : 2017-07-09 19:14:47
    | Folders     : 1
    | Files       : 42
    | Total lines : 16119
    +---------------------------------------------------------------------------
    | Contents |
    | ---------+
    |           com
    |           com\kisscodesystems
    |           com\kisscodesystems\KissAs3Fw
as  | 69        com\kisscodesystems\KissAs3Fw\Application.as
    |           com\kisscodesystems\KissAs3Fw\app
as  | 422       com\kisscodesystems\KissAs3Fw\app\Background.as
as  | 613       com\kisscodesystems\KissAs3Fw\app\Footer.as
as  | 696       com\kisscodesystems\KissAs3Fw\app\Foreground.as
as  | 847       com\kisscodesystems\KissAs3Fw\app\Header.as
as  | 935       com\kisscodesystems\KissAs3Fw\app\LangSetter.as
as  | 1019      com\kisscodesystems\KissAs3Fw\app\Middleground.as
as  | 1230      com\kisscodesystems\KissAs3Fw\app\PanelMenu.as
as  | 1328      com\kisscodesystems\KissAs3Fw\app\PanelSettings.as
as  | 1601      com\kisscodesystems\KissAs3Fw\app\Widgets.as
    |           com\kisscodesystems\KissAs3Fw\base
as  | 1824      com\kisscodesystems\KissAs3Fw\base\BaseButton.as
as  | 1910      com\kisscodesystems\KissAs3Fw\base\BaseEventDispatcher.as
as  | 1999      com\kisscodesystems\KissAs3Fw\base\BaseList.as
as  | 2148      com\kisscodesystems\KissAs3Fw\base\BaseOpen.as
as  | 2247      com\kisscodesystems\KissAs3Fw\base\BasePanel.as
as  | 2365      com\kisscodesystems\KissAs3Fw\base\BaseScroll.as
as  | 2618      com\kisscodesystems\KissAs3Fw\base\BaseShape.as
as  | 2759      com\kisscodesystems\KissAs3Fw\base\BaseSprite.as
as  | 3045      com\kisscodesystems\KissAs3Fw\base\BaseTextField.as
as  | 3421      com\kisscodesystems\KissAs3Fw\base\BaseWorkingButton.as
    |           com\kisscodesystems\KissAs3Fw\prop
as  | 3520      com\kisscodesystems\KissAs3Fw\prop\PropsApp.as
as  | 3791      com\kisscodesystems\KissAs3Fw\prop\PropsDyn.as
    |           com\kisscodesystems\KissAs3Fw\text
as  | 4029      com\kisscodesystems\KissAs3Fw\text\TextStock.as
as  | 4154      com\kisscodesystems\KissAs3Fw\text\Texts.as
    |           com\kisscodesystems\KissAs3Fw\ui
as  | 4258      com\kisscodesystems\KissAs3Fw\ui\ButtonBar.as
as  | 4437      com\kisscodesystems\KissAs3Fw\ui\ButtonDraw.as
as  | 4524      com\kisscodesystems\KissAs3Fw\ui\ButtonLink.as
as  | 4655      com\kisscodesystems\KissAs3Fw\ui\ButtonText.as
as  | 4727      com\kisscodesystems\KissAs3Fw\ui\Color.as
as  | 4999      com\kisscodesystems\KissAs3Fw\ui\ColorPicker.as
as  | 5129      com\kisscodesystems\KissAs3Fw\ui\ContentMultiple.as
as  | 5301      com\kisscodesystems\KissAs3Fw\ui\ContentSingle.as
as  | 5448      com\kisscodesystems\KissAs3Fw\ui\List.as
as  | 5670      com\kisscodesystems\KissAs3Fw\ui\ListPicker.as
as  | 5803      com\kisscodesystems\KissAs3Fw\ui\Potmet.as
as  | 5961      com\kisscodesystems\KissAs3Fw\ui\Switcher.as
as  | 6074      com\kisscodesystems\KissAs3Fw\ui\TextArea.as
as  | 6234      com\kisscodesystems\KissAs3Fw\ui\TextBox.as
as  | 6337      com\kisscodesystems\KissAs3Fw\ui\TextInput.as
as  | 6452      com\kisscodesystems\KissAs3Fw\ui\TextLabel.as
as  | 6504      com\kisscodesystems\KissAs3Fw\ui\Widget.as
as  | 6874      com\kisscodesystems\KissAs3Fw\ui\XmlLister.as
    +---------------------------------------------------------------------------
    | Folder: E:\openso\KissAs3Fw\src\
    +---------------------------------------------------------------------------
    | com
    +---------------------------------------------------------------------------
    | com\kisscodesystems
    +---------------------------------------------------------------------------
    | com\kisscodesystems\KissAs3Fw
    +---------------------------------------------------------------------------
as  | com\kisscodesystems\KissAs3Fw\Application.as
as  | 
as  |     Application
as  | 
as  |     /*
as  |     ** This class is a part of the KissAs3Fw actionscrip framework.
as  |     ** See the header comment lines of the
as  |     ** com . kisscodesystems . KissAs3Fw . Application
as  |     ** The whole framework is available at:
as  |     ** https://github.com/kisscodesystems/KissAs3Fw
as  |     ** Demo applications:
as  |     ** https://github.com/kisscodesystems/KissAs3FwDemos
as  |     **
as  |     ** DESCRIPTION:
as  |     ** Application.
as  |     ** This class is the main class of this framework.
as  |     ** Every application built using this framework should extend this class.
as  |     ** Has contained 42 classes initially and this is not an accident.
as  |     **
as  |     ** Published       : 06.21.2017
as  |     **
as  |     ** Current version : 1.5
as  |     **
as  |     ** Developed by    : Jozsef Kiss
as  |     **                   KissCode Systems Kft
as  |     **                   <https://openso.kisscodesystems.com>
as  |     **
as  |     ** Changelog       : 1.1 - 06.30.2017
as  |     **                   bugfixes and smaller improvements
as  |     **                   1.2 - 07.02.2017
as  |     **                   displayAsPassword is available in TextInput
as  |     **                   the scrolling works in the BaseScroll using the mouse wheel.
as  |     **                   1.3 - 07.05.2017
as  |     **                   the embedded arial font is in the demo propsDyn from now
as  |     **                   the content will be cached as a bitmap during its movement
as  |     **                   1.4 - 07.06.2017
as  |     **                   small improvements in the content moving
as  |     **                   1.5 - 07.09.2017
as  |     **                   multiple contents are available in widgets instead of ContentSingle
as  |     **                   multiple widget containers are also available (settings panel)
as  |     **                   small bugfix of content moving on mobile devices
as  |     **                   pixel stealing is improved in Color (mobile devices)
as  |     **                   the Checkbox is Switcher from now
as  |     **                   "about" tab on the settings panel
as  |     **
as  |     ** MAIN FEATURES:
as  |     ** - Contains the public (not static) constants for every part of the fw.
as  |     ** - background , middleground , foreground layers
as  |     ** - texts , textStock , propsApp and propsDyn variable holders
as  |     ** - menuxml: the main menu of this application is here
as  |     ** - uses customContextMenu to handle custom context menu items.
as  |     ** - debugTextField to support debbugging the application
as  |     **
as  |     ** - handles the menu selection
as  |     ** - toSmartphone: easier to set up the application into smartphones
as  |     ** - setApplicationName: sets a name to this application for you
as  |     ** - custom context menu items are available to add and remove, and even handles
as  |     **   the events of clicks in case of single webpage opener menu items.
as  |     ** - calculates and sets the font size if it is configured
as  |     **   ( propsDyn . getAppFontSize ( ) == 0 )
as  |     ** - adds and closes widgets immediately
as  |     ** - brightShadowToApply determines which drop shadow has to be applied
as  |     ** - callContentSizeRecalc supports the automatic size recalculation of the contents
as  |     ** - application . debug ( "a message" ) ; is available from everywhere to debug
as  |     **
as  |     ** NOTE!
as  |     ** Please, be careful when develop an application.
as  |     ** Consider everything in the view of grabage collecting.
as  |     ** Your users do not want to feel your application to be slowed after a not too
as  |     ** long time. If the memory usage of the application just grows and grows then
as  |     ** it needs more and more resources to be operated.
as  |     ** In this framework you will meet this thinking in the logic of all of the classes.
as  |     ** You can test (and monitor) your compiled application with a tool that can
as  |     ** view the actual memory usage and the current counts of your objects within your app.
as  |     **
as  |     ** There are some if ( application != null ).
as  |     ** These are necessary to be there because the grabage collecting will not happen
as  |     ** immediately so there will be some function calls that we don't want actually.
as  |     ** We can avoid the running of these functions by checking this condition.
as  |     **
as  |     ** Copyright (C) 2017 KissCode Systems Kft
as  |     **
as  |     ** KissAs3Fw is free software: you can redistribute it and/or modify
as  |     ** it under the terms of the GNU General Public License as published by
as  |     ** Free Software Foundation, version 3.
as  |     **
as  |     ** KissAs3Fw is distributed in the hope that it will be useful,
as  |     ** but WITHOUT ANY WARRANTY; without even the implied warranty of
as  |     ** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
as  |     ** GNU General Public License for more details.
as  |     **
as  |     ** You should have received a copy of the GNU General Public License
as  |     ** along with KissAs3Fw. If not, see <http://www.gnu.org/licenses/>.
as  |     */
as  | 
as  |        package com . kisscodesystems . KissAs3Fw
as  |        extends BaseSprite
as  |        lines   626
as  | 
as  |     Variables:
as  | 
as  |     // CONSTANTS
as  |     // The line thickness change event string.
as  |        public const EVENT_LINE_THICKNESS_CHANGED : String = "EVENT_LINE_THICKNESS_CHANGED" ;
as  |     // The events of the margin, padding and radius change.
as  |        public const EVENT_MARGIN_CHANGED : String = "EVENT_MARGIN_CHANGED" ;
as  |        public const EVENT_PADDING_CHANGED : String = "EVENT_PADDING_CHANGED" ;
as  |        public const EVENT_RADIUS_CHANGED : String = "EVENT_RADIUS_CHANGED" ;
as  |     // Event strings of the background color changing events.
as  |        public const EVENT_BACKGROUND_BG_COLOR_CHANGED : String = "EVENT_BACKGROUND_BG_COLOR_CHANGED" ;
as  |        public const EVENT_BACKGROUND_FG_COLOR_CHANGED : String = "EVENT_BACKGROUND_FG_COLOR_CHANGED" ;
as  |     // Event string of the changing of the fill alhpa.
as  |        public const EVENT_BACKGROUND_FILL_ALPHA_CHANGED : String = "EVENT_BACKGROUND_FILL_ALPHA_CHANGED" ;
as  |     // The changing of the properties of background image.
as  |        public const EVENT_BACKGROUND_IMAGE_OR_ALIGN_OR_ALPHA_CHANGED : String = "EVENT_BACKGROUND_IMAGE_OR_ALIGN_OR_ALPHA_CHANGED" ;
as  |        public const EVENT_BACKGROUND_LIVE_CHANGED : String = "EVENT_BACKGROUND_LIVE_CHANGED" ;
as  |     // Event strings of the changing of the used textformats.
as  |        public const EVENT_TEXT_FORMAT_BRIGHT_CHANGED : String = "EVENT_TEXT_FORMAT_BRIGHT_CHANGED" ;
as  |        public const EVENT_TEXT_FORMAT_MID_CHANGED : String = "EVENT_TEXT_FORMAT_MID_CHANGED" ;
as  |        public const EVENT_TEXT_FORMAT_DARK_CHANGED : String = "EVENT_TEXT_FORMAT_DARK_CHANGED" ;
as  |     // Event string constants of the coordinate and size changing events.
as  |        public const EVENT_COORDINATES_CHANGED : String = "EVENT_COORDINATES_CHANGED" ;
as  |        public const EVENT_SIZES_CHANGED : String = "EVENT_SIZES_CHANGED" ;
as  |     // These are messages from a widget.
as  |        public const EVENT_WIDGET_CLOSE_ME : String = "EVENT_WIDGET_CLOSE_ME" ;
as  |        public const EVENT_WIDGET_DRAG_START : String = "EVENT_WIDGET_DRAG_START" ;
as  |        public const EVENT_WIDGET_DRAG_STOP : String = "EVENT_WIDGET_DRAG_STOP" ;
as  |     // Event string of the changing of the orientation of widgets or other UI elements.
as  |        public const EVENT_ORIENTATIONS_CHANGED : String = "EVENT_ORIENTATIONS_CHANGED" ;
as  |     // Event string of the changing of the actual used language code of the application.
as  |     // Used in TextStock.
as  |        public const EVENT_LANG_CODE_CHANGED : String = "EVENT_LANG_CODE_CHANGED" ;
as  |     // When a base scroll notifies other objects about the changing of the content position.
as  |        public const EVENT_CONTENT_POSITION_CHANGED : String = "EVENT_CONTENT_POSITION_CHANGED" ;
as  |     // The events of the cache begin and end
as  |        public const EVENT_CONTENT_CACHE_BEGIN : String = "EVENT_CONTENT_CACHE_BEGIN" ;
as  |     // When a click event has occurred on the objects.
as  |        public const EVENT_CLICK : String = "EVENT_CLICK" ;
as  |     // The value of the object has been changed.
as  |        public const EVENT_CHANGED : String = "EVENT_CHANGED" ;
as  |     // The object has been closed.
as  |        public const EVENT_CLOSED : String = "EVENT_CLOSED" ;
as  |     // Events of the reaching the bottom.
as  |        public const BOTTOM_REACHED : String = "BOTTOM_REACHED" ;
as  |     // Empty html paragraph
as  |        public const EMPTY_HTML_PARAGRAPH : String = "<p>&nbsp;</p>" ;
as  |     // Color constants
as  |        public const COLOR_RGB_INPUT_ZEROS : String = "000000" ;
as  |        public const COLOR_HEX_TO_NUMBER_STRING : String = "0x" ;
as  |        public const COLOR_MAX_CHARS_RGB_INPUT : int = 6 ;
as  |        public const COLOR_DRAWED_COLOR_ARRAY_DARK : Number = 0x000000 ;
as  |        public const COLOR_DRAWED_COLOR_ARRAY_BRIGHT : Number = 0xffffff ;
as  |        public const COLOR_DRAWED_ALPHA_ARRAY : Array = new Array ( "1" , "1" , "1" ) ;
as  |        public const COLOR_DRAWED_RATIO_ARRAY : Array = new Array ( "5" , "126" , "250" ) ;
as  |     // This is the number where the color of the application changes from dark to bright.
as  |     // See the logic in brightShadowToApply.
as  |        public const TEXT_BRIGHT_DARK_CHANGE_BOUND : int = 4 * 16 ;
as  |     // The enabled characters of the hexadecimal input
as  |        public const TEXT_ENABLED_CHARS_HEX : String = "0-9a-fA-F" ;
as  |     // The types of the usable drawn buttons.
as  |        public const DRAW_BUTTON_TYPE_SETTINGS : String = "DRAW_BUTTON_TYPE_SETTINGS" ;
as  |        public const DRAW_BUTTON_TYPE_MENU : String = "DRAW_BUTTON_TYPE_MENU" ;
as  |        public const DRAW_BUTTON_TYPE_WIDGET_MOVE : String = "DRAW_BUTTON_TYPE_WIDGET_MOVE" ;
as  |        public const DRAW_BUTTON_TYPE_WIDGETS_PREV : String = "DRAW_BUTTON_TYPE_WIDGETS_PREV" ;
as  |        public const DRAW_BUTTON_TYPE_WIDGETS_NEXT : String = "DRAW_BUTTON_TYPE_WIDGETS_NEXT" ;
as  |        public const DRAW_BUTTON_TYPE_WIDGETS_LIST : String = "DRAW_BUTTON_TYPE_WIDGETS_LIST" ;
as  |     // The drop shadow object to the texts and other objects.
as  |     // These are the objects usable everywhere.
as  |     // Have to be initialized now!
as  |        public const TEXT_DROP_SHADOW_ARRAY_DARK : Array = [ new DropShadowFilter ( 1 , 45 , 0x000000 , 1 , 1 , 1 , 1 , 2 ) ] ;
as  |        public const TEXT_DROP_SHADOW_ARRAY_BRIGHT : Array = [ new DropShadowFilter ( 1 , 45 , 0xffffff , 1 , 1 , 1 , 1 , 2 ) ] ;
as  |     // THE BACKGROUND AND THE FOREGROUND PLUS MIDDLEGROUND OF THIS APP:
as  |     // FOREGROUND: ALERTS AND LIST OF WIDGETS,
as  |     // MIDDLEGROUND: HEADER, FOOTER, WIDGETS AND THE SETTINGS AND MENU BUTTONS AND PANELS,
as  |     // BACKGROUND: BACKGROUND IMAGING, BACKGROUND COLORING.
as  |     // This is the whole background object.
as  |        private var background : Background = null ;
as  |     // This contains header, footer and a widgets layer, the panel and buttons of settings and menu.
as  |        private var middleground : Middleground = null ;
as  |     // This is the foreground layer, contains the alerts and informations layer.
as  |        private var foreground : Foreground = null ;
as  |     // OTHER PROPERTIES.
as  |     // This holds all of the texts usable in this app.
as  |        protected var texts : Texts = null ;
as  |     // The object of the stored texts.
as  |        protected var textStock : TextStock = null ;
as  |     // The properties of this application.
as  |        protected var propsApp : PropsApp = null ;
as  |        protected var propsDyn : PropsDyn = null ;
as  |     // The menu items of this applicaiton.
as  |        protected var menuxml : String = "" ;
as  |     // To hide unnecessary right click menu elements and to add new ones.
as  |        private var customContextMenu : ContextMenu = null ;
as  |        private var customContextLabels : Array = new Array ( ) ;
as  |        private var customContextUrls : Array = new Array ( ) ;
as  |        private var customContextHandlers : Array = new Array ( ) ;
as  |     // For debugging the application. Usage: application . debug ( the_message ) ; from everywhere of the fw.
as  |        private var debugTextField : TextField = null ;
as  | 
as  |     Functions:
as  | 
as  |     /*
as  |     ** The constructor, does the initialization of the whole application.
as  |     */
as  |PU      public function Application ( ) : void
as  | 
as  |     /*
as  |     ** The creation of the layers. Has to be called after the reinitialization
as  |     ** of the texts textstock propsapp and propsdyn.
as  |     */
as  |        protected function createLayers ( ) : void
as  | 
as  |     /*
as  |     ** This method will be called if the object is being added to the stage.
as  |     ** A lot of initializing happens here because the stage is available
as  |     ** from here.
as  |     */
as  |        override protected function addedToStage ( e : Event ) : void
as  | 
as  |        override protected function removedFromStage ( e : Event ) : void
as  | 
as  |     /*
as  |     ** Gets the menu items of the application.
as  |     */
as  |PU      public function getMenuxml ( ) : String
as  | 
as  |     /*
as  |     ** Handles the event of the changing of the selected menu item.
as  |     ** In this case, only an alert will be created.
as  |     ** So here is the basic example of how to create an alert using this fw.
as  |     */
as  |PU      public function handleMenuSelect ( selectedItem : String ) : void
as  | 
as  |     /*
as  |     ** Prepares the displaying of this application to smartphone friendly.
as  |     */
as  |PU      public function toSmartphone ( ) : void
as  | 
as  |     /*
as  |     ** Sets the name of the application.
as  |     ** This writes a label onto the header area of the application.
as  |     */
as  |        protected function setApplicationName ( ) : void
as  | 
as  |     /*
as  |     ** Adds new url item to the context menu.
as  |     ** A label (the menu item) and the url to navigate onto can be specified.
as  |     ** The third is the reference to a custom handler function, can be null.
as  |     */
as  |PU      public function addNewContextMenuItem ( label : String , url : String , handler : Function ) : void
as  | 
as  |     /*
as  |     ** Removes a custom context menu item specified by its index.
as  |     */
as  |PU      public function removeContextMenuItem ( i : int ) : void
as  | 
as  |     /*
as  |     ** The event listener handles the clicks on the context menu items.
as  |     ** This will open a browser and will navigate to the url.
as  |     */
as  |        private function contextMenuUrlItemClicked ( e : ContextMenuEvent ) : void
as  | 
as  |     /*
as  |     ** Happens when the stage has been resized.
as  |     */
as  |        private function stageResized ( e : Event ) : void
as  | 
as  |     /*
as  |     ** Calculating the font size from the stage.
as  |     */
as  |PU      public function calcFontSizeFromStageSize ( ) : int
as  | 
as  |     /*
as  |     ** Setting the size of the components of these object
as  |     ** according to the actual size of the stage.
as  |     */
as  |        private function setSizeFromStageSize ( ) : void
as  | 
as  |     /*
as  |     ** The set size methods have to have no effects.
as  |     */
as  |PU      override public function setsw ( newsw : int ) : void { }
as  | 
as  |PU      override public function setsh ( newsh : int ) : void { }
as  | 
as  |PU      override public function setswh ( newsw : int , newsh : int ) : void { }
as  | 
as  |     /*
as  |     ** Adds a widget into the widgets (located in the middleground).
as  |     */
as  |PU      public function addWidget ( contentId : int , widget : Widget ) : void
as  | 
as  |     /*
as  |     ** Closes a widget (located in the middleground).
as  |     */
as  |PU      public function closeWidget ( widget : Widget ) : void
as  | 
as  |     /*
as  |     ** Gets the background object.
as  |     */
as  |PU      public function getBackground ( ) : Background
as  | 
as  |     /*
as  |     ** Gets the middleground object.
as  |     */
as  |PU      public function getMiddleground ( ) : Middleground
as  | 
as  |     /*
as  |     ** Gets the foreground object.
as  |     */
as  |PU      public function getForeground ( ) : Foreground
as  | 
as  |     /*
as  |     ** Gets the texts object.
as  |     */
as  |PU      public function getTexts ( ) : Texts
as  | 
as  |     /*
as  |     ** Gets the textStock object.
as  |     */
as  |PU      public function getTextStock ( ) : TextStock
as  | 
as  |     /*
as  |     ** Gets the properties.
as  |     */
as  |PU      public function getPropsApp ( ) : PropsApp
as  | 
as  |PU      public function getPropsDyn ( ) : PropsDyn
as  | 
as  |     /*
as  |     ** The bright or the dark shadow should be applied to the specific color?
as  |     */
as  |PU      public function brightShadowToApply ( color : String ) : Boolean
as  | 
as  |     /*
as  |     ** Calling of the recalculation of the contents if the object or its parent is ContentSingle.
as  |     */
as  |PU      public function callContentSizeRecalc ( theObject : DisplayObject ) : void
as  | 
as  |     /*
as  |     ** Debugging function.
as  |     ** Creates a textfield if not exists and writes (appends) the text into it.
as  |     */
as  |PU      public function debug ( s : String ) : void
as  | 
as  |     /*
as  |     ** Destroying this application.
as  |     */
as  |PU      override public function destroy ( ) : void
as  | 
    +---------------------------------------------------------------------------
    | com\kisscodesystems\KissAs3Fw\app
    +---------------------------------------------------------------------------
as  | com\kisscodesystems\KissAs3Fw\app\Background.as
as  | 
as  |     Background
as  | 
as  |     /*
as  |     ** This class is a part of the KissAs3Fw actionscrip framework.
as  |     ** See the header comment lines of the
as  |     ** com . kisscodesystems . KissAs3Fw . Application
as  |     ** The whole framework is available at:
as  |     ** https://github.com/kisscodesystems/KissAs3Fw
as  |     ** Demo applications:
as  |     ** https://github.com/kisscodesystems/KissAs3FwDemos
as  |     **
as  |     ** DESCRIPTION:
as  |     ** Background.
as  |     ** This class is the background of the application.
as  |     ** Handles the painting of the background and the moving of the background image.
as  |     **
as  |     ** MAIN FEATURES:
as  |     ** - contains the layers:
as  |     **     - a backShape shape which can be colored to getAppBackgroundBgColor ( ) , alpha : 1
as  |     **     - a backgroundImageShape which can be painted with the background image, alpha: 0 - 1
as  |     **     - a backgroundColorShape  which can be colored to getAppBackgroundBgColor ( ) and getAppBackgroundFgColor ( ) , alpha: 0 - 1
as  |     ** - live property: the background image can follow the mouse pointer slowly
as  |     ** - the background is fixed automatically if a color object steals pixel from the stage
as  |     */
as  | 
as  |        package com . kisscodesystems . KissAs3Fw . app
as  |        extends BaseSprite
as  |        lines   470
as  | 
as  |     Variables:
as  | 
as  |     // The back of the whole background.
as  |        private var backShape : BaseShape = null ;
as  |     // This is the shape to be painted with the background bitmap data.
as  |        private var backgroundImageShape : BaseShape = null ;
as  |     // This is the base shape object of coloring the background.
as  |        private var backgroundColorShape : BaseShape = null ;
as  |     // The matrix to paint.
as  |        private var matrix : Matrix = null ;
as  |     // These temporary width and height values are to help the scaling of the
as  |     // background image. The image has to fill the area of stage depending on
as  |     // the current background aligning.
as  |        private var tempWidth : int = 0 ;
as  |        private var tempHeight : int = 0 ;
as  |     // These are the target coordinates where the live background will be moved into.
as  |        private var targetx : int = 0 ;
as  |        private var targety : int = 0 ;
as  |     // These width and height values are for correcting the actual size of stage.
as  |     // If the background is live then the size of the background image has to be
as  |     // a little larger than the actual size of the stage.
as  |        private var swCorrected : int = 0 ;
as  |        private var shCorrected : int = 0 ;
as  |     // A pixel stealing from a color object is in progress or not.
as  |        private var pixelStealing : Boolean = false ;
as  | 
as  |     Functions:
as  | 
as  |     /*
as  |     ** Initializing this object. The not null app reference is necessary as usual.
as  |     */
as  |PU      public function Background ( applicationRef : Application ) : void
as  | 
as  |     /*
as  |     ** Overwriting the addedToStage.
as  |     */
as  |        override protected function addedToStage ( e : Event ) : void
as  | 
as  |     /*
as  |     ** Owerwriting the removedFromStage.
as  |     */
as  |        override protected function removedFromStage ( e : Event ) : void
as  | 
as  |     /*
as  |     ** This method has been registered to the mouse down
as  |     */
as  |        private function stageMouseDown ( e : MouseEvent ) : void
as  | 
as  |     /*
as  |     ** The filler color (background) of the background has been changed.
as  |     */
as  |        private function backgroundBgColorChanged ( e : Event ) : void
as  | 
as  |     /*
as  |     ** The filler color (foreground) of the background has been changed.
as  |     */
as  |        private function backgroundFgColorChanged ( e : Event ) : void
as  | 
as  |     /*
as  |     ** The alpha of the filler color of the background has been changed.
as  |     */
as  |        private function fillAlphaChanged ( e : Event ) : void
as  | 
as  |     /*
as  |     ** The image of the background or the align or the alpha of the background image has been changed.
as  |     */
as  |        private function backgroundImageChanged ( e : Event ) : void
as  | 
as  |     /*
as  |     ** The live property of the background has been changed.
as  |     ** Live true means: the background can follow slowly the mouse pointer.
as  |     ** (So the background image is a little bit larger than the size of the stage.)
as  |     */
as  |        private function backgroundLiveChanged ( e : Event ) : void
as  | 
as  |     /*
as  |     ** This is the method runs after the changing of the size of this object.
as  |     */
as  |        override protected function doSizeChanged ( ) : void
as  | 
as  |     /*
as  |     ** A color object is stealing a pixel now so everybody have to stay in its current position.
as  |     */
as  |PU      public function stealPixel ( b : Boolean ) : void
as  | 
as  |     /*
as  |     ** Determining of the movable property of the background image.
as  |     ** The bg image can move if
as  |     ** - pixel stealing is not in progress from a color object.
as  |     ** - it is live
as  |     ** - and not none the align of the bg
as  |     ** - and if the fill alpha is smaller than 1.
as  |     ** - the alpha of the background image is greather than 0
as  |     */
as  |        private function canBackgroundMove ( ) : Boolean
as  | 
as  |     /*
as  |     ** Registering for the background image moving if possible,
as  |     ** and unregistering if not.
as  |     */
as  |        private function registerOrUnregisterCanBackgroundMove ( ) : void
as  | 
as  |     /*
as  |     ** Drawing all of the background objects.
as  |     */
as  |        private function backgroundRedraw ( ) : void
as  | 
as  |     /*
as  |     ** Redrawing the color shape.
as  |     */
as  |        private function drawBackgroundColorShape ( ) : void
as  | 
as  |     /*
as  |     ** Draws the back.
as  |     */
as  |        private function drawBackShape ( ) : void
as  | 
as  |     /*
as  |     ** Redrawing the image shape.
as  |     */
as  |        private function drawBackgroundImageShape ( ) : void
as  | 
as  |     /*
as  |     ** Unregisters the positioning of the background image from the mouse move event.
as  |     */
as  |        private function unregisterMouseMoveFromBackgroundLive ( ) : void
as  | 
as  |     /*
as  |     ** Registers the positioning of the background image to the mouse move event.
as  |     */
as  |        private function registerMouseMoveForBackgroundLive ( ) : void
as  | 
as  |     /*
as  |     ** If the background image can be moved then this function has to be registered to the mouse move event.
as  |     */
as  |        private function posBackgroundImageForBackgroundLive ( e : MouseEvent ) : void
as  | 
as  |     /*
as  |     ** Registers the enterFrameBackgroundImageShapePos function to the enter frame event.
as  |     */
as  |        private function registerEnterFrameForBackgroundLive ( ) : void
as  | 
as  |     /*
as  |     ** Unregisters the enterFrameBackgroundImageShapePos function from the enter frame event.
as  |     */
as  |        private function unregisterEnterFrameForBackgroundLive ( ) : void
as  | 
as  |     /*
as  |     ** This function is called by enter frame if it has been registered.
as  |     ** Positions the background image into the correct position.
as  |     ** (It depends on the targetx and targety set before in the posBackgroundImageForBackgroundLive.)
as  |     */
as  |        private function enterFrameBackgroundImageShapePos ( e : Event ) : void
as  | 
as  |     /*
as  |     ** Destroying this object.
as  |     */
as  |PU      override public function destroy ( ) : void
as  | 
    +---------------------------------------------------------------------------
as  | com\kisscodesystems\KissAs3Fw\app\Footer.as
as  | 
as  |     Footer
as  | 
as  |     /*
as  |     ** This class is a part of the KissAs3Fw actionscrip framework.
as  |     ** See the header comment lines of the
as  |     ** com . kisscodesystems . KissAs3Fw . Application
as  |     ** The whole framework is available at:
as  |     ** https://github.com/kisscodesystems/KissAs3Fw
as  |     ** Demo applications:
as  |     ** https://github.com/kisscodesystems/KissAs3FwDemos
as  |     **
as  |     ** DESCRIPTION:
as  |     ** Footer.
as  |     ** This is basically an area at the bottom of the application.
as  |     **
as  |     ** MAIN FEATURES:
as  |     ** - area with background
as  |     ** - can follow the size of the stage automatically
as  |     */
as  | 
as  |        package com . kisscodesystems . KissAs3Fw . app
as  |        extends BaseSprite
as  |        lines   143
as  | 
as  |     Variables:
as  | 
as  |     // The shape object of this.
as  |        private var footerShape : BaseShape = null ;
as  | 
as  |     Functions:
as  | 
as  |     /*
as  |     ** Initializing this object. The not null app reference is necessary as usual.
as  |     */
as  |PU      public function Footer ( applicationRef : Application ) : void
as  | 
as  |     /*
as  |     ** The margin of the application has been changed.
as  |     */
as  |        private function marginChanged ( e : Event ) : void
as  | 
as  |     /*
as  |     ** The radius of the application has been changed.
as  |     */
as  |        private function radiusChanged ( e : Event ) : void
as  | 
as  |     /*
as  |     ** The filler color (background) of the background has been changed.
as  |     */
as  |        private function backgroundBgColorChanged ( e : Event ) : void
as  | 
as  |     /*
as  |     ** The filler color (foreground) of the background has been changed.
as  |     */
as  |        private function backgroundFgColorChanged ( e : Event ) : void
as  | 
as  |     /*
as  |     ** The alpha of the filler color of the background has been changed.
as  |     */
as  |        private function fillAlphaChanged ( e : Event ) : void
as  | 
as  |     /*
as  |     ** Overriding the setsw setsh and setswh functions.
as  |     */
as  |PU      override public function setsw ( newsw : int ) : void { }
as  | 
as  |PU      override public function setsh ( newsh : int ) : void { }
as  | 
as  |PU      override public function setswh ( newsw : int , newsh : int ) : void { }
as  | 
as  |     /*
as  |     ** Redrawing the shape.
as  |     */
as  |PU      public function footerRePosSize ( ) : void
as  | 
as  |     /*
as  |     ** Destroying this application.
as  |     */
as  |PU      override public function destroy ( ) : void
as  | 
    +---------------------------------------------------------------------------
as  | com\kisscodesystems\KissAs3Fw\app\Foreground.as
as  | 
as  |     Foreground
as  | 
as  |     /*
as  |     ** This class is a part of the KissAs3Fw actionscrip framework.
as  |     ** See the header comment lines of the
as  |     ** com . kisscodesystems . KissAs3Fw . Application
as  |     ** The whole framework is available at:
as  |     ** https://github.com/kisscodesystems/KissAs3Fw
as  |     ** Demo applications:
as  |     ** https://github.com/kisscodesystems/KissAs3FwDemos
as  |     **
as  |     ** DESCRIPTION:
as  |     ** Foreground.
as  |     ** This is the object displays the alerts and informations.
as  |     **
as  |     ** MAIN FEATURES:
as  |     ** - Displays alerts (with OK or OK-CANCEL buttons)
as  |     ** - Displays the list of the widgets.
as  |     ** - newer alerts will go the bottom of the contents! (as expectable like in ContentMultiple)
as  |     ** - invisible by default.
as  |     */
as  | 
as  |        package com . kisscodesystems . KissAs3Fw . app
as  |        extends BaseSprite
as  |        lines   383
as  | 
as  |     Variables:
as  | 
as  |     // The background of the elements.
as  |        private var contentMultiple : ContentMultiple = null ;
as  |     // The list of the widgets.
as  |        private var widgetsLabel : TextLabel = null ;
as  |        private var widgetsList : List = null ;
as  |     // The list of the widgets! (on any widget container.)
as  |        private var widgetListIndex : int = - 1 ;
as  |     // The list of the widget container to move the widget into.
as  |        private var widgetMoveIndex : int = - 1 ;
as  |     // The widget to be moved.
as  |        private var widgetToBeMoved : Widget = null ;
as  |        private var contentsLabel : TextLabel = null ;
as  |        private var contentsListPicker : ListPicker = null ;
as  | 
as  |     Functions:
as  | 
as  |     /*
as  |     ** Initializing this object. The not null app reference is necessary as usual.
as  |     */
as  |PU      public function Foreground ( applicationRef : Application ) : void
as  | 
as  |     /*
as  |     ** Creating the multi content if it is not visible at this moment.
as  |     */
as  |        private function createContentMultiple ( ) : void
as  | 
as  |     /*
as  |     ** Clicked elsewhere?
as  |     */
as  |        private function clickedElsewhere ( ) : Boolean
as  | 
as  |     /*
as  |     ** Sets the active index 0.
as  |     */
as  |        private function setActiveIndex0 ( ) : void
as  | 
as  |     /*
as  |     ** Creates a new alert.
as  |     */
as  |PU      public function createAlert ( messageString : String , eventStringOK : Boolean , eventStringCANCEL : Boolean ) : void
as  | 
as  |     /*
as  |     ** Closes an alert found by the message string given before.
as  |     ** Not removing the elements one-by-one because we don't have the references to them,
as  |     ** so just let the content does this for us.
as  |     */
as  |PU      public function closeAlert ( messageString : String ) : void
as  | 
as  |     /*
as  |     ** Creates the list of the widgets.
as  |     */
as  |PU      public function createWidgetsList ( ) : void
as  | 
as  |     /*
as  |     ** Goes to the specific widget.
as  |     */
as  |        private function goToTheWidget ( e : Event ) : void
as  | 
as  |     /*
as  |     ** Automatic removal of the window if the user clicks elsewhere.
as  |     */
as  |        private function cancelWidgetsList ( e : MouseEvent ) : void
as  | 
as  |     /*
as  |     ** Destroys the list of the widgets.
as  |     */
as  |PU      public function closeWidgetsList ( ) : void
as  | 
as  |     /*
as  |     ** Creates the listpicker of the contents.
as  |     */
as  |PU      public function createContentsList ( widget : Widget ) : void
as  | 
as  |     /*
as  |     ** Moves the widget to the specific content.
as  |     */
as  |        private function moveToTheContent ( e : Event ) : void
as  | 
as  |     /*
as  |     ** Automatic removal of the window if the user clicks elsewhere.
as  |     */
as  |        private function cancelMoveListPicker ( e : MouseEvent ) : void
as  | 
as  |     /*
as  |     ** Destroys the listpicker of the contents.
as  |     */
as  |PU      public function closeContentsList ( ) : void
as  | 
as  |     /*
as  |     ** This is the method runs after the changing of the size of this object.
as  |     ** If this has happened then the
as  |     */
as  |        override protected function doSizeChanged ( ) : void
as  | 
as  |     /*
as  |     ** Repos and resize the elements.
as  |     */
as  |        private function reposContentMultiple ( ) : void
as  | 
as  |     /*
as  |     ** The multiple content object sould be removed ahd the visible should be false if no more contents.
as  |     */
as  |        private function setVisibleFalseIfNoMoreObjects ( ) : void
as  | 
as  |     /*
as  |     ** Redrawing the foreground in the correct size.
as  |     */
as  |        protected function foregroundRedraw ( ) : void
as  | 
as  |     /*
as  |     ** Sets its visible.
as  |     ** If this is visible then the background should not be accessible.
as  |     */
as  |        private function setVisible ( b : Boolean ) : void
as  | 
as  |     /*
as  |     ** Destroying this application.
as  |     */
as  |PU      override public function destroy ( ) : void
as  | 
    +---------------------------------------------------------------------------
as  | com\kisscodesystems\KissAs3Fw\app\Header.as
as  | 
as  |     Header
as  | 
as  |     /*
as  |     ** This class is a part of the KissAs3Fw actionscrip framework.
as  |     ** See the header comment lines of the
as  |     ** com . kisscodesystems . KissAs3Fw . Application
as  |     ** The whole framework is available at:
as  |     ** https://github.com/kisscodesystems/KissAs3Fw
as  |     ** Demo applications:
as  |     ** https://github.com/kisscodesystems/KissAs3FwDemos
as  |     **
as  |     ** DESCRIPTION:
as  |     ** Header.
as  |     ** This is basically an area at the top of the application.
as  |     **
as  |     ** MAIN FEATURES:
as  |     ** - area with background
as  |     ** - can follow the size of the stage automatically
as  |     */
as  | 
as  |        package com . kisscodesystems . KissAs3Fw . app
as  |        extends BaseSprite
as  |        lines   151
as  | 
as  |     Variables:
as  | 
as  |     // The shape object of this.
as  |        private var headerShape : BaseShape = null ;
as  | 
as  |     Functions:
as  | 
as  |     /*
as  |     ** Initializing this object. The not null app reference is necessary as usual.
as  |     */
as  |PU      public function Header ( applicationRef : Application ) : void
as  | 
as  |     /*
as  |     ** The margin of the application has been changed.
as  |     */
as  |        private function marginChanged ( e : Event ) : void
as  | 
as  |     /*
as  |     ** The padding of the application has been changed.
as  |     */
as  |        private function paddingChanged ( e : Event ) : void
as  | 
as  |     /*
as  |     ** The radius of the application has been changed.
as  |     */
as  |        private function radiusChanged ( e : Event ) : void
as  | 
as  |     /*
as  |     ** The filler color (background) of the background has been changed.
as  |     */
as  |        private function backgroundBgColorChanged ( e : Event ) : void
as  | 
as  |     /*
as  |     ** The filler color (foreground) of the background has been changed.
as  |     */
as  |        private function backgroundFgColorChanged ( e : Event ) : void
as  | 
as  |     /*
as  |     ** The alpha of the filler color of the background has been changed.
as  |     */
as  |        private function fillAlphaChanged ( e : Event ) : void
as  | 
as  |     /*
as  |     ** Overriding the setsw setsh and setswh functions.
as  |     */
as  |PU      override public function setsw ( newsw : int ) : void { }
as  | 
as  |PU      override public function setsh ( newsh : int ) : void { }
as  | 
as  |PU      override public function setswh ( newsw : int , newsh : int ) : void { }
as  | 
as  |     /*
as  |     ** Redrawing the shape.
as  |     */
as  |PU      public function headerRePosSize ( ) : void
as  | 
as  |     /*
as  |     ** Destroying this application.
as  |     */
as  |PU      override public function destroy ( ) : void
as  | 
    +---------------------------------------------------------------------------
as  | com\kisscodesystems\KissAs3Fw\app\LangSetter.as
as  | 
as  |     LangSetter
as  | 
as  |     /*
as  |     ** This class is a part of the KissAs3Fw actionscrip framework.
as  |     ** See the header comment lines of the
as  |     ** com . kisscodesystems . KissAs3Fw . Application
as  |     ** The whole framework is available at:
as  |     ** https://github.com/kisscodesystems/KissAs3Fw
as  |     ** Demo applications:
as  |     ** https://github.com/kisscodesystems/KissAs3FwDemos
as  |     **
as  |     ** DESCRIPTION:
as  |     ** LangSetter.
as  |     ** Sets the language of the application.
as  |     ** Basically it is a listpicker object with the available languages.
as  |     **
as  |     ** MAIN FEATURES:
as  |     ** - contains a listpicker object with the languages of the capplication.
as  |     ** - changing its value causes the language changing of the app and the
as  |     **   texts specified by a text code will be automatically changed into the
as  |     **   new text value according to the changed language code.
as  |     ** - on the settings panel, or if it does not exist, on the menu panel.
as  |     */
as  | 
as  |        package com . kisscodesystems . KissAs3Fw . app
as  |        extends BaseSprite
as  |        lines   118
as  | 
as  |     Variables:
as  | 
as  |     // The list picker to use to display the languages.
as  |        private var listPicker : ListPicker = null ;
as  | 
as  |     Functions:
as  | 
as  |     /*
as  |     ** Initializing this object. The not null app reference is necessary as usual.
as  |     */
as  |PU      public function LangSetter ( applicationRef : Application ) : void
as  | 
as  |     /*
as  |     ** The list is resized.
as  |     */
as  |        private function listPickerSizesChanged ( e : Event ) : void
as  | 
as  |     /*
as  |     ** Overriding the setsw setsh and setswh functions.
as  |     ** setsh and setswh: should be out of order!
as  |     ** The sh depends on the number of elements to be displayed.
as  |     */
as  |PU      override public function setsw ( newsw : int ) : void
as  | 
as  |PU      override public function setsh ( newsh : int ) : void { }
as  | 
as  |PU      override public function setswh ( newsw : int , newsh : int ) : void { }
as  | 
as  |     /*
as  |     ** Sets the selected index.
as  |     */
as  |PU      public function setSelectedIndex ( i : int ) : void
as  | 
as  |     /*
as  |     ** Override this.
as  |     */
as  |PU      override public function setEnabled ( e : Boolean ) : void
as  | 
as  |     /*
as  |     ** The changing event of the listpicker.
as  |     */
as  |        private function listPickerChanged ( e : Event ) : void
as  | 
as  |     /*
as  |     ** Updates the language codes available in this application.
as  |     */
as  |PU      public function updateLangCodes ( ) : void
as  | 
as  |     /*
as  |     ** Destroying this application.
as  |     */
as  |PU      override public function destroy ( ) : void
as  | 
    +---------------------------------------------------------------------------
as  | com\kisscodesystems\KissAs3Fw\app\Middleground.as
as  | 
as  |     Middleground
as  | 
as  |     /*
as  |     ** This class is a part of the KissAs3Fw actionscrip framework.
as  |     ** See the header comment lines of the
as  |     ** com . kisscodesystems . KissAs3Fw . Application
as  |     ** The whole framework is available at:
as  |     ** https://github.com/kisscodesystems/KissAs3Fw
as  |     ** Demo applications:
as  |     ** https://github.com/kisscodesystems/KissAs3FwDemos
as  |     **
as  |     ** DESCRIPTION:
as  |     ** Middleground.
as  |     ** The header, footer and widgets, the panel of the menu and the settings are here.
as  |     **
as  |     ** MAIN FEATURES:
as  |     ** - holds the header , footer , widgets , settings button , settings panel , menu button , menu panel , application name textfield
as  |     ** - followes the size of the application (stage)
as  |     ** - can be not visible: a blur filter will be applied at this time.
as  |     */
as  | 
as  |        package com . kisscodesystems . KissAs3Fw . app
as  |        extends BaseSprite
as  |        lines   485
as  | 
as  |     Variables:
as  | 
as  |     // This is the objext of the widgets.
as  |     // Every widget used in this application will be added to there.
as  |        private var widgets : Widgets = null ;
as  |     // This is the header and footer base shape objects.
as  |        private var footer : Footer = null ;
as  |        private var header : Header = null ;
as  |     // The height of the the widgetsh.
as  |        private var widgetsh : int = 0 ;
as  |     // The height of the footer and the header will be calculated here.
as  |        private var headerh : int = 0 ;
as  |        private var footerh : int = 0 ;
as  |     // The stuffs of the menu if enabled.
as  |        private var buttonDrawMenu : ButtonDraw = null ;
as  |        private var panelMenu : PanelMenu = null ;
as  |     // The stuffs of the settings if enabled.
as  |        private var buttonDrawSettings : ButtonDraw = null ;
as  |        private var panelSettings : PanelSettings = null ;
as  |     // The label to display the name of the application.
as  |        private var textLabelApplicationName : TextLabel = null ;
as  |     // This object should be blured or not.
as  |     // (visible1: not blured, not visible1: blur filter should be applied.)
as  |        private var visible1 : Boolean = true ;
as  | 
as  |     Functions:
as  | 
as  |     /*
as  |     ** Initializing this object. The not null app reference is necessary as usual.
as  |     */
as  |PU      public function Middleground ( applicationRef : Application ) : void
as  | 
as  |     /*
as  |     ** Sets the name of the application.
as  |     ** This writes a label into the header of the application.
as  |     */
as  |        private function createApplicationNameTextField ( ) : void
as  | 
as  |PU      public function setApplicationName ( ) : void
as  | 
as  |        private function resizeReposApplicationName ( e : Event = null ) : void
as  | 
as  |     /*
as  |     ** Gets the event of the changing of the menu.
as  |     */
as  |        private function panelMenuHandler ( e : Event ) : void
as  | 
as  |     /*
as  |     ** Sets the smartphone mode.
as  |     ** Currently: the panel settings and the widgets objects support this.
as  |     */
as  |PU      public function toSmartphone ( ) : void
as  | 
as  |     /*
as  |     ** Override this setEnabled meghod: the buttons will be enabled or disabled.
as  |     */
as  |PU      override public function setEnabled ( e : Boolean ) : void
as  | 
as  |     /*
as  |     ** Sets its clear property instead of visible (always has to be visible).
as  |     ** If this is not visible then a filter should be applied.
as  |     ** The setVisible of the Foreground should be called instead of this!
as  |     */
as  |PU      public function setVisible ( b : Boolean ) : void
as  | 
as  |     /*
as  |     ** Sets the lang code.
as  |     */
as  |PU      public function setLangCode ( langCode : String ) : void
as  | 
as  |     /*
as  |     ** Sets the orientation of the widgets in this app.
as  |     */
as  |PU      public function setWidgetsOrientation ( widgetOrientation : String ) : void
as  | 
as  |     /*
as  |     ** Sets the predefined displaying styles.
as  |     */
as  |PU      public function setDisplayingStyle ( styleName : String ) : void
as  | 
as  |     /*
as  |     ** Backgrounds images can be added -> it may be necessary to update the list.
as  |     */
as  |PU      public function setElementsOfBackgroundImageOBJ ( ) : void
as  | 
as  |     /*
as  |     ** Lang codes can be added -> it may be necessary to update the list.
as  |     */
as  |PU      public function setElementsOfLangCodesOBJ ( ) : void
as  | 
as  |     /*
as  |     ** Displaying styles can be added -> it may be necessary to update the list.
as  |     */
as  |PU      public function setElementsOfDisplayingStylesOBJ ( ) : void
as  | 
as  |     /*
as  |     ** Shows the actual widget container.
as  |     */
as  |PU      public function showWidgetContainer ( i : int ) : void
as  | 
as  |     /*
as  |     ** Updates the menuxml.
as  |     */
as  |PU      public function updateMenuxml ( ) : void
as  | 
as  |     /*
as  |     ** The textformat of the mid text type has been changed.
as  |     */
as  |        private function stuffsChanged ( e : Event ) : void
as  | 
as  |     /*
as  |     ** The menu and the settings button has been clicked.
as  |     */
as  |        private function buttonDrawMenuClick ( e : Event ) : void
as  | 
as  |PU      public function openPanelMenu ( ) : void
as  | 
as  |        private function buttonDrawSettingsClick ( e : Event ) : void
as  | 
as  |PU      public function openPanelSettings ( ) : void
as  | 
as  |     /*
as  |     ** The menu or the settings panel has been closed.
as  |     */
as  |        private function panelMenuClosed ( e : Event ) : void
as  | 
as  |        private function panelSettingsClosed ( e : Event ) : void
as  | 
as  |     /*
as  |     ** The resizing and repositioning of stuffs of menu and settings.
as  |     */
as  |        private function reposResizeStuffs ( ) : void
as  | 
as  |     /*
as  |     ** Gets the header height.
as  |     */
as  |PU      public function getHeaderh ( ) : int
as  | 
as  |     /*
as  |     ** Gets the footer height.
as  |     */
as  |PU      public function getFooterh ( ) : int
as  | 
as  |     /*
as  |     ** Gets the widgets height.
as  |     */
as  |PU      public function getWidgetsh ( ) : int
as  | 
as  |     /*
as  |     ** Gets the header.
as  |     */
as  |PU      public function getHeader ( ) : Header
as  | 
as  |     /*
as  |     ** Gets the footer.
as  |     */
as  |PU      public function getFooter ( ) : Footer
as  | 
as  |     /*
as  |     ** Gets the widgets.
as  |     */
as  |PU      public function getWidgets ( ) : Widgets
as  | 
as  |     /*
as  |     ** Adds a widget into the widgets.
as  |     */
as  |PU      public function addWidget ( contentId : int , widget : Widget ) : void
as  | 
as  |     /*
as  |     ** Closes a widget.
as  |     */
as  |PU      public function closeWidget ( widget : Widget ) : void
as  | 
as  |     /*
as  |     ** This is the method runs after the changing of the size of this object.
as  |     */
as  |        override protected function doSizeChanged ( ) : void
as  | 
as  |     /*
as  |     ** Destroying this application.
as  |     */
as  |PU      override public function destroy ( ) : void
as  | 
    +---------------------------------------------------------------------------
as  | com\kisscodesystems\KissAs3Fw\app\PanelMenu.as
as  | 
as  |     PanelMenu
as  | 
as  |     /*
as  |     ** This class is a part of the KissAs3Fw actionscrip framework.
as  |     ** See the header comment lines of the
as  |     ** com . kisscodesystems . KissAs3Fw . Application
as  |     ** The whole framework is available at:
as  |     ** https://github.com/kisscodesystems/KissAs3Fw
as  |     ** Demo applications:
as  |     ** https://github.com/kisscodesystems/KissAs3FwDemos
as  |     **
as  |     ** DESCRIPTION:
as  |     ** PanelMenu.
as  |     ** The panel of the menu which can be visible or not.
as  |     ** Visible if the user clicks on the menu button.
as  |     ** Contains a langSetter object if the settings panel is disabled.
as  |     **
as  |     ** MAIN FEATURES:
as  |     ** - displays the menu (from xml)
as  |     ** - sets the application language if the settings panel is disabled.
as  |     */
as  | 
as  |        package com . kisscodesystems . KissAs3Fw . app
as  |        extends BasePanel
as  |        lines   185
as  | 
as  |     Variables:
as  | 
as  |     // The lang setter object.
as  |        private var langSetter : LangSetter = null ;
as  |     // The xml displayer object to display the menu.
as  |        private var xmlLister : XmlLister = null ;
as  | 
as  |     Functions:
as  | 
as  |     /*
as  |     ** Initializing this object. The not null app reference is necessary as usual.
as  |     */
as  |PU      public function PanelMenu ( applicationRef : Application ) : void
as  | 
as  |     /*
as  |     ** The line thickness of the application has been changed.
as  |     */
as  |        private function lineThicknessChanged ( e : Event ) : void
as  | 
as  |     /*
as  |     ** The margin of the application has been changed.
as  |     */
as  |        private function marginChanged ( e : Event ) : void
as  | 
as  |     /*
as  |     ** Overwritting the setting of the width.
as  |     */
as  |        override protected function doSizeChanged ( ) : void
as  | 
as  |     /*
as  |     ** Override setEnabled: the xmllister and the langsetter have to be disabled or enabled.
as  |     */
as  |PU      override public function setEnabled ( e : Boolean ) : void
as  | 
as  |     /*
as  |     ** The xml lister has been changed.
as  |     */
as  |        private function xmlListerChanged ( e : Event ) : void
as  | 
as  |     /*
as  |     ** Gets the active menu item.
as  |     */
as  |PU      public function getSelectedItem ( ) : String
as  | 
as  |     /*
as  |     ** One of the elements has been resized.
as  |     */
as  |        private function elementsResize ( e : Event ) : void
as  | 
as  |     /*
as  |     ** Resizibng and repositioning all of the elements.
as  |     */
as  |        private function resizeReposAll ( ) : void
as  | 
as  |     /*
as  |     ** Update the menu.
as  |     */
as  |PU      public function updateMenuxml ( ) : void
as  | 
as  |     /*
as  |PU   ** This would be in a public function because more languages are available to add later.
as  |     */
as  |PU      public function updateLangCodes ( ) : void
as  | 
as  |     /*
as  |     ** Destroying this application.
as  |     */
as  |PU      override public function destroy ( ) : void
as  | 
    +---------------------------------------------------------------------------
as  | com\kisscodesystems\KissAs3Fw\app\PanelSettings.as
as  | 
as  |     PanelSettings
as  | 
as  |     /*
as  |     ** This class is a part of the KissAs3Fw actionscrip framework.
as  |     ** See the header comment lines of the
as  |     ** com . kisscodesystems . KissAs3Fw . Application
as  |     ** The whole framework is available at:
as  |     ** https://github.com/kisscodesystems/KissAs3Fw
as  |     ** Demo applications:
as  |     ** https://github.com/kisscodesystems/KissAs3FwDemos
as  |     **
as  |     ** DESCRIPTION:
as  |     ** PanelSettings.
as  |     ** The panel of the settings stuff will be visible if the user clicks on the settings button.
as  |     **
as  |     ** MAIN FEATURES:
as  |     ** - handles:
as  |     **   - language
as  |     **   - widget orientation
as  |     **   - displaying styles
as  |     **   - changing of all of the modifiable properties of this app.
as  |     */
as  | 
as  |        package com . kisscodesystems . KissAs3Fw . app
as  |        extends BasePanel
as  |        lines   928
as  | 
as  |     Variables:
as  | 
as  |     // The identifiers of the contents are:
as  |        private var indexGeneral : int = - 1 ;
as  |        private var indexLining : int = - 1 ;
as  |        private var indexColoring : int = - 1 ;
as  |        private var indexImaging : int = - 1 ;
as  |        private var indexFonting : int = - 1 ;
as  |        private var indexAbout : int = - 1 ;
as  |     // The list picker should get the width of the panel as its:
as  |        private const listPickerFAC : Number = 0.42 ;
as  |     // The number of items to be visible in the opened list picker:
as  |        private const listPickerCNT : int = 5 ;
as  |     // langCode
as  |        private var langCodeLAB : TextLabel = null ;
as  |        private var langCodeOBJ : LangSetter = null ;
as  |     // predefined disdplaying styles
as  |        private var displayingStyleLAB : TextLabel = null ;
as  |        private var displayingStyleOBJ : ListPicker = null ;
as  |     // The number of the widget containers.
as  |        private var numOfWidgetcontainersLAB : TextLabel = null ;
as  |        private var numOfWidgetcontainersOBJ : ListPicker = null ;
as  |        private var numOfWidgetcontainersARR : Array = null ;
as  |     // The current widget container.
as  |        private var currWidgetcontainerLAB : TextLabel = null ;
as  |        private var currWidgetcontainerOBJ : ListPicker = null ;
as  |        private var currWidgetcontainerARR : Array = null ;
as  |     // appWidgetsOrientation
as  |        private var appWidgetsOrientationLAB : TextLabel = null ;
as  |        private var appWidgetsOrientationOBJ : ListPicker = null ;
as  |     // appLineThickness
as  |        private var appLineThicknessLAB : TextLabel = null ;
as  |        private var appLineThicknessOBJ : Potmet = null ;
as  |        private const appLineThicknessMIN : Number = 1 ;
as  |        private const appLineThicknessMAX : Number = 5 ;
as  |        private const appLineThicknessINC : Number = 1 ;
as  |     // appMargin
as  |        private var appMarginLAB : TextLabel = null ;
as  |        private var appMarginOBJ : Potmet = null ;
as  |        private const appMarginMIN : Number = 0 ;
as  |        private const appMarginMAX : Number = 30 ;
as  |        private const appMarginINC : Number = 1 ;
as  |     // appMargin
as  |        private var appPaddingLAB : TextLabel = null ;
as  |        private var appPaddingOBJ : Potmet = null ;
as  |        private const appPaddingMIN : Number = 0 ;
as  |        private const appPaddingMAX : Number = 10 ;
as  |        private const appPaddingINC : Number = 1 ;
as  |     // appRadius0, 1
as  |        private var appRadiusLAB : TextLabel = null ;
as  |        private var appRadiusOBJ0 : Potmet = null ;
as  |        private var appRadiusOBJ1 : Potmet = null ;
as  |        private const appRadiusMIN : Number = 0 ;
as  |        private const appRadiusMAX : Number = 20 ;
as  |        private const appRadiusINC : Number = 1 ;
as  |     // appBackgroundBgColor
as  |        private var appBackgroundBgColorLAB : TextLabel = null ;
as  |        private var appBackgroundBgColorOBJ : ColorPicker = null ;
as  |     // appBackgroundFgColor
as  |        private var appBackgroundFgColorLAB : TextLabel = null ;
as  |        private var appBackgroundFgColorOBJ : ColorPicker = null ;
as  |     // appBackgroundFillAlpha
as  |        private var appBackgroundFillAlphaLAB : TextLabel = null ;
as  |        private var appBackgroundFillAlphaOBJ : Potmet = null ;
as  |        private const appBackgroundFillAlphaMIN : Number = 0 ;
as  |        private const appBackgroundFillAlphaMAX : Number = 1 ;
as  |        private const appBackgroundFillAlphaINC : Number = 0.01 ;
as  |     // appBackgroundImage
as  |        private var appBackgroundImageLAB : TextLabel = null ;
as  |        private var appBackgroundImageOBJ : ListPicker = null ;
as  |     // appBackgroundAlign
as  |        private var appBackgroundAlignLAB : TextLabel = null ;
as  |        private var appBackgroundAlignOBJ : ListPicker = null ;
as  |     // appBackgroundAlpha
as  |        private var appBackgroundAlphaLAB : TextLabel = null ;
as  |        private var appBackgroundAlphaOBJ : Potmet = null ;
as  |        private const appBackgroundAlphaMIN : Number = 0 ;
as  |        private const appBackgroundAlphaMAX : Number = 1 ;
as  |        private const appBackgroundAlphaINC : Number = 0.01 ;
as  |     // appBackgroundLive
as  |        private var appBackgroundLiveOBJ : Switcher = null ;
as  |     // appFontFace
as  |        private var appFontFaceLAB : TextLabel = null ;
as  |        private var appFontFaceOBJ : ListPicker = null ;
as  |     // appFontSize
as  |        private var appFontSizeLAB : TextLabel = null ;
as  |        private var appFontSizeOBJ : ListPicker = null ;
as  |     // appFontColorBright
as  |        private var appFontColorBrightOBJ : ColorPicker = null ;
as  |     // appFontColorBright
as  |        private var appFontColorMidOBJ : ColorPicker = null ;
as  |     // appFontColorBright
as  |        private var appFontColorDarkOBJ : ColorPicker = null ;
as  |        private var appFontColorsLAB : TextLabel = null ;
as  |     // appFontBold
as  |        private var appFontBoldOBJ : Switcher = null ;
as  |     // appFontItalic
as  |        private var appFontItalicOBJ : Switcher = null ;
as  |     // ABOUT
as  |        private var applicationNameLAB : TextLabel = null ;
as  |        private var applicationVersionLAB : TextLabel = null ;
as  |        private var applicationReleaseDateLAB : TextLabel = null ;
as  | 
as  |     Functions:
as  | 
as  |     /*
as  |     ** Initializing this object. The not null app reference is necessary as usual.
as  |     */
as  |PU      public function PanelSettings ( applicationRef : Application ) : void
as  | 
as  |     /*
as  |     ** Override this.
as  |     */
as  |PU      override public function setEnabled ( e : Boolean ) : void
as  | 
as  |     /*
as  |     ** The creation of the elements.
as  |     */
as  |        private function createElements ( ) : void
as  | 
as  |     /*
as  |     ** To smartphone mode.
as  |     */
as  |PU      public function toSmartphone ( ) : void
as  | 
as  |     /*
as  |PU   ** This would be in a public function because more background images are available to add later.
as  |     */
as  |PU      public function setElementsOfBackgroundImageOBJ ( ) : void
as  | 
as  |     /*
as  |PU   ** This would be in a public function because more languages are available to add later.
as  |     */
as  |PU      public function setElementsOfLangCodesOBJ ( ) : void
as  | 
as  |     /*
as  |PU   ** This would be in a public function because more languages are available to add later.
as  |     */
as  |PU      public function setElementsOfDisplayingStylesOBJ ( ) : void
as  | 
as  |     /*
as  |     ** Sets the elements of the curr widget container.
as  |     ** (It depends on the max number of widget containers selected by the user.)
as  |     */
as  |        private function setArraysCurrWidgetcontainerOBJ ( ) : void
as  | 
as  |     /*
as  |PU   ** This would be in a public function because more fonts are available to add later.
as  |     */
as  |PU      public function setElementsOfAppFontFacesOBJ ( ) : void
as  | 
as  |     /*
as  |     ** Shows the actual widget container.
as  |     */
as  |PU      public function showWidgetContainer ( i : int ) : void
as  | 
as  |     /*
as  |     ** The listener functions to set the properties of the application.
as  |     */
as  |        private function displayingStyleOBJChanged ( e : Event ) : void
as  | 
as  |        private function numOfWidgetcontainersOBJChanged ( e : Event ) : void
as  | 
as  |        private function currWidgetcontainerOBJChanged ( e : Event ) : void
as  | 
as  |        private function appWidgetsOrientationOBJChanged ( e : Event ) : void
as  | 
as  |        private function appLineThicknessOBJchanged ( e : Event ) : void
as  | 
as  |        private function appMarginOBJchanged ( e : Event ) : void
as  | 
as  |        private function appPaddingOBJchanged ( e : Event ) : void
as  | 
as  |        private function appRadiusOBJ0changed ( e : Event ) : void
as  | 
as  |        private function appRadiusOBJ1changed ( e : Event ) : void
as  | 
as  |        private function appBackgroundBgColorOBJChanged ( e : Event ) : void
as  | 
as  |        private function appBackgroundFgColorOBJChanged ( e : Event ) : void
as  | 
as  |        private function appBackgroundFillAlphaOBJchanged ( e : Event ) : void
as  | 
as  |        private function appBackgroundImageOBJChanged ( e : Event ) : void
as  | 
as  |        private function appBackgroundAlignOBJChanged ( e : Event ) : void
as  | 
as  |        private function appBackgroundAlphaOBJchanged ( e : Event ) : void
as  | 
as  |        private function appBackgroundLiveOBJChanged ( e : Event ) : void
as  | 
as  |        private function appFontFaceOBJChanged ( e : Event ) : void
as  | 
as  |        private function appFontSizeOBJChanged ( e : Event ) : void
as  | 
as  |        private function appFontColorBrightOBJChanged ( e : Event ) : void
as  | 
as  |        private function appFontColorMidOBJChanged ( e : Event ) : void
as  | 
as  |        private function appFontColorDarkOBJChanged ( e : Event ) : void
as  | 
as  |        private function appFontBoldOBJChanged ( e : Event ) : void
as  | 
as  |        private function appFontItalicOBJChanged ( e : Event ) : void
as  | 
as  |     /*
as  |     ** Sets the displaying style by the listpicker.
as  |     */
as  |PU      public function setDisplayingStyleByListpicker ( styleName : String ) : void
as  | 
as  |     /*
as  |     ** Sets the lang code of this application.
as  |     */
as  |PU      public function setLangCode ( langCode : String ) : void
as  | 
as  |     /*
as  |     ** Sets the widgets orientation.
as  |     */
as  |PU      public function setWidgetsOrientation ( widgetsOrientation : String ) : void
as  | 
as  |     /*
as  |     ** Sets the predefined displaying styles.
as  |     */
as  |        private function setDisplayingStyle ( styleName : String ) : void
as  | 
as  |     /*
as  |     ** Resizing the listpicker objects.
as  |     */
as  |        private function resizeListPickers ( ) : void
as  | 
as  |     /*
as  |     ** Overriding the setsw setsh and setswh functions.
as  |     ** Do the same but it is necessary to reposition the actualpos shape.
as  |     */
as  |PU      override public function setsw ( newsw : int ) : void
as  | 
as  |PU      override public function setswh ( newsw : int , newsh : int ) : void
as  | 
as  |     /*
as  |     ** Destroying this application.
as  |     */
as  |PU      override public function destroy ( ) : void
as  | 
    +---------------------------------------------------------------------------
as  | com\kisscodesystems\KissAs3Fw\app\Widgets.as
as  | 
as  |     Widgets
as  | 
as  |     /*
as  |     ** This class is a part of the KissAs3Fw actionscrip framework.
as  |     ** See the header comment lines of the
as  |     ** com . kisscodesystems . KissAs3Fw . Application
as  |     ** The whole framework is available at:
as  |     ** https://github.com/kisscodesystems/KissAs3Fw
as  |     ** Demo applications:
as  |     ** https://github.com/kisscodesystems/KissAs3FwDemos
as  |     **
as  |     ** DESCRIPTION:
as  |     ** Widgets.
as  |     **
as  |     ** MAIN FEATURES:
as  |     ** Handles the widgets. (adding, closing, repositioning, searching, etc.)
as  |     */
as  | 
as  |        package com . kisscodesystems . KissAs3Fw . app
as  |        extends BaseSprite
as  |        lines   726
as  | 
as  |     Variables:
as  | 
as  |     // The id-s of the widgets!
as  |        private var currentWidgetId : int = - 1 ;
as  |     // The content multiple!
as  |        private var contentMultiple : ContentMultiple = null ;
as  |     // The array of the widgets, two dimensional!
as  |     // Needed for the order, contains the references to the added widgets.
as  |        private var widgetsArray : Array = null ;
as  |     // One dimensipnal array to store the orientations of each contents.
as  |        private var orientationsArray : Array = null ;
as  | 
as  |     Functions:
as  | 
as  |     /*
as  |     ** Initializing this object. The not null app reference is necessary as usual.
as  |     */
as  |PU      public function Widgets ( applicationRef : Application ) : void
as  | 
as  |     /*
as  |     ** Adds a widget container.
as  |     */
as  |PU      public function addWidgetContainer ( ) : int
as  | 
as  |     /*
as  |     ** Gets the widget orientation.
as  |     */
as  |PU      public function getWidgetOrientation ( i : int ) : String
as  | 
as  |     /*
as  |     ** Gets the number of contents.
as  |     */
as  |PU      public function getNumOfContents ( ) : int
as  | 
as  |     /*
as  |     ** Gets the count of all widgets.
as  |     */
as  |PU      public function getNumOfAllWidgets ( ) : int
as  | 
as  |     /*
as  |     ** Sets the active container.
as  |     */
as  |PU      public function setActiveWidgetContainer ( i : int ) : void
as  | 
as  |     /*
as  |     ** Removes a content.
as  |     */
as  |PU      public function removeWidgetContainer ( ) : void
as  | 
as  |     /*
as  |     ** Moves all of the widgets from a content to the first content.
as  |     */
as  |        private function moveAllWidgetsFromContent ( contentId : int ) : void
as  | 
as  |     /*
as  |     ** Moves one widget to the previous.
as  |     */
as  |PU      public function moveWidgetFromContent ( fromContentId : int , toContentId : int , widget : Widget , repositionRequired : Boolean ) : void
as  | 
as  |     /*
as  |     ** The margin of the application has been changed.
as  |     */
as  |        private function marginChanged ( e : Event ) : void
as  | 
as  |     /*
as  |     ** Gets the next id for the widget.
as  |     */
as  |        private function getNextWidgetId ( ) : int
as  | 
as  |     /*
as  |     ** The orientation of the widgets has been changed.
as  |     */
as  |        private function widgetsOrientationChanged ( e : Event ) : void
as  | 
as  |     /*
as  |     ** When one or more of the widgets have been resized.
as  |     */
as  |        private function widgetResized ( e : Event ) : void
as  | 
as  |     /*
as  |     ** When one or more of the widgets have been repositioned.
as  |     */
as  |        private function widgetRepositioned ( e : Event ) : void
as  | 
as  |     /*
as  |     ** Swaps the two widgets. (changing their position in the widgetsArray into each other)
as  |     */
as  |        private function swapWidgets ( w : Widget , w2 : Widget ) : void
as  | 
as  |     /*
as  |     ** When a widget sends a message to close itself.
as  |     */
as  |PU      public function widgetCloseMe ( e : Event ) : void
as  | 
as  |     /*
as  |     ** A widget is being dragged.
as  |     */
as  |        private function widgetDragStart ( e : Event ) : void
as  | 
as  |     /*
as  |     ** That widget has been stopped to drag.
as  |     */
as  |        private function widgetDragStop ( e : Event ) : void
as  | 
as  |     /*
as  |     ** Sets or clears the blur filter of widgets.
as  |     ** If the widget is not null then everybody will get their blur filter
as  |     ** except the not null widget.
as  |     ** If the widget is null then everybody (including the not null widget)
as  |     ** will lose their blur filter.
as  |     */
as  |        private function setOrClearGlow ( contentId : int , widget : Widget ) : void
as  | 
as  |     /*
as  |     ** Repositions a widget according to the elements being backward of this.
as  |     ** In case of manual positioning, it will be called and will call itself recursivelly.
as  |     */
as  |        private function reposWidget ( widget : Widget ) : void
as  | 
as  |     /*
as  |     ** Repositioning all of the widgets if the size of the contentSingle
as  |     ** has changed or widgets have been removed or added.
as  |     */
as  |        private function reposWidgets ( contentId : int ) : void
as  | 
as  |     /*
as  |     ** Getting a Widget by its id. (in any widget containers)
as  |     */
as  |PU      public function getWidgetById ( id : int ) : Widget
as  | 
as  |     /*
as  |     ** Getting a Widget by its header. (in any widget containers)
as  |     */
as  |PU      public function getWidgetByHeader ( header : String ) : Widget
as  | 
as  |     /*
as  |     ** Gets the headers of the widgets. (in any widget containers)
as  |     */
as  |PU      public function getWidgetHeaders ( ) : Array
as  | 
as  |     /*
as  |     ** Gets the headers of the widgets. (in any widget containers)
as  |     */
as  |PU      public function getWidgetIds ( ) : Array
as  | 
as  |     /*
as  |     ** Selects the previous or next widget from the given.
as  |     */
as  |PU      public function goToPrevWidget ( widget : Widget ) : void
as  | 
as  |PU      public function goToNextWidget ( widget : Widget ) : void
as  | 
as  |     /*
as  |     ** Goes to a specific widget!
as  |     */
as  |PU      public function goToTheWidget ( widget : Widget ) : void
as  | 
as  |     /*
as  |     ** Adds a widget into the widgets.
as  |     */
as  |PU      public function addWidget ( contentId : int , widget : Widget ) : void
as  | 
as  |     /*
as  |     ** Changes the visible of the move button of the widgets if necessary.
as  |     */
as  |PU      public function changeButtonMoveVisibleOnAllWidgets ( ) : void
as  | 
as  |     /*
as  |     ** Removing a Widget.
as  |     */
as  |PU      public function closeWidget ( widget : Widget ) : void
as  | 
as  |     /*
as  |     ** Overriding the setsw setsh and setswh functions.
as  |     */
as  |PU      override public function setsw ( newsw : int ) : void { }
as  | 
as  |PU      override public function setsh ( newsh : int ) : void { }
as  | 
as  |PU      override public function setswh ( newsw : int , newsh : int ) : void { }
as  | 
as  |     /*
as  |     ** Redrawing the shape.
as  |     */
as  |PU      public function widgetsRePosSize ( ) : void
as  | 
as  |     /*
as  |     ** Sets the smartphone mode.
as  |     */
as  |PU      public function toSmartphone ( ) : void
as  | 
as  |     /*
as  |     ** Destroying this application.
as  |     */
as  |PU      override public function destroy ( ) : void
as  | 
    +---------------------------------------------------------------------------
    | com\kisscodesystems\KissAs3Fw\base
    +---------------------------------------------------------------------------
as  | com\kisscodesystems\KissAs3Fw\base\BaseButton.as
as  | 
as  |     BaseButton
as  | 
as  |     /*
as  |     ** This class is a part of the KissAs3Fw actionscrip framework.
as  |     ** See the header comment lines of the
as  |     ** com . kisscodesystems . KissAs3Fw . Application
as  |     ** The whole framework is available at:
as  |     ** https://github.com/kisscodesystems/KissAs3Fw
as  |     ** Demo applications:
as  |     ** https://github.com/kisscodesystems/KissAs3FwDemos
as  |     **
as  |     ** DESCRIPTION:
as  |     ** BaseButton.
as  |     ** Button behaviour but has to be changed from outside.
as  |     **
as  |     ** MAIN FEATURES:
as  |     ** - Has 3 states:
as  |     **   - 0 (default)
as  |     **   - 1 (highlighted)
as  |     **   - 2 (pushed)
as  |     ** - It will register for the events of changing the properties of Application.
as  |     **
as  |     */
as  | 
as  |        package com . kisscodesystems . KissAs3Fw . base
as  |        extends BaseShape
as  |        lines   152
as  | 
as  |     Variables:
as  | 
as  |     // Storing the actual state of this base button.
as  |     // Possible values: 0, 1, 2
as  |        private var state : int = - 1 ;
as  | 
as  |     Functions:
as  | 
as  |     /*
as  |     ** Constructs the original Shape.
as  |     */
as  |PU      public function BaseButton ( applicationRef : Application ) : void
as  | 
as  |     /*
as  |     ** The radius of the application has been changed.
as  |     */
as  |        private function radiusChanged ( e : Event ) : void
as  | 
as  |     /*
as  |     ** The filler color (background) of the background has been changed.
as  |     */
as  |        private function backgroundBgColorChanged ( e : Event ) : void
as  | 
as  |     /*
as  |     ** The filler color (foreground) of the background has been changed.
as  |     */
as  |        private function backgroundFgColorChanged ( e : Event ) : void
as  | 
as  |     /*
as  |     ** The alpha of the filler color of the background has been changed.
as  |     */
as  |        private function fillAlphaChanged ( e : Event ) : void
as  | 
as  |     /*
as  |     ** Sets the actual state of this base button.
as  |     ** 0,1,2 are the acceptable values.
as  |     */
as  |PU      public function setState ( state : int ) : void
as  | 
as  |     /*
as  |     ** Resets the properties of this base button and then repaints it of course.
as  |     ** This method will be registered into the changing of the properties of Application.
as  |     */
as  |        private function reset ( ) : void
as  | 
as  |     /*
as  |     ** Repaints the button according to the current state of this button.
as  |     */
as  |        private function repaint ( ) : void
as  | 
as  |     /*
as  |     ** Destroying this object by calling this method.
as  |     */
as  |PU      override public function destroy ( ) : void
as  | 
    +---------------------------------------------------------------------------
as  | com\kisscodesystems\KissAs3Fw\base\BaseEventDispatcher.as
as  | 
as  |     BaseEventDispatcher
as  | 
as  |     /*
as  |     ** This class is a part of the KissAs3Fw actionscrip framework.
as  |     ** See the header comment lines of the
as  |     ** com . kisscodesystems . KissAs3Fw . Application
as  |     ** The whole framework is available at:
as  |     ** https://github.com/kisscodesystems/KissAs3Fw
as  |     ** Demo applications:
as  |     ** https://github.com/kisscodesystems/KissAs3FwDemos
as  |     **
as  |     ** DESCRIPTION:
as  |     ** BaseEventDispatcher.
as  |     ** This class exists for many reasons.
as  |     ** The grabage collecting is suported by using this class instead of EventDispatcher.
as  |     **
as  |     ** MAIN FEATURES:
as  |     ** - it can store the subscribed objects, and if it is to be destroyed,
as  |     **   all of the subscribes will be removed first.
as  |     **   So, in the classes where you use this base event dispatcher,
as  |     **   it needs to be overwrite the destroy ( ) method with destroys
as  |     **   this base event dispatcher object. This does that all of the dependencies
as  |     **   will be destroyed and your actual object will be grabage collected safely.
as  |     **   (but, this is just one part of this, see the header of BaseSprite)
as  |     ** - and, it applies weakReference = false.
as  |     ** - automatic grabage collection call
as  |     */
as  | 
as  |        package com . kisscodesystems . KissAs3Fw . base
as  |        extends EventDispatcher
as  |        lines   154
as  | 
as  |     Variables:
as  | 
as  |     // This will be the array of the references of the registered events.
as  |     // We can loop on this when the destroy ( ) will be called.
as  |        private var registeredEvents : Array ;
as  |     // This will be the ID of the object in which this base event dispatcher has been defined.
as  |     // Used for example in widgets.
as  |        private var parentObject : Object = null ;
as  | 
as  |     Functions:
as  | 
as  |     /*
as  |     ** This is the constructor.
as  |     ** We are going to create the array of registering here.
as  |     */
as  |PU      public function BaseEventDispatcher ( target : IEventDispatcher = null )
as  | 
as  |     /*
as  |     ** Overrides the addEventListener method for 2 reason:
as  |     ** - 1: useWeakReference = false
as  |     ** - 2: stores the registered events to able to destroy all of them from here if it is needed.
as  |     */
as  |PU      override public function addEventListener ( type : String , listener : Function , useCapture : Boolean = false , priority : int = 0 , useWeakReference : Boolean = true ) : void
as  | 
as  |PU      override public function removeEventListener ( type : String , listener : Function , useCapture : Boolean = false ) : void
as  | 
as  |        private function debug ( message : String ) : void
as  | 
as  |     /*
as  |     ** Getting the reference of the parent object.
as  |     */
as  |PU      public function getParentObject ( ) : Object
as  | 
as  |     /*
as  |     ** Setting of the reference to the parent object.
as  |     */
as  |PU      public function setParentObject ( object : Object ) : void
as  | 
as  |     /*
as  |     ** Same as in BaseSprite or BaseTextField.
as  |     */
as  |        private function systemGc ( ) : void
as  | 
as  |     /*
as  |     ** Removes all of the subscribed listeners.
as  |     ** Its parameter means: need the grabage collector be called or not.
as  |     */
as  |PU      public function removeAllListeners ( toCallSystemGc : Boolean = true ) : void
as  | 
as  |     /*
as  |     ** Destroys everything within this class so it is needed to be called from outside.
as  |     */
as  |PU      public function destroy ( ) : void
as  | 
    +---------------------------------------------------------------------------
as  | com\kisscodesystems\KissAs3Fw\base\BaseList.as
as  | 
as  |     BaseList
as  | 
as  |     /*
as  |     ** This class is a part of the KissAs3Fw actionscrip framework.
as  |     ** See the header comment lines of the
as  |     ** com . kisscodesystems . KissAs3Fw . Application
as  |     ** The whole framework is available at:
as  |     ** https://github.com/kisscodesystems/KissAs3Fw
as  |     ** Demo applications:
as  |     ** https://github.com/kisscodesystems/KissAs3FwDemos
as  |     **
as  |     ** DESCRIPTION:
as  |     ** BaseList.
as  |     ** Used for example in the List.
as  |     **
as  |     ** MAIN FEATURES:
as  |     ** - just text labels and cannot be scrolled
as  |     ** - marking elements with states: 0, 1, 2
as  |     ** - number of elements to be displayed can be set
as  |     ** - the displayed text codes and the marks can be set
as  |     */
as  | 
as  |        package com . kisscodesystems . KissAs3Fw . base
as  |        extends BaseSprite
as  |        lines   310
as  | 
as  |     Variables:
as  | 
as  |     // The array of references of labels.
as  |        private var textLabelArray : Array = null ;
as  |     // The array of marks of labels.
as  |        private var textMarkedArray : Array = null ;
as  |     // The type of the text elements initially.
as  |        private var textType : String = null ;
as  |     // The shape to mark the elements.
as  |        private var mark : BaseShape = null ;
as  | 
as  |     Functions:
as  | 
as  |     /*
as  |     ** The constructor doing the initialization of this object as usual.
as  |     */
as  |PU      public function BaseList ( applicationRef : Application ) : void
as  | 
as  |     /*
as  |     ** The radius of the application has been changed.
as  |     */
as  |        private function radiusChanged ( e : Event ) : void
as  | 
as  |     /*
as  |     ** The filler color (background) of the background has been changed.
as  |     */
as  |        private function backgroundFgColorChanged ( e : Event ) : void
as  | 
as  |     /*
as  |     ** The alpha of the filler color of the background has been changed.
as  |     */
as  |        private function fillAlphaChanged ( e : Event ) : void
as  | 
as  |     /*
as  |     ** Marks the elements.
as  |     */
as  |PU      public function markElements ( ) : void
as  | 
as  |     /*
as  |     ** Draws a filling on the mark shape at a specified area of the label and being at the specified index.
as  |     */
as  |        private function drawMark ( a : Number , i : int ) : void
as  | 
as  |     /*
as  |     ** Marks an element at the specified index.
as  |     ** The markElements ( ) ; has to be called after this.
as  |     */
as  |PU      public function markElement ( i : int , marking : int ) : void
as  | 
as  |     /*
as  |     ** Sets the number of the displayed elements.
as  |     ** This number of elements will be mdisplayed in the list.
as  |     */
as  |PU      public function setNumOfElements ( numOfElements : int ) : void
as  | 
as  |     /*
as  |     ** Removes elements from the end of the list.
as  |     */
as  |        private function removeElementsFromIndex ( index : int ) : void
as  | 
as  |     /*
as  |     ** When the size of the text label has been changed.
as  |     ** For example: the text format has been changed.
as  |     ** The whole height is recalculated.
as  |     */
as  |        private function textLabelResized ( e : Event ) : void
as  | 
as  |     /*
as  |     ** Sets the height of this application according to the number of elements.
as  |     ** The getsh will return with the real height of the list.
as  |     ** Happen:
as  |     ** - repositioning of the elements
as  |     ** - remarking of the elements
as  |     ** - the super setsh is called.
as  |     */
as  |        private function setHeight ( ) : void
as  | 
as  |     /*
as  |     ** The setsh and setswh have to be out of order.
as  |     ** (The height of the list is determined by the numOfElements.)
as  |     */
as  |PU      override public function setsh ( newsh : int ) : void { }
as  | 
as  |PU      override public function setswh ( newsw : int , newsh : int ) : void { }
as  | 
as  |     /*
as  |     ** This is the method runs after the changing of the size of this object.
as  |     */
as  |PU      override public function setsw ( newsw : int ) : void
as  | 
as  |     /*
as  |     ** Gets the number of the displayed elements.
as  |     */
as  |PU      public function getNumOfElements ( ) : int
as  | 
as  |     /*
as  |     ** Sets the text code of the list element at index i.
as  |     */
as  |PU      public function setTextCode ( i : int , newTextCode : String ) : void
as  | 
as  |     /*
as  |     ** Sets the type of this text.
as  |     */
as  |PU      public function setTextType ( newTextType : String ) : void
as  | 
as  |     /*
as  |     ** Gets the type of this base list object.
as  |     */
as  |PU      public function getTextType ( ) : String
as  | 
as  |     /*
as  |     ** Overwrite the setting of the size.
as  |     */
as  |        override protected function doSizeChanged ( ) : void
as  | 
as  |     /*
as  |     ** Overwriting this destroy method.
as  |     */
as  |PU      override public function destroy ( ) : void
as  | 
    +---------------------------------------------------------------------------
as  | com\kisscodesystems\KissAs3Fw\base\BaseOpen.as
as  | 
as  |     BaseOpen
as  | 
as  |     /*
as  |     ** This class is a part of the KissAs3Fw actionscrip framework.
as  |     ** See the header comment lines of the
as  |     ** com . kisscodesystems . KissAs3Fw . Application
as  |     ** The whole framework is available at:
as  |     ** https://github.com/kisscodesystems/KissAs3Fw
as  |     ** Demo applications:
as  |     ** https://github.com/kisscodesystems/KissAs3FwDemos
as  |     **
as  |     ** DESCRIPTION:
as  |     ** BaseOpen.
as  |     ** This is the base of the openable components
as  |     ** like listpicker, timepicker or colorpicker.
as  |     **
as  |     ** MAIN FEATURES:
as  |     ** - has a base working button
as  |     ** - opens and close methods
as  |     ** - decides when to close by mouse and keyboard
as  |     */
as  | 
as  |        package com . kisscodesystems . KissAs3Fw . base
as  |        extends BaseSprite
as  |        lines   185
as  | 
as  |     Variables:
as  | 
as  |     // This will be the background of the object.
as  |        protected var baseWorkingButton : BaseWorkingButton = null ;
as  |     // This will contain the opened object. Its size has to be updated!
as  |        protected var contentSprite : BaseSprite = null ;
as  | 
as  |     Functions:
as  | 
as  |     /*
as  |     ** The constructor doing the initialization of this object as usual.
as  |     */
as  |PU      public function BaseOpen ( applicationRef : Application ) : void
as  | 
as  |     /*
as  |     ** Overriding the setsw setsh and setswh functions.
as  |     ** Do the same but it is necessary to reposition the actualpos shape.
as  |     */
as  |PU      override public function setsw ( newsw : int ) : void
as  | 
as  |PU      override public function setsh ( newsh : int ) : void
as  | 
as  |PU      override public function setswh ( newsw : int , newsh : int ) : void
as  | 
as  |     /*
as  |     ** Override setEnabled. This property has to be piped to the base working button object.
as  |     */
as  |PU      override public function setEnabled ( b : Boolean ) : void
as  | 
as  |     /*
as  |     ** This will be happened if the base button is pressed.
as  |     ** The Base Open object will be opened.
as  |     */
as  |        protected function baseWorkingButtonClick ( e : Event ) : void
as  | 
as  |     /*
as  |     ** Opens the conponent, some things are happened here.
as  |     */
as  |PU      public function open ( ) : void
as  | 
as  |     /*
as  |     ** This method will decide to close the contentSprite or not (by mouse).
as  |     */
as  |        protected function hasToCloseByMouse ( e : MouseEvent ) : void
as  | 
as  |     /*
as  |     ** The mouse is on the area of the contentSprite?
as  |     */
as  |        protected function mouseIsOnTheContentSprite ( ) : Boolean
as  | 
as  |     /*
as  |     ** This method will decide to close the contentSprite or not (by keyboard).
as  |     */
as  |        private function hasToCloseByKeyboard ( e : KeyboardEvent ) : void
as  | 
as  |     /*
as  |     ** Closes the component.
as  |     */
as  |PU      public function close ( ) : void
as  | 
as  |     /*
as  |     ** Is the component opened?
as  |     */
as  |PU      public function isOpened ( ) : Boolean
as  | 
as  |     /*
as  |     ** Overriding destroy.
as  |     */
as  |PU      override public function destroy ( ) : void
as  | 
    +---------------------------------------------------------------------------
as  | com\kisscodesystems\KissAs3Fw\base\BasePanel.as
as  | 
as  |     BasePanel
as  | 
as  |     /*
as  |     ** This class is a part of the KissAs3Fw actionscrip framework.
as  |     ** See the header comment lines of the
as  |     ** com . kisscodesystems . KissAs3Fw . Application
as  |     ** The whole framework is available at:
as  |     ** https://github.com/kisscodesystems/KissAs3Fw
as  |     ** Demo applications:
as  |     ** https://github.com/kisscodesystems/KissAs3FwDemos
as  |     **
as  |     ** DESCRIPTION:
as  |     ** BasePanel.
as  |     ** This is used as a background and content for example in the settings or the menu.
as  |     **
as  |     ** MAIN FEATURES:
as  |     ** - base shape (background) + content
as  |     ** - the content is multiple so multiple paged content is available by default!
as  |     */
as  | 
as  |        package com . kisscodesystems . KissAs3Fw . base
as  |        extends BaseSprite
as  |        lines   234
as  | 
as  |     Variables:
as  | 
as  |     // The event of closing this object (click elsewhere)
as  |        private var eventClosed : Event = null ;
as  |     // The base shape object to have.
as  |        private var baseShape : BaseShape = null ;
as  |     // A content to hold the items.
as  |        protected var contentMultiple : ContentMultiple = null ;
as  | 
as  |     Functions:
as  | 
as  |     /*
as  |     ** Initializing this object. The not null app reference is necessary as usual.
as  |     */
as  |PU      public function BasePanel ( applicationRef : Application ) : void
as  | 
as  |     /*
as  |     ** Sets the default content.
as  |     */
as  |PU      public function setDefaultContent ( ) : void
as  | 
as  |     /*
as  |     ** Overriding the setsw setsh and setswh functions.
as  |     ** Do the same but it is necessary to reposition the actualpos shape.
as  |     */
as  |PU      override public function setsw ( newsw : int ) : void
as  | 
as  |PU      override public function setsh ( newsh : int ) : void
as  | 
as  |PU      override public function setswh ( newsw : int , newsh : int ) : void
as  | 
as  |     /*
as  |     ** The line thickness of the application has been changed.
as  |     */
as  |        private function lineThicknessChanged ( e : Event ) : void
as  | 
as  |     /*
as  |     ** The margin of the application has been changed.
as  |     */
as  |        private function marginChanged ( e : Event ) : void
as  | 
as  |     /*
as  |     ** The radius of the application has been changed.
as  |     */
as  |        private function radiusChanged ( e : Event ) : void
as  | 
as  |     /*
as  |     ** The filler color (background) of the background has been changed.
as  |     */
as  |        private function backgroundBgColorChanged ( e : Event ) : void
as  | 
as  |     /*
as  |     ** The filler color (foreground) of the background has been changed.
as  |     */
as  |        private function backgroundFgColorChanged ( e : Event ) : void
as  | 
as  |     /*
as  |     ** The alpha of the filler color of the background has been changed.
as  |     */
as  |        private function fillAlphaChanged ( e : Event ) : void
as  | 
as  |     /*
as  |     ** Redrawing the shape and resizing of the content.
as  |     */
as  |        private function stuffsResize ( ) : void
as  | 
as  |     /*
as  |     ** Opens the panel.
as  |     */
as  |PU      public function open ( ) : void
as  | 
as  |     /*
as  |     ** Closes the panel.
as  |     */
as  |PU      public function close ( ) : void
as  | 
as  |     /*
as  |     ** This method will decide to close or not (by mouse).
as  |     */
as  |        protected function hasToCloseByMouse ( e : MouseEvent ) : void
as  | 
as  |     /*
as  |     ** The mouse is on the area of the content?
as  |     */
as  |        protected function mouseIsOnTheContent ( ) : Boolean
as  | 
as  |     /*
as  |     ** Destroying this application.
as  |     */
as  |PU      override public function destroy ( ) : void
as  | 
    +---------------------------------------------------------------------------
as  | com\kisscodesystems\KissAs3Fw\base\BaseScroll.as
as  | 
as  |     BaseScroll
as  | 
as  |     /*
as  |     ** This class is a part of the KissAs3Fw actionscrip framework.
as  |     ** See the header comment lines of the
as  |     ** com . kisscodesystems . KissAs3Fw . Application
as  |     ** The whole framework is available at:
as  |     ** https://github.com/kisscodesystems/KissAs3Fw
as  |     ** Demo applications:
as  |     ** https://github.com/kisscodesystems/KissAs3FwDemos
as  |     **
as  |     ** DESCRIPTION:
as  |     ** BaseScroll.
as  |     ** Scrolling means displaying a part of the content under a mask.
as  |     ** This can be continuously (for example a content of a widget)
as  |     ** or not (for example the currently displayed elements of a list).
as  |     ** The moving of the shapes and the calculations of the coordinates of
as  |     ** the content will happen here, the real positioning happens outside.
as  |     ** Mouse wheel works since version 1.2.
as  |     **
as  |     ** MAIN FEATURES:
as  |     ** - displaying the two rectangles
as  |     ** - contains the two mask usable for the outside world
as  |     ** - the mover can be dragged to trigger the reposition of the content to the outside
as  |     ** - the target coordinates ( where to move the content) will be calculated as
as  |     **   slow down the content continuously.
as  |     ** - the size and the initial position of the content can be specified from outside
as  |     ** - the outside can liten to the event of application . EVENT_CONTENT_POSITION_CHANGED
as  |     */
as  | 
as  |        package com . kisscodesystems . KissAs3Fw . base
as  |        extends BaseSprite
as  |        lines   708
as  | 
as  |     Variables:
as  | 
as  |     // The base rectangle frame of the object.
as  |     // This will not be moved.
as  |        private var shapeFrame : BaseShape = null ;
as  |     // The base shape that shows the actual position of the content.
as  |     // This will be not movable by hand but will be moved according to the actual position.
as  |     // Setting its coordinates can be hppened by sdetting its x and y coordinates (and not using setcxy())!
as  |        private var shapeActualpos : BaseShape = null ;
as  |     // The mask objects of the content.
as  |        private var shapeMask0 : BaseShape = null ;
as  |        private var shapeMask1 : BaseShape = null ;
as  |     // This is the positioner of the external displayable object.
as  |     // If this is moved then it will be returned immediately to the 0-0 coordinates.
as  |     // The x and y property will be used instead of getcxy because this object will be dragged.
as  |        private var spriteMover : BaseSprite = null ;
as  |     // The event is dispatched when the position of the content is changed.
as  |     // This can be watched by the outside world.
as  |        private var eventContentPositionChanged : Event = null ;
as  |     // The events of the content caching
as  |        private var eventContentCacheBegin : Event = null ;
as  |     // The sizes of the external content. (We have to know it to calculate the proper content position.)
as  |        private var scw : int = 0 ;
as  |        private var sch : int = 0 ;
as  |     // The actual coordinates of the content (depend on the scw-sch and the current size of this basescroll.)
as  |        private var ccx : Number = 0 ;
as  |        private var ccy : Number = 0 ;
as  |     // The previous coordinates (saved when the mouse is down)
as  |        private var ccxPrev : Number = 0 ;
as  |        private var ccyPrev : Number = 0 ;
as  |     // These are the target coordinates where the content will be moved into.
as  |        private var ccxTarget : int = 0 ;
as  |        private var ccyTarget : int = 0 ;
as  |     // These are the coordinates of the spriteMover in the previous frame.
as  |     // The difference between the actual pos and the pos in the
as  |     // previous enterframe decides the speed of the moving of the content!
as  |        private var prevMoverx : int = 0 ;
as  |        private var prevMovery : int = 0 ;
as  |     // The deltas of the coordinates
as  |        private var deltax : int = 0 ;
as  |        private var deltay : int = 0 ;
as  | 
as  |     Functions:
as  | 
as  |     /*
as  |     ** The constructor doing the initialization of this object as usual.
as  |     */
as  |PU      public function BaseScroll ( applicationRef : Application ) : void
as  | 
as  |     /*
as  |     ** These are not necessary to be listened to.
as  |     */
as  |        override protected function removedFromStage ( e : Event ) : void
as  | 
as  |     /*
as  |     ** Callable method to simulate rollOver.
as  |     ** (for example resizing widget on tablet or on smartphone devices)
as  |     */
as  |PU      public function doRollOver ( ) : void
as  | 
as  |     /*
as  |     ** Mouse rolls over the mover sprite.
as  |     */
as  |        private function rollOver ( e : MouseEvent ) : void
as  | 
as  |     /*
as  |     ** Mouse rolls out the mover sprite.
as  |     */
as  |        private function rollOut ( e : MouseEvent ) : void
as  | 
as  |     /*
as  |     ** Mouse down on the mover sprite.
as  |     */
as  |        private function mouseDown ( e : MouseEvent ) : void
as  | 
as  |     /*
as  |     ** Saves the actual position of the mover.
as  |     */
as  |        private function enterFrameSaveMoverPos ( e : Event ) : void
as  | 
as  |     /*
as  |     ** When the mouse is moving.
as  |     */
as  |        private function mouseMove ( e : MouseEvent ) : void
as  | 
as  |     /*
as  |     ** The mouse is up!
as  |     */
as  |        private function mouseUp ( e : MouseEvent ) : void
as  | 
as  |     /*
as  |     ** Positions the content continuously to the target coordinates.
as  |     */
as  |        private function enterFrameMoveContent ( e : Event ) : void
as  | 
as  |     /*
as  |     ** Stops the spriteMover and places it into the 0-0.
as  |     */
as  |        private function stopMover ( ) : void
as  | 
as  |     /*
as  |     ** Handles the mouse wheel event.
as  |     */
as  |        private function mouseWheel ( e : MouseEvent ) : void
as  | 
as  |     /*
as  |     ** The correction of the target coordiantes.
as  |     */
as  |        private function targetCoordinatesCorrection ( ) : void
as  | 
as  |     /*
as  |     ** Gets the reference to the masks.
as  |     ** If this is a continuous content (like the content of the widget for example)
as  |     ** then this has to be the mask of that content.
as  |     ** There are two because the front and the back content sprite of the ContentSingle
as  |     ** need different masks! These two have to be resized and repositioned in the same way.
as  |     */
as  |PU      public function getMask0 ( ) : BaseShape
as  | 
as  |PU      public function getMask1 ( ) : BaseShape
as  | 
as  |     /*
as  |     ** Gets the reference to the spriteMover sprite.
as  |     */
as  |PU      public function getMover ( ) : BaseSprite
as  | 
as  |     /*
as  |     ** Dispatches when the content position has been changed.
as  |     */
as  |        private function dispatchEventContentPositionChanged ( ) : void
as  | 
as  |     /*
as  |     ** Dispatches when the content position has to be cached.
as  |     */
as  |        private function dispatchEventCacheBegin ( ) : void
as  | 
as  |     /*
as  |     ** To be able to set the coordinates of the content!
as  |     */
as  |PU      public function setccx ( newccx : int ) : void
as  | 
as  |PU      public function setccy ( newccy : int ) : void
as  | 
as  |PU      public function setccxcy ( newccx : int , newccy : int ) : void
as  | 
as  |PU      public function setccxn ( n : Number ) : void
as  | 
as  |PU      public function setccyn ( n : Number ) : void
as  | 
as  |     /*
as  |     ** To be able to set the size of the content!
as  |     */
as  |PU      public function setscw ( newscw : int ) : void
as  | 
as  |PU      public function setsch ( newsch : int ) : void
as  | 
as  |PU      public function setscwch ( newscw : int , newsch : int ) : void
as  | 
as  |     /*
as  |     ** Gets the actual x and y of the content.
as  |     */
as  |PU      public function getccx ( ) : Number
as  | 
as  |PU      public function getccy ( ) : Number
as  | 
as  |     /*
as  |     ** Gets the actual width and height of the content.
as  |     */
as  |PU      public function getscw ( ) : int
as  | 
as  |PU      public function getsch ( ) : int
as  | 
as  |     /*
as  |     ** The line thickness has been changed
as  |     */
as  |        private function lineThicknessChanged ( e : Event ) : void
as  | 
as  |     /*
as  |     ** The radius of the application has been changed.
as  |     */
as  |        private function radiusChanged ( e : Event ) : void
as  | 
as  |     /*
as  |     ** The filler color (background) of the background has been changed.
as  |     */
as  |        private function backgroundBgColorChanged ( e : Event ) : void
as  | 
as  |     /*
as  |     ** The filler color (foreground) of the background has been changed.
as  |     */
as  |        private function backgroundFgColorChanged ( e : Event ) : void
as  | 
as  |     /*
as  |     ** This is the method runs after the changing of the size of this object.
as  |     */
as  |        override protected function doSizeChanged ( ) : void
as  | 
as  |     /*
as  |     ** Redraws the shapes and the spriteMover.
as  |     ** Only the redrawing is here, the repositioning is elsewhere.
as  |     */
as  |        private function redrawShapesMover ( ) : void
as  | 
as  |     /*
as  |     ** Calculating the position of the shapeActualpos by the current position of the content.
as  |     ** If the position is invalid (lesser than 0 or greather than scroll margin)
as  |     ** then a correction will be applied both on x and y coordinates and both on actual pos shape and on content.
as  |     ** The masks will be also repositioned.
as  |     */
as  |PU      public function calcShapeActualposCoordinatesByContentPos ( ) : void
as  | 
as  |     /*
as  |     ** Overwriting this destroy method.
as  |     */
as  |PU      override public function destroy ( ) : void
as  | 
    +---------------------------------------------------------------------------
as  | com\kisscodesystems\KissAs3Fw\base\BaseShape.as
as  | 
as  |     BaseShape
as  | 
as  |     /*
as  |     ** This class is a part of the KissAs3Fw actionscrip framework.
as  |     ** See the header comment lines of the
as  |     ** com . kisscodesystems . KissAs3Fw . Application
as  |     ** The whole framework is available at:
as  |     ** https://github.com/kisscodesystems/KissAs3Fw
as  |     ** Demo applications:
as  |     ** https://github.com/kisscodesystems/KissAs3FwDemos
as  |     **
as  |     ** DESCRIPTION:
as  |     ** BaseShape.
as  |     ** Extends the original Shape class.
as  |     ** It is just for basic rect drawing.
as  |     ** It will not subscribe for any events (except EVENT_LINE_THICKNESS_CHANGED ):
as  |     ** this is the job of the parent object.
as  |     ** This little object will do the job what is requested.
as  |     ** The drawing of the rounded corner is better
as  |     ** than using the default graphics.drawRoundRect method.
as  |     **
as  |     */
as  | 
as  |        package com . kisscodesystems . KissAs3Fw . base
as  |        extends Shape
as  |        lines   418
as  | 
as  |     Variables:
as  | 
as  |     // Reference to the Application object.
as  |        protected var application : Application = null ;
as  |     // The matrix used for drawing a little bright layer to the shape.
as  |        private var brightMatrix : Matrix = null ;
as  |     // The matrix used for drawing the curve (bright-to-dark)
as  |        private var lineMatrix : Matrix = null ;
as  |     // The color of the line.
as  |        private var lineColor : Number = 0 ;
as  |     // The color of the filling.
as  |        private var fillColor : Number = 0 ;
as  |     // The alpha of the filling.
as  |        private var fillAlpha : Number = 0 ;
as  |     // The color of the bright.
as  |        private var brightColor1 : Number = 0 ;
as  |     // Radius. (of the corners)
as  |        private var sr : int = 0 ;
as  |     // Width.
as  |        private var sw : int = 0 ;
as  |     // Height.
as  |        private var sh : int = 0 ;
as  |     // Bright (layer needed or not).
as  |        private var db : Boolean = false ;
as  |     // Type (-1: pushed, 0: general, 1: unpushed).
as  |        private var dt : int = 0 ;
as  |     // A rectangle was drawn or not.
as  |        private var rectangleDrawn : Boolean = false ;
as  | 
as  |     Functions:
as  | 
as  |     /*
as  |     ** Constructs the original Shape.
as  |     */
as  |PU      public function BaseShape ( applicationRef : Application ) : void
as  | 
as  |     /*
as  |     ** Listener functions: added and removed from stage.
as  |     ** (The stage propery will be not null in addedToStage
as  |     ** and null will be null in removedFromStage.)
as  |     */
as  |        protected function addedToStage ( e : Event ) : void
as  | 
as  |        protected function removedFromStage ( e : Event ) : void
as  | 
as  |     /*
as  |     ** Publicly available clearing method.
as  |     */
as  |PU      public function clear ( ) : void
as  | 
as  |     /*
as  |     ** Sets the colors of the drawing.
as  |     ** (ccac: color color alpha color)
as  |     ** The object has to be redrawed after this!
as  |     */
as  |PU      public function setccac ( lineColor : Number , fillColor : Number , fillAlpha : Number , brightColor1 : Number ) : void
as  | 
as  |     /*
as  |     ** Sets the sr (radius).
as  |     */
as  |PU      public function setsr ( sr : int ) : void
as  | 
as  |     /*
as  |     ** Sets the r radius and the w and h sizes.
as  |     ** The object has to be redrawed after this!
as  |     */
as  |PU      public function setswh ( sw : int , sh : int ) : void
as  | 
as  |     /*
as  |     ** Gets the width and height and the radius of the painting.
as  |     */
as  |PU      public function getsw ( ) : int
as  | 
as  |PU      public function getsh ( ) : int
as  | 
as  |PU      public function getsr ( ) : int
as  | 
as  |     /*
as  |     ** Sets the necessary of the bright layer of the shape.
as  |     ** The object has to be redrawed after this!
as  |     */
as  |PU      public function setdb ( db : Boolean ) : void
as  | 
as  |     /*
as  |     ** Sets the type of the shape.
as  |     ** -1 0 and 1 are acceptable.
as  |     ** The object has to be redrawed after this!
as  |     */
as  |PU      public function setdt ( dt : int ) : void
as  | 
as  |     /*
as  |     ** Draws the rect.
as  |     */
as  |PU      public function drawRect ( ) : void
as  | 
as  |     /*
as  |     ** The line thickness has been changed.
as  |     */
as  |        private function lineThicknessChanged ( e : Event ) : void
as  | 
as  |     /*
as  |     ** Drawing the (curved) rect based on the above given data.
as  |     ** (use this instead of the graphics.drawRect)
as  |     */
as  |        private function drawThatRect ( lineNeeded : Boolean ) : void
as  | 
as  |     /*
as  |     ** Destroying this object by calling this method.
as  |     */
as  |PU      public function destroy ( ) : void
as  | 
    +---------------------------------------------------------------------------
as  | com\kisscodesystems\KissAs3Fw\base\BaseSprite.as
as  | 
as  |     BaseSprite
as  | 
as  |     /*
as  |     ** This class is a part of the KissAs3Fw actionscrip framework.
as  |     ** See the header comment lines of the
as  |     ** com . kisscodesystems . KissAs3Fw . Application
as  |     ** The whole framework is available at:
as  |     ** https://github.com/kisscodesystems/KissAs3Fw
as  |     ** Demo applications:
as  |     ** https://github.com/kisscodesystems/KissAs3FwDemos
as  |     **
as  |     ** DESCRIPTION:
as  |     ** BaseSprite.
as  |     ** The base sprite class. (Very similar at logic to the BaseTextField.)
as  |     ** Every displayable object on the applications using this framework
as  |     ** should be extended by this class or by an extending class of this.
as  |     **
as  |     ** This base class has the main properties as:
as  |     ** - x coordinate (stored as cx (coordinate x))
as  |     ** - y coordinate (stored as cy (coordinate y))
as  |     ** - width (stored as sw (size width))
as  |     ** - height (stored as sh (size height))
as  |     **
as  |     ** What if these properties have been changed.
as  |     **
as  |     ** 1: other classes.
as  |     ** This class has the baseEventDispatcher.
as  |     ** This will be the object to allow other objects to be registered into.
as  |     ** If the coordinates or sizes above will be changed then other objects
as  |     ** can be informed aboout the changing of this main properties using base event dispatcher.
as  |     ** (If these register to the eventCoordinatesChanged or eventSizesChanged events.)
as  |     **
as  |     ** 2: classes extending this.
as  |     ** These classes has not to be registered into this baseEventDispatcher
as  |     ** because the changing of the size or coordinate properties mean the calling
as  |     ** of the doCoordinateChanged or doSizeChanged. These two method can be
as  |     ** overwritten in the extending classes.
as  |     **
as  |     ** This has to contain the overridable destroy method. This is used for destroying
as  |     ** everything we created in the current extending class of this base class.
as  |     ** The initialize function: addedToStage and the removedFromStage have to be
as  |     ** here too. These also have to be overwritten in extending classes.
as  |     **
as  |     ** This also has to contain the grabage collector callings in a method: systemGc.
as  |     **
as  |     ** MAIN FEATURES:
as  |     ** - coordinates and sizes are stored separately!
as  |     ** - events will be dispatched when the sizes or the coordinates are changed.
as  |     ** - the stage width and height can be watched
as  |     **   and the sizes can be recalculated according to the stage.
as  |     */
as  | 
as  |        package com . kisscodesystems . KissAs3Fw . base
as  |        extends Sprite
as  |        lines   633
as  | 
as  |     Variables:
as  | 
as  |     // Reference to the Application object.
as  |        protected var application : Application = null ;
as  |     // These are the base properties.
as  |        private var cx : int = 0 ;
as  |        private var cy : int = 0 ;
as  |        private var sw : int = 0 ;
as  |        private var sh : int = 0 ;
as  |     // The event objects to be constructed and to be dispatched from here.
as  |        private var eventCoordinatesChanged : Event = null ;
as  |        private var eventSizesChanged : Event = null ;
as  |     // The base event dispatcher object: other objects can be registered into this.
as  |        private var baseEventDispatcher : BaseEventDispatcher = null ;
as  |     // This is a general object to be able to point into.
as  |        private var value : Object = null ;
as  |     // This is an enabled object or not.
as  |        private var enabled : Boolean = true ;
as  |     // Follow the size of the stage.
as  |        private var followStageWidth : Boolean = false ;
as  |        private var followStageHeight : Boolean = false ;
as  |        private var factorStageWidth : Number = 0 ;
as  |        private var factorStageHeight : Number = 0 ;
as  | 
as  |     Functions:
as  | 
as  |     /*
as  |     ** The constructor doing the initialization of this object as usual.
as  |     */
as  |PU      public function BaseSprite ( applicationRef : Application ) : void
as  | 
as  |     /*
as  |     ** Listener functions: added and removed from stage.
as  |     ** (The stage propery will be not null in addedToStage
as  |     ** and null will be null in removedFromStage.)
as  |     */
as  |        protected function addedToStage ( e : Event ) : void
as  | 
as  |        protected function removedFromStage ( e : Event ) : void
as  | 
as  |     /*
as  |     ** This is the resetter of the basic properties.
as  |     ** Coordinate and size.
as  |     ** Every of them have to be 0.
as  |     ** The x and y coordinates of this object have to be set to 0 also.
as  |     */
as  |        private function coordinateSizeReset ( ) : void
as  | 
as  |     /*
as  |     ** Gets the base event dispatcher object to the outside world.
as  |     ** Usable from right after the object creation.
as  |     */
as  |PU      public function getBaseEventDispatcher ( ) : BaseEventDispatcher
as  | 
as  |     /*
as  |     ** This two method have to be overwritten and not needed to register for the
as  |     ** eventCoordinatesChanged and eventSizesChanged events of this in extending classes.
as  |     */
as  |        protected function doCoordinateChanged ( ) : void
as  | 
as  |        protected function doSizeChanged ( ) : void
as  | 
as  |     /*
as  |     ** Setting the coordinate and size properties of this object.
as  |     ** A property will be changed if it doesn't have that value already.
as  |     ** If a value changing is necessary then
as  |     ** - that will be done
as  |     ** - the x and y will also be set if necessary
as  |     ** - doCoordinateChanged or doSizeChanged method calls
as  |     ** - dispatching the event which is necessary to inform other objects
as  |     **   of the changing of values of these properties.
as  |     */
as  |PU      public function setcx ( newcx : int ) : void
as  | 
as  |PU      public function setcy ( newcy : int ) : void
as  | 
as  |PU      public function setcxy ( newcx : int , newcy : int ) : void
as  | 
as  |PU      public function setsw ( newsw : int ) : void
as  | 
as  |PU      public function setsh ( newsh : int ) : void
as  | 
as  |PU      public function setswh ( newsw : int , newsh : int ) : void
as  | 
as  |     /*
as  |     ** Sometimes we want an object to be in different location
as  |     ** but without the dispatch of coordinate changed event.
as  |     ** We can set the x and y properties of that object and then
as  |     ** these can update the own cx and cy properties using this method.
as  |     */
as  |PU      public function updatecxy ( ) : void
as  | 
as  |     /*
as  |     ** Follows the stage width.
as  |     */
as  |PU      public function setFollowStageWidth ( b : Boolean ) : void
as  | 
as  |     /*
as  |     ** Follows the stage height.
as  |     */
as  |PU      public function setFollowStageHeight ( b : Boolean ) : void
as  | 
as  |     /*
as  |     ** Calculate the factors.
as  |     */
as  |        private function calcFactorStageWidth ( ) : void
as  | 
as  |        private function calcFactorStageHeight ( ) : void
as  | 
as  |     /*
as  |     ** The stage has been resized.
as  |     */
as  |        private function stageResized ( e : Event ) : void
as  | 
as  |     /*
as  |     ** Dispatches the sizes changed event.
as  |     ** (To be lazy: instead of getBaseEventDispatcher ( ) . dispatchEvent ( eventSizesChanged ))
as  |     */
as  |        protected function dispatchEventSizesChanged ( ) : void
as  | 
as  |     /*
as  |     ** Dispatches the coordinates changed event.
as  |     ** (Same reason.)
as  |     */
as  |        protected function dispatchEventCoordinatesChanged ( ) : void
as  | 
as  |     /*
as  |     ** Gets the stored sprite properties: x y coordinates and w h sizes.
as  |     */
as  |PU      public function getcx ( ) : int
as  | 
as  |PU      public function getcy ( ) : int
as  | 
as  |PU      public function getsw ( ) : int
as  | 
as  |PU      public function getsh ( ) : int
as  | 
as  |     /*
as  |     ** Gets the properties needed for the reposition of the form elements.
as  |     */
as  |PU      public function getcxam ( ) : int
as  | 
as  |PU      public function getcxap ( ) : int
as  | 
as  |PU      public function getcxamap ( ) : int
as  | 
as  |PU      public function getcxsw ( ) : int
as  | 
as  |PU      public function getcxswam ( ) : int
as  | 
as  |PU      public function getcxswap ( ) : int
as  | 
as  |PU      public function getcxswamap ( ) : int
as  | 
as  |PU      public function getcyam ( ) : int
as  | 
as  |PU      public function getcyap ( ) : int
as  | 
as  |PU      public function getcyamap ( ) : int
as  | 
as  |PU      public function getcysh ( ) : int
as  | 
as  |PU      public function getcysham ( ) : int
as  | 
as  |PU      public function getcyshap ( ) : int
as  | 
as  |PU      public function getcyshamap ( ) : int
as  | 
as  |     /*
as  |     ** This is the calling of the grabage collector avoiding to have huge memory usage.
as  |     ** This System . gc ( ) do almost nothing at the first time, so let's invoke it multiple times.
as  |     */
as  |        private function systemGc ( ) : void
as  | 
as  |     /*
as  |     ** Sets and gets the value object
as  |     */
as  |PU      public function setValue ( v : Object ) : void
as  | 
as  |PU      public function getValue ( ) : Object
as  | 
as  |     /*
as  |     ** Sets ad gets the enabled property of this base sprite.
as  |     ** When disabled then the alpha can be set to a lower value than 1.
as  |     */
as  |PU      public function setEnabled ( e : Boolean ) : void
as  | 
as  |     /*
as  |     ** Sends the object to the highest or to the lowest depths.
as  |     */
as  |PU      public function toTheHighestDepth ( ) : void
as  | 
as  |PU      public function toTheLowestDepth ( ) : void
as  | 
as  |     /*
as  |     ** Gets the enabled property of this object.
as  |     */
as  |PU      public function getEnabled ( ) : Boolean
as  | 
as  |     /*
as  |     ** If the parent parent object is a content single then this opened object has to be
as  |     ** repositioned to get it visible in all of its size. (so the scroll may be scrolled.)
as  |     */
as  |PU      public function toBeVisible ( ) : void
as  | 
as  |     /*
as  |     ** This is the destructor method of this base object.
as  |     ** Public because sometimes we want to execute this on other objects.
as  |     ** Has to be overridden in extending classes.
as  |     ** This method is for exactly destroying everything that we can create in
as  |     ** the current class.
as  |     ** Systematically have to go thru the class and destroy everything.
as  |     ** 1 have to unregister from all of the registered events not registered into local_var . getBaseEventDispatcher ( )!
as  |     **   This is important!
as  |     ** 2 every event object has to stopImmediatePropagation
as  |     ** 3 has to call the parent destroy like this:
as  |PU   **   override public function destroy ( ) : void
as  |     **   {
as  |     **    ...
as  |     **    ...
as  |     **    super . destroy ( ) ;
as  |     **    ...
as  |     **   }
as  |     ** 4 properties have to be set the default value: to null, 0 or false.
as  |     */
as  |PU      public function destroy ( ) : void
as  | 
    +---------------------------------------------------------------------------
as  | com\kisscodesystems\KissAs3Fw\base\BaseTextField.as
as  | 
as  |     BaseTextField
as  | 
as  |     /*
as  |     ** This class is a part of the KissAs3Fw actionscrip framework.
as  |     ** See the header comment lines of the
as  |     ** com . kisscodesystems . KissAs3Fw . Application
as  |     ** The whole framework is available at:
as  |     ** https://github.com/kisscodesystems/KissAs3Fw
as  |     ** Demo applications:
as  |     ** https://github.com/kisscodesystems/KissAs3FwDemos
as  |     **
as  |     ** DESCRIPTION:
as  |     ** BaseTextField.
as  |     ** The base textfield class. (Very similar to the BaseSprite.)
as  |     **
as  |     ** This base class has the main properties as:
as  |     ** - x coordinate (store as cx (coordinate x))
as  |     ** - y coordinate (store as cy (coordinate y))
as  |     ** - width (store as sw (size width))
as  |     ** - height (store as sh (size height))
as  |     **
as  |     ** What if these properties have been changed.
as  |     **
as  |     ** 1: other classes.
as  |     ** This class has the baseEventDispatcher.
as  |     ** This will be the object to allow other objects to be registered.
as  |     ** The coordinates or size aboves will be changed then thru this object,
as  |     ** other objects can be informed aboout the changing of this main properties.
as  |     ** (If it registers to the eventCoordinatesChanged or eventSizesChanged events.)
as  |     **
as  |     ** 2: classes extending this.
as  |     ** These classes has not to be registered into this baseEventDispatcher
as  |     ** because the changing of the size or coordinate properties mean the calling
as  |     ** of the doCoordinateChanged or doSizeChanged. These two method can be
as  |     ** overwritten in the extending classes.
as  |     **
as  |     ** This has to contain the overridable destroy method. This is used for destroying
as  |     ** everything we created in the current extending class of this base class.
as  |     ** The initializator function: addedToStage and the removedFromStage have to be
as  |     ** here too. These also have to be overwritten in extending classes.
as  |     **
as  |     ** This also has to contain the grabage collector callings in a method: systemGc.
as  |     **
as  |     ** It can handle text codes and can listen to the changing of the app language!
as  |     **
as  |     ** If the html is set to true then we are going to listening continuously of the
as  |     ** changing of properties of the specified text type!
as  |     ** (The html property can be set to false.)
as  |     **
as  |     ** MAIN FEATURES:
as  |     ** - coordinates and sizes are stored separately!
as  |     ** - events will be dispatched when the sizes or the coordinates are changed.
as  |     ** - textType: what textformat to apply
as  |     ** - textCode: automatically changes the displayed text
as  |     **   according to the actual lang code of the applicaton
as  |     ** - html or single texts can be displayed
as  |     */
as  | 
as  |        package com . kisscodesystems . KissAs3Fw . base
as  |        extends TextField
as  |        lines   808
as  | 
as  |     Variables:
as  | 
as  |     // Reference to the Application object.
as  |        protected var application : Application = null ;
as  |     // These are the base properties.
as  |        private var cx : int = 0 ;
as  |        private var cy : int = 0 ;
as  |        private var sw : int = 0 ;
as  |        private var sh : int = 0 ;
as  |     // The event objects to be constructed and to be dispatched from here.
as  |        private var eventCoordinatesChanged : Event = null ;
as  |        private var eventSizesChanged : Event = null ;
as  |     // The base event dispatcher object: other objects can be registered into this.
as  |        private var baseEventDispatcher : BaseEventDispatcher = null ;
as  |     // This will be the type of the textfield. (application . getTexts ( ) . TEXT_TYPE_... )
as  |        private var textType : String = "" ;
as  |     // This will be the code of the textfield. The text will be displayed according to this.
as  |     // The text codes between texts . BTC and texts . ETC will be replaced by the texts on the
as  |     // actually used language. Can be a single text code or static text
as  |     // (always displayed with the same text independently from the lang code)
as  |     // or any mix up of these, the text will always be displayed correctly.
as  |        private var textCode : String = "" ;
as  |     // This will be the actual representation of the text code.
as  |     // (So, this will be displayed in the textfield.)
as  |        private var textText : String = "" ;
as  |     // This is a html textfield or not.
as  |        private var isHtml : Boolean = false ;
as  | 
as  |     Functions:
as  | 
as  |     /*
as  |     ** The constructor doing the initialization of this object as usual.
as  |     */
as  |PU      public function BaseTextField ( applicationRef : Application ) : void
as  | 
as  |     /*
as  |     ** Listener functions: added and removed from stage.
as  |     ** (The stage propery will be not null in addedToStage
as  |     ** and null will be null in removedFromStage.)
as  |     */
as  |        protected function addedToStage ( e : Event ) : void
as  | 
as  |        protected function removedFromStage ( e : Event ) : void
as  | 
as  |     /*
as  |     ** This is the resetter of the basic properties.
as  |     ** Coordinate and size.
as  |     ** Every of them have to be 0.
as  |     ** The x and y coordinates of this object have to be set to 0 also.
as  |     */
as  |        private function coordinateSizeReset ( ) : void
as  | 
as  |     /*
as  |     ** Gets the base event dispatcher object to the outside world.
as  |     ** Usable from right after the object creating.
as  |     */
as  |PU      public function getBaseEventDispatcher ( ) : BaseEventDispatcher
as  | 
as  |     /*
as  |     ** This two method have to be overwritten and not needed to register for the
as  |     ** eventCoordinatesChanged and eventSizesChanged events of this in extending classes.
as  |     */
as  |        protected function doCoordinateChanged ( ) : void
as  | 
as  |        protected function doSizeChanged ( ) : void
as  | 
as  |     /*
as  |     ** Setting the coordinate and size properties of this object.
as  |     ** A property will be changed if it doesn't have that value already.
as  |     ** If a value changing is necessary then
as  |     ** - that will be done
as  |     ** - the x and y will also be set if necessary
as  |     ** - doCoordinateChanged or doSizeChanged method calls
as  |     ** - dispatching the event which is necessary to inform other objects
as  |     **   of the changing of values of these properties.
as  |     ** setAutoSizeNone has to be called before setting size.
as  |     */
as  |PU      public function setcx ( newcx : int ) : void
as  | 
as  |PU      public function setcy ( newcy : int ) : void
as  | 
as  |PU      public function setcxy ( newcx : int , newcy : int ) : void
as  | 
as  |PU      public function setsw ( newsw : int ) : void
as  | 
as  |PU      public function setsh ( newsh : int ) : void
as  | 
as  |PU      public function setswh ( newsw : int , newsh : int ) : void
as  | 
as  |     /*
as  |     ** Sometimes we want an object to be in different location
as  |     ** but without the dispatch of coordinate changed event.
as  |     ** We can set the x and y properties of that object and then
as  |     ** these can update the own cx and cy properties using this method.
as  |     */
as  |PU      public function updatecxy ( ) : void
as  | 
as  |     /*
as  |     ** Dispatches the sizes changed event.
as  |     */
as  |        private function dispatchEventSizesChanged ( ) : void
as  | 
as  |     /*
as  |     ** Dispatches the coordinates changed event.
as  |     */
as  |        private function dispatchEventCoordinatesChanged ( ) : void
as  | 
as  |     /*
as  |     ** Gets the stored sprite properties: x y coordinates and w h sizes.
as  |     */
as  |PU      public function getcx ( ) : int
as  | 
as  |PU      public function getcy ( ) : int
as  | 
as  |PU      public function getsw ( ) : int
as  | 
as  |PU      public function getsh ( ) : int
as  | 
as  |     /*
as  |     ** Gets the properties needed for the reposition of the form elements.
as  |     */
as  |PU      public function getcxam ( ) : int
as  | 
as  |PU      public function getcxap ( ) : int
as  | 
as  |PU      public function getcxamap ( ) : int
as  | 
as  |PU      public function getcxsw ( ) : int
as  | 
as  |PU      public function getcxswam ( ) : int
as  | 
as  |PU      public function getcxswap ( ) : int
as  | 
as  |PU      public function getcxswamap ( ) : int
as  | 
as  |PU      public function getcyam ( ) : int
as  | 
as  |PU      public function getcyap ( ) : int
as  | 
as  |PU      public function getcyamap ( ) : int
as  | 
as  |PU      public function getcysh ( ) : int
as  | 
as  |PU      public function getcysham ( ) : int
as  | 
as  |PU      public function getcyshap ( ) : int
as  | 
as  |PU      public function getcyshamap ( ) : int
as  | 
as  |     /*
as  |     ** This is the calling of the grabage collector avoiding to have huge memory usage.
as  |     ** This System . gc ( ) do almost nothing at the first time, so let's invoke it multiple times.
as  |     */
as  |        private function systemGc ( ) : void
as  | 
as  |     /*
as  |     ** This is the destructor method of this base object.
as  |     ** Public because sometimes we want to execute this on other objects.
as  |     ** Has to be overridden in extending classes.
as  |     ** This method is for exactly destroying everything that we can create in
as  |     ** the current class.
as  |     ** Systematically have to go thru the class and destroy everything.
as  |     ** 1 have to unregister from all of the registered events not registered into local_var . getBaseEventDispatcher ( )!
as  |     **   This is important!
as  |     ** 2 every event object has to stopImmediatePropagation
as  |     ** 3 has to call the parent destroy like this:
as  |PU   **   override public function destroy ( ) : void
as  |     **   {
as  |     **    ...
as  |     **    ...
as  |     **    super . destroy ( ) ;
as  |     **    ...
as  |     **   }
as  |     ** 4 properties have to be set the default value: to null, 0 or false.
as  |     */
as  |PU      public function destroy ( ) : void
as  | 
as  |     /*
as  |     ** Gets the html property.
as  |     */
as  |PU      public function getHtml ( ) : Boolean
as  | 
as  |     /*
as  |     ** Sets the html property.
as  |     */
as  |PU      public function setHtml ( html : Boolean ) : void
as  | 
as  |     /*
as  |     ** Gets the wordwrap property.
as  |     */
as  |PU      public function getWordWrap ( ) : Boolean
as  | 
as  |     /*
as  |     ** Sets the wordwrap property.
as  |     */
as  |PU      public function setWordWrap ( ww : Boolean ) : void
as  | 
as  |     /*
as  |     ** Sets the maxChars property.
as  |     */
as  |PU      public function setMaxChars ( i : int ) : void
as  | 
as  |     /*
as  |     ** Sets the restrict property.
as  |     */
as  |PU      public function setRestrict ( s : String ) : void
as  | 
as  |     /*
as  |     ** Clears the autoSize. After this, the textfield can be formatted as we want.
as  |     */
as  |PU      public function setAutoSizeNone ( ) : void
as  | 
as  |     /*
as  |     ** Sets the autoSize to left.
as  |     */
as  |PU      public function setAutoSizeLeft ( ) : void
as  | 
as  |     /*
as  |     ** Sets the password property of this textfield
as  |     */
as  |PU      public function setDisplayAsPassword ( b : Boolean ) : void
as  | 
as  |     /*
as  |     ** Clears the dropshadow filter of this textfield.
as  |     */
as  |        private function clearDropShadowFilter ( ) : void
as  | 
as  |     /*
as  |     ** Sets the dropShadowFilter according to the given color.
as  |     ** (The dropshadow filter can be bright or dark.)
as  |     */
as  |        private function setDropShadowFilter ( color : Number ) : void
as  | 
as  |     /*
as  |     ** It will happen if the text format of this object has been changed.
as  |     */
as  |        private function textFormatBrightChanged ( e : Event ) : void
as  | 
as  |        private function textFormatMidChanged ( e : Event ) : void
as  | 
as  |        private function textFormatDarkChanged ( e : Event ) : void
as  | 
as  |     /*
as  |     ** Gets the textcode of this textfield.
as  |     ** Having textCode means that in case of language changing, we can change
as  |     ** the displayed text automatically.
as  |     */
as  |PU      public function getTextCode ( ) : String
as  | 
as  |     /*
as  |     ** Gets the calculated value of the textCode.
as  |     */
as  |PU      public function getTextText ( ) : String
as  | 
as  |     /*
as  |     ** Gets the plain text.
as  |     */
as  |PU      public function getPlainText ( ) : String
as  | 
as  |     /*
as  |     ** Gets the html text.
as  |     */
as  |PU      public function getHtmlText ( ) : String
as  | 
as  |     /*
as  |     ** Is this a single text or contains one or more text codes?
as  |     */
as  |        private function containsTextCode ( string : String ) : Boolean
as  | 
as  |     /*
as  |     ** Constructing the displayable text from the text code according to the actual language code.
as  |     */
as  |        private function constructText ( ) : void
as  | 
as  |     /*
as  |     ** Displays the text from the text code given before.
as  |     */
as  |        private function displayText ( ) : void
as  | 
as  |     /*
as  |     ** Sets the text to uppercase.
as  |     */
as  |PU      public function setTextToUpperCase ( ) : void
as  | 
as  |     /*
as  |     ** Will be called if we have registered to the language code changing event.
as  |     */
as  |        private function langCodeChanged ( e : Event ) : void
as  | 
as  |     /*
as  |     ** Gets the type of this text.
as  |     */
as  |PU      public function getTextType ( ) : String
as  | 
as  |     /*
as  |     ** Sets the textcode of this textfield.
as  |     ** Having textCode means that in case of language changing, we can change
as  |     ** the displayed text automatically.
as  |     */
as  |PU      public function setTextCode ( newTextCode : String ) : void
as  | 
as  |     /*
as  |     ** Applying the textformat to the current text.
as  |     */
as  |        protected function textFormatApply ( ) : void
as  | 
as  |     /*
as  |     ** Sets the type of this text.
as  |     */
as  |PU      public function setTextType ( newTextType : String ) : void
as  | 
    +---------------------------------------------------------------------------
as  | com\kisscodesystems\KissAs3Fw\base\BaseWorkingButton.as
as  | 
as  |     BaseWorkingButton
as  | 
as  |     /*
as  |     ** This class is a part of the KissAs3Fw actionscrip framework.
as  |     ** See the header comment lines of the
as  |     ** com . kisscodesystems . KissAs3Fw . Application
as  |     ** The whole framework is available at:
as  |     ** https://github.com/kisscodesystems/KissAs3Fw
as  |     ** Demo applications:
as  |     ** https://github.com/kisscodesystems/KissAs3FwDemos
as  |     **
as  |     ** DESCRIPTION:
as  |     ** BaseWorkingButton.
as  |     ** The base working button class.
as  |     **
as  |     ** MAIN FEATURES:
as  |     ** - can handle: mouse over, mouse out, press, click
as  |     ** - custom event string can be specified to be able to register into.
as  |     */
as  | 
as  |        package com . kisscodesystems . KissAs3Fw . base
as  |        extends BaseSprite
as  |        lines   207
as  | 
as  |     Variables:
as  | 
as  |     // The background of the button.
as  |        private var baseButton : BaseButton = null ;
as  |     // The content of the button
as  |        protected var contentSprite : BaseSprite = null ;
as  |     // The foreground of the button
as  |        private var foregroundSprite : BaseSprite = null ;
as  |     // This will be the event object which will be dispatched
as  |     // in application . getBaseEventDispatcher ( ).
as  |        private var eventClick : Event = null ;
as  |     // Custom event to dispatched.
as  |        private var customEvent : Event = null ;
as  | 
as  |     Functions:
as  | 
as  |     /*
as  |     ** Constructs the original object.
as  |     */
as  |PU      public function BaseWorkingButton ( applicationRef : Application ) : void
as  | 
as  |     /*
as  |     ** Sets the custom event string to be dispatched later.
as  |     ** Setting it to null clears the custom event and its dispatching.
as  |     */
as  |PU      public function setCustomEventString ( s : String ) : void
as  | 
as  |     /*
as  |     ** Gets the contentSprite.
as  |     */
as  |PU      public function getContentSprite ( ) : BaseSprite
as  | 
as  |     /*
as  |     ** These mouse events have to be defined: roll over, roll out , mouse down, click.
as  |     */
as  |        private function rollOver ( e : MouseEvent ) : void
as  | 
as  |        private function rollOut ( e : MouseEvent ) : void
as  | 
as  |        private function mouseDown ( e : MouseEvent ) : void
as  | 
as  |        private function click ( e : MouseEvent ) : void
as  | 
as  |     /*
as  |     ** This will be called when the button is clicked.
as  |     */
as  |        protected function baseWorkingButtonClick ( ) : void
as  | 
as  |     /*
as  |     ** Overriding the setsw setsh and setswh functions.
as  |     ** Do the same but it is necessary to reposition the actualpos shape.
as  |     */
as  |PU      override public function setsw ( newsw : int ) : void
as  | 
as  |PU      override public function setsh ( newsh : int ) : void
as  | 
as  |PU      override public function setswh ( newsw : int , newsh : int ) : void
as  | 
as  |     /*
as  |     ** Resets the properties of this base button.
as  |     ** And then repaints it of course.
as  |     ** This method will be registered into the changing of the properties of Application.
as  |     */
as  |        private function resetSizes ( ) : void
as  | 
as  |     /*
as  |     ** Destroying this object by calling this method.
as  |     */
as  |PU      override public function destroy ( ) : void
as  | 
    +---------------------------------------------------------------------------
    | com\kisscodesystems\KissAs3Fw\prop
    +---------------------------------------------------------------------------
as  | com\kisscodesystems\KissAs3Fw\prop\PropsApp.as
as  | 
as  |     PropsApp
as  | 
as  |     /*
as  |     ** This class is a part of the KissAs3Fw actionscrip framework.
as  |     ** See the header comment lines of the
as  |     ** com . kisscodesystems . KissAs3Fw . Application
as  |     ** The whole framework is available at:
as  |     ** https://github.com/kisscodesystems/KissAs3Fw
as  |     ** Demo applications:
as  |     ** https://github.com/kisscodesystems/KissAs3FwDemos
as  |     **
as  |     ** DESCRIPTION:
as  |     ** PropsApp.
as  |     ** The properties of the application which will not dispatch any event after changing.
as  |     ** No destroy method.
as  |     */
as  | 
as  |        package com . kisscodesystems . KissAs3Fw . prop
as  |        lines   401
as  | 
as  |     Variables:
as  | 
as  |     // THE VALUES CAN BE REDEFINED RIGHT AFTER THE SUPER CALLING
as  |     // IN THE CONSTRUCTOR IN THE EXTENDING CLASS OF THE APPLICATION.
as  |     // PLEASE NOTE THAT THIS VALUE CHANGING WILL DISPATCH NO EVENTS
as  |     // The name of the application.
as  |        protected var applicationName : String = "Application" ;
as  |     // The version of this application.
as  |        protected var applicationVersion : String = "version 1.0" ;
as  |     // The release date of this version
as  |        protected var applicationReleaseDate : String = "06.21.2017" ;
as  |     // The homepage of this application
as  |        protected var applicationSoftwareHomepageTxt : Array = new Array ( ) ;
as  |        protected var applicationSoftwareHomepageUrl : Array = new Array ( ) ;
as  |     // The maximum blur of the glow filter.
as  |        protected var maxBlur : int = 8 ;
as  |     // Uses embed foonts or not.
as  |        protected var useEmbedFonts : Boolean = false ;
as  |     // The menu and the settings panel is enabled or disabled: here at the beginning!
as  |        protected var panelMenuEnabled : Boolean = true ;
as  |        protected var panelSettingsEnabled : Boolean = true ;
as  |     // The line thickness of other drawing.
as  |        protected var drawOtherLineThickness : int = 2 ;
as  |     // The minimum marker alpha values.
as  |        protected var baseListMarkMinAlpha1 : Number = 0.15 ;
as  |        protected var baseListMarkMinAlpha2 : Number = 0.3 ;
as  |     // The factor of the filling alpha to mark the elements.
as  |        protected var baseListMarkAlpha1Factor : Number = 1 / 6 ;
as  |        protected var baseListMarkAlpha2Factor : Number = 1 / 3 ;
as  |     // The constants of the color object.
as  |        protected var colorSquareLineColor : Number = 0x000000 ;
as  |        protected var colorSquareLineAlphaMouseOut : Number = 0.2 ;
as  |        protected var colorSquareLineAlphaMouseOver : Number = 1 ;
as  |     // The alpha of the disabled object.
as  |        protected var disabledAlpha : Number = 0.5 ;
as  |     // The minimum sizes of this application.
as  |        protected var appSizeMinWidth : int = 300 ;
as  |        protected var appSizeMinHeight : int = 300 ;
as  |     // The height o fhte header and footeer by mid text type line numbers.
as  |     // 0 means no header or no footer.
as  |        protected var headerHeightMidLines : int = 1 ;
as  |        protected var footerHeightMidLines : int = 0 ;
as  |     // The weight of the background.
as  |     // Higher value results slower movement.
as  |        protected var weightBackgroundPicture : int = 8 ;
as  |     // The weight of the content in the base scroll.
as  |        protected var weightScrollContent : int = 8 ;
as  |     // This will be the margin of the scroll.
as  |     // Shows where the content is actually.
as  |        protected var scrollMargin : int = 10 ;
as  |     // The maximum number of widgets in the first line/column (orientation horizontal/vertical).
as  |        protected var widgetsElementsFix : int = 3 ;
as  |     // The margin of the widgets.
as  |        protected var widgetsMargin : int = 30 ;
as  |     // The minimum sizes of a widget.
as  |        protected var widgetSizeMinWidth : int = 200 ;
as  |        protected var widgetSizeMinHeight : int = 150 ;
as  |     // Enable or disable the hiding of the widgets.
as  |        protected var widgetEnableManualHide : Boolean = true ;
as  |     // Enable or disable the resizing of the widgets.
as  |        protected var widgetEnableManualResize : Boolean = true ;
as  |     // The margin of resizing the widget (the margin around the widget to grab to resize it).
as  |        protected var widgetResizeMargin : int = 6 ;
as  |     // The font size from the stage is calculated by this value if appFontSize == 0.
as  |        protected var fontSizeFactor : Number = 1 / 48 ;
as  |     // The size factors for the menu and settings panel.
as  |        protected var panelSettingsWidthFactor : Number = 2 / 5 ;
as  |        protected var panelSettingsHeightFactor : Number = 3 / 5 ;
as  |        protected var panelAlertWidthFactor : Number = 1 / 2 ;
as  |        protected var panelAlertHeighthFactor : Number = 1 / 3 ;
as  |        protected var panelMenuWidthFactor : Number = 1 / 5 ;
as  |        protected var panelMenuHeighthFactor : Number = 4 / 5 ;
as  |     // Properties to draw the base shapes.
as  |        protected var lineAlpha : Number = 1 ;
as  |        protected var lineColor2 : Number = 0xaaaaaa ;
as  |        protected var lineColor1 : Number = 0x111111 ;
as  |        protected var brightColor2 : Number = 0x222222 ;
as  |        protected var pixelHinting : Boolean = true ;
as  |        protected var gradientAlpha1 : Number = 0.4 ;
as  |        protected var gradientAlpha2 : Number = 0.3 ;
as  |        protected var gradientRatio1 : int = 0 ;
as  |        protected var gradientRatio2 : int = 255 ;
as  |        protected var lineRatio1 : int = 0 ;
as  |        protected var lineRatio2 : int = 255 ;
as  |        protected var focalPointRatio : Number = 0.7 ;
as  |     // The margin of the background.
as  |     // This is the half of the difference when
as  |     // the background image can move according to the mouse pointer.
as  |        protected var liveBackgroundMargin : int = 50 ;
as  |     // A blur filter object when the foreground is set to visible.
as  |        protected var blurFilterBackMiddle : BlurFilter = new BlurFilter ( 8 , 8 , 8 ) ;
as  |     // Blur filter to the color displayer shape of color picker.
as  |        protected var blurFilterColorPickerColor : BlurFilter = new BlurFilter ( 5 , 1 , 1 ) ;
as  |     // The minimum size of the base objects.
as  |        protected var baseMinw : int = 0 ;
as  |        protected var baseMinh : int = 0 ;
as  |     // The minimum width of a single line text field.
as  |        protected var textsMinSize : int = 50 ;
as  |     // Smartphone mode.
as  |        protected var smartphoneMode : Boolean = false ;
as  |     // The maximum displayable elements in the lang setter.
as  |        protected var langSetterMaxElements : int = 5 ;
as  |     // The pixels to move the content after a mouse wheel.
as  |        protected var wheelDeltaPixels : int = 30 ;
as  |     // The size will be increased of the prev and next drawed buttons. (0.5 will be the original size factor)
as  |        protected var buttonDrawMovePrevNextScale : Number = 0.7 ;
as  |     // The maximum number of widgetcontainers
as  |        protected var maxNumOfWidgetcontainers : int = 5 ;
as  | 
as  |     Functions:
as  | 
as  |     /*
as  |     ** Constructor.
as  |     */
as  |PU      public function PropsApp ( ) : void { }
as  | 
as  |     /*
as  |     ** Prepares the view of this application into smartphone friendly.
as  |     */
as  |PU      public function toSmartphone ( ) : void
as  | 
as  |     /*
as  |     ** The getter functions of the properties can be overwritten in the constructor of extending class.
as  |     */
as  |PU      public function getApplicationName ( ) : String
as  | 
as  |PU      public function getApplicationVersion ( ) : String
as  | 
as  |PU      public function getApplicationReleaseDate ( ) : String
as  | 
as  |PU      public function getApplicationSoftwareHomepageTxt ( ) : Array
as  | 
as  |PU      public function getApplicationSoftwareHomepageUrl ( ) : Array
as  | 
as  |PU      public function getUseEmbedFonts ( ) : Boolean
as  | 
as  |PU      public function getPanelMenuEnabled ( ) : Boolean
as  | 
as  |PU      public function getPanelSettingsEnabled ( ) : Boolean
as  | 
as  |PU      public function getDrawOtherLineThickness ( ) : int
as  | 
as  |PU      public function getBaseListMarkMinAlpha1 ( ) : Number
as  | 
as  |PU      public function getBaseListMarkMinAlpha2 ( ) : Number
as  | 
as  |PU      public function getBaseListMarkAlpha1Factor ( ) : Number
as  | 
as  |PU      public function getBaseListMarkAlpha2Factor ( ) : Number
as  | 
as  |PU      public function getColorSquareLineColor ( ) : Number
as  | 
as  |PU      public function getColorSquareLineAlphaMouseOut ( ) : Number
as  | 
as  |PU      public function getColorSquareLineAlphaMouseOver ( ) : Number
as  | 
as  |PU      public function getDisabledAlpha ( ) : Number
as  | 
as  |PU      public function getAppSizeMinWidth ( ) : int
as  | 
as  |PU      public function getAppSizeMinHeight ( ) : int
as  | 
as  |PU      public function getHeaderHeightMidLines ( ) : int
as  | 
as  |PU      public function getFooterHeightMidLines ( ) : int
as  | 
as  |PU      public function getWeightBackgroundPicture ( ) : int
as  | 
as  |PU      public function getWeightScrollContent ( ) : int
as  | 
as  |PU      public function getScrollMargin ( ) : int
as  | 
as  |PU      public function getWidgetsElementsFix ( ) : int
as  | 
as  |PU      public function getWidgetsMargin ( ) : int
as  | 
as  |PU      public function getWidgetSizeMinWidth ( ) : int
as  | 
as  |PU      public function getWidgetSizeMinHeight ( ) : int
as  | 
as  |PU      public function getWidgetEnableManualHide ( ) : Boolean
as  | 
as  |PU      public function getWidgetEnableManualResize ( ) : Boolean
as  | 
as  |PU      public function getWidgetResizeMargin ( ) : int
as  | 
as  |PU      public function getFontSizeFactor ( ) : Number
as  | 
as  |PU      public function getPanelSettingsWidthFactor ( ) : Number
as  | 
as  |PU      public function getPanelSettingsHeightFactor ( ) : Number
as  | 
as  |PU      public function getPanelMenuWidthFactor ( ) : Number
as  | 
as  |PU      public function getPanelMenuHeighthFactor ( ) : Number
as  | 
as  |PU      public function getPanelAlertWidthFactor ( ) : Number
as  | 
as  |PU      public function getPanelAlertHeighthFactor ( ) : Number
as  | 
as  |PU      public function getLineAlpha ( ) : Number
as  | 
as  |PU      public function getLineColor2 ( ) : Number
as  | 
as  |PU      public function getLineColor1 ( ) : Number
as  | 
as  |PU      public function getBrightColor2 ( ) : Number
as  | 
as  |PU      public function getPixelHinting ( ) : Boolean
as  | 
as  |PU      public function getGradientAlpha1 ( ) : Number
as  | 
as  |PU      public function getGradientAlpha2 ( ) : Number
as  | 
as  |PU      public function getGradientRatio1 ( ) : int
as  | 
as  |PU      public function getGradientRatio2 ( ) : int
as  | 
as  |PU      public function getLineRatio1 ( ) : int
as  | 
as  |PU      public function getLineRatio2 ( ) : int
as  | 
as  |PU      public function getFocalPointRatio ( ) : Number
as  | 
as  |PU      public function getLiveBackgroundMargin ( ) : int
as  | 
as  |PU      public function getBlurFilterBackMiddle ( ) : BlurFilter
as  | 
as  |PU      public function getMaxBlur ( ) : int
as  | 
as  |PU      public function getBlurFilterColorPickerColor ( ) : BlurFilter
as  | 
as  |PU      public function getBaseMinw ( ) : int
as  | 
as  |PU      public function getBaseMinh ( ) : int
as  | 
as  |PU      public function getTextsMinSize ( ) : int
as  | 
as  |PU      public function getSmartphoneMode ( ) : Boolean
as  | 
as  |PU      public function getLangSetterMaxElements ( ) : int
as  | 
as  |PU      public function getWheelDeltaPixels ( ) : int
as  | 
as  |PU      public function getButtonDrawMovePrevNextScale ( ) : Number
as  | 
as  |PU      public function getMaxNumOfWidgetcontainers ( ) : int
as  | 
    +---------------------------------------------------------------------------
as  | com\kisscodesystems\KissAs3Fw\prop\PropsDyn.as
as  | 
as  |     PropsDyn
as  | 
as  |     /*
as  |     ** This class is a part of the KissAs3Fw actionscrip framework.
as  |     ** See the header comment lines of the
as  |     ** com . kisscodesystems . KissAs3Fw . Application
as  |     ** The whole framework is available at:
as  |     ** https://github.com/kisscodesystems/KissAs3Fw
as  |     ** Demo applications:
as  |     ** https://github.com/kisscodesystems/KissAs3FwDemos
as  |     **
as  |     ** DESCRIPTION:
as  |     ** PropsDyn. Variables that can trigger an event and which event
as  |     ** is able to listen to in the application . getBaseEventDispatcher ( ).
as  |     ** No destroy method.
as  |     **
as  |     */
as  | 
as  |        package com . kisscodesystems . KissAs3Fw . prop
as  |        lines   680
as  | 
as  |     Variables:
as  | 
as  |     // Adding the font.
as  |        public const FONT_FACE_ARIAL : String = "Arial" ;
as  |     // Adding the background bitmap.
as  |        [ Embed ( source = "../../../../../res/bg/bg1.jpg" ) ]
as  |        private var Bg1 : Class ;
as  |        private var bg1Bitmap : Bitmap ;
as  |     // Reference to the Application object.
as  |     // Protected because we may add some newapplication . getTexts ( ) into it.
as  |        protected var application : Application = null ;
as  |     // APP VARIABLES: THEY CAN BE CHANGED AND USED FOR DISPLAYING.
as  |     // THE CHANGING OF THESE WILL DISPATCH THE SPECIFIC EVENT
as  |     // TO NOTIFY THE OBJECT TO HANDLE THE PROPER CHANGE EVENTS.
as  |     // (THE CHANGING OF THE LANGUAGE CODE IS IN THE TEXTSTOCK CLASS.)
as  |        private var appWidgetsOrientation : String = "" ;
as  |        private var appLineThickness : int = 5 ;
as  |        private var appMargin : int = 20 ;
as  |        private var appPadding : int = 10 ;
as  |        private var appRadius1 : int = 10 ;
as  |        private var appRadius0 : int = 10 ;
as  |        private var appBackgroundBgColor : Number = 0x000000 ;
as  |        private var appBackgroundFgColor : Number = 0xffffff ;
as  |        private var appBackgroundFillAlpha : Number = 1 ;
as  |        protected var appBackgroundImage : String = "" ;
as  |        private var appBackgroundAlign : String = "" ;
as  |        private var appBackgroundAlpha : Number = 1 ;
as  |        private var appBackgroundLive : Boolean = false ;
as  |        private var appFontFace : String = "Arial" ;
as  |        private var appFontSize : int = 20 ;
as  |        private var appFontColorBright : Number = 0xffffff ;
as  |        private var appFontColorMid : Number = 0x888888 ;
as  |        private var appFontColorDark : Number = 0x000000 ;
as  |        private var appFontBold : Boolean = false ;
as  |        private var appFontItalic : Boolean = false ;
as  |     // THE OBJECTS ARE FROM THE ABOVES.
as  |     // These are the textformat objects. Every BaseTextField referers to them.
as  |        private var textFormatBright : TextFormat = null ;
as  |        private var textFormatMid : TextFormat = null ;
as  |        private var textFormatDark : TextFormat = null ;
as  |     // The initial text sizes. These will allways be recalculated if the text formats change.
as  |        private var textFieldHeightBright : int = 0 ;
as  |        private var textFieldHeightMid : int = 0 ;
as  |        private var textFieldHeightDark : int = 0 ;
as  |     // THESE ARE THE EVENTS THE APPLICATION AND ITS OBJECT CAN LISTEN TO.
as  |        private var eventAppWidgetsOrientationChanged : Event = null ;
as  |        private var eventAppLineThicknessChanged : Event = null ;
as  |        private var eventAppMarginChanged : Event = null ;
as  |        private var eventAppPaddingChanged : Event = null ;
as  |        private var eventAppRadiusChanged : Event = null ;
as  |        private var eventAppBackgroundBgColorChanged : Event = null ;
as  |        private var eventAppBackgroundFgColorChanged : Event = null ;
as  |        protected var eventAppBackgroundImageOrAlignOrAlphaChanged : Event = null ;
as  |        private var eventAppBackgroundLiveChanged : Event = null ;
as  |        private var eventAppBackgroundFillAlphaChanged : Event = null ;
as  |        private var eventAppTextFormatBrightChanged : Event = null ;
as  |        private var eventAppTextFormatMidChanged : Event = null ;
as  |        private var eventAppTextFormatDarkChanged : Event = null ;
as  |     // This bitmapdata will be drawn onto the backgroundImageShape of Background.
as  |        protected var backgroundBitmapData : BitmapData = null ;
as  |     // Object for the predefined displaying styles.
as  |        protected var appDisplayingStyles : Object = new Object ( ) ;
as  | 
as  |     Functions:
as  | 
as  |     /*
as  |     ** Constructing the props dyn object.
as  |     */
as  |PU      public function PropsDyn ( applicationRef : Application ) : void
as  | 
as  |     /*
as  |     ** Prepares the view of this application into smartphone friendly.
as  |     */
as  |PU      public function toSmartphone ( ) : void
as  | 
as  |     /*
as  |     ** Gets the fonts of this application.
as  |     ** The same method as ibn theapplication . getTexts ( )tock:
as  |     ** A new array will return containing the
as  |     ** strings of the font names.
as  |     */
as  |PU      public function getFontFaces ( ) : Array
as  | 
as  |     /*
as  |     ** Gets the font sizes.
as  |     */
as  |PU      public function getFontSizes ( ) : Array
as  | 
as  |     /*
as  |     ** Sets the text height.
as  |     */
as  |        private function setTextFieldHeight ( textType : String ) : void
as  | 
as  |     /*
as  |     ** Gets the text height.
as  |     */
as  |PU      public function getTextFieldHeight ( textType : String ) : int
as  | 
as  |     /*
as  |     ** Gets the reference of the displaying styles object.
as  |     */
as  |PU      public function getAppDisplayingStyles ( ) : Object
as  | 
as  |     /*
as  |     ** Sets the orientation of the widgets.
as  |     */
as  |PU      public function setWidgetsOrientation ( newWidgetsOrientation : String ) : void
as  | 
as  |     /*
as  |     ** Sets the predefined displaying styles.
as  |     */
as  |PU      public function setDisplayingStyle ( styleName : String ) : void
as  | 
as  |     /*
as  |     ** The following methods and functions get and set the proper values.
as  |     */
as  |PU      public function getAppWidgetsOrientation ( ) : String
as  | 
as  |PU      public function setAppWidgetsOrientation ( newWidgetsOrientation : String ) : void
as  | 
as  |PU      public function getAppLineThickness ( ) : int
as  | 
as  |PU      public function setAppLineThickness ( newLineThickness : int ) : void
as  | 
as  |PU      public function getAppMargin ( ) : int
as  | 
as  |PU      public function setAppMargin ( newMargin : int ) : void
as  | 
as  |PU      public function getAppPadding ( ) : int
as  | 
as  |PU      public function setAppPadding ( newPadding : int ) : void
as  | 
as  |PU      public function getAppRadius0 ( ) : int
as  | 
as  |PU      public function getAppRadius1 ( ) : int
as  | 
as  |PU      public function setAppRadius0 ( newRadius0 : int ) : void
as  | 
as  |PU      public function setAppRadius1 ( newRadius1 : int ) : void
as  | 
as  |PU      public function getAppBackgroundBgColor ( ) : Number
as  | 
as  |PU      public function setAppBackgroundBgColor ( newBackgroundBgColor : Number ) : void
as  | 
as  |PU      public function getAppBackgroundFgColor ( ) : Number
as  | 
as  |PU      public function setAppBackgroundFgColor ( newBackgroundFgColor : Number ) : void
as  | 
as  |PU      public function getAppBackgroundFillAlpha ( ) : Number
as  | 
as  |PU      public function setAppBackgroundFillAlpha ( newFillAlpha : Number ) : void
as  | 
as  |PU      public function getAppBackgroundImage ( ) : String
as  | 
as  |PU      public function setAppBackgroundImage ( newBackgroundImage : String ) : void
as  | 
as  |PU      public function getAppBackgroundAlign ( ) : String
as  | 
as  |PU      public function setAppBackgroundAlign ( newBackgroundAlign : String ) : void
as  | 
as  |PU      public function getAppBackgroundAlpha ( ) : Number
as  | 
as  |PU      public function setAppBackgroundAlpha ( newAppBackgroundAlpha : Number ) : void
as  | 
as  |PU      public function getAppBackgroundLive ( ) : Boolean
as  | 
as  |PU      public function setAppBackgroundLive ( newBackgroundLive : Boolean ) : void
as  | 
as  |PU      public function getAppFontFace ( ) : String
as  | 
as  |        private function setAllTextFieldHeightsAndDispatchChanging ( ) : void
as  | 
as  |PU      public function setAppFontFace ( newFontFace : String ) : void
as  | 
as  |PU      public function getAppFontSize ( ) : int
as  | 
as  |PU      public function setAppFontSize ( newFontSize : int ) : void
as  | 
as  |PU      public function setFontSize ( i : int ) : void
as  | 
as  |PU      public function getAppFontColorBright ( ) : Number
as  | 
as  |PU      public function getAppFontColorMid ( ) : Number
as  | 
as  |PU      public function getAppFontColorDark ( ) : Number
as  | 
as  |PU      public function setAppFontColorBright ( newFontColorBright : Number ) : void
as  | 
as  |PU      public function setAppFontColorMid ( newFontColorMid : Number ) : void
as  | 
as  |PU      public function setAppFontColorDark ( newFontColorDark : Number ) : void
as  | 
as  |PU      public function getAppFontBold ( ) : Boolean
as  | 
as  |PU      public function setAppFontBold ( newFontBold : Boolean ) : void
as  | 
as  |PU      public function getAppFontItalic ( ) : Boolean
as  | 
as  |PU      public function setAppFontItalic ( newFontItalic : Boolean ) : void
as  | 
as  |PU      public function getTextFormatBright ( ) : TextFormat
as  | 
as  |PU      public function getTextFormatMid ( ) : TextFormat
as  | 
as  |PU      public function getTextFormatDark ( ) : TextFormat
as  | 
as  |PU      public function getBackgroundBitmapData ( ) : BitmapData
as  | 
as  |        protected function setBackgroundBitmapData ( ) : void
as  | 
as  |        protected function disposeBackgroundBitmapData ( ) : void
as  | 
    +---------------------------------------------------------------------------
    | com\kisscodesystems\KissAs3Fw\text
    +---------------------------------------------------------------------------
as  | com\kisscodesystems\KissAs3Fw\text\TextStock.as
as  | 
as  |     TextStock
as  | 
as  |     /*
as  |     ** This class is a part of the KissAs3Fw actionscrip framework.
as  |     ** See the header comment lines of the
as  |     ** com . kisscodesystems . KissAs3Fw . Application
as  |     ** The whole framework is available at:
as  |     ** https://github.com/kisscodesystems/KissAs3Fw
as  |     ** Demo applications:
as  |     ** https://github.com/kisscodesystems/KissAs3FwDemos
as  |     **
as  |     ** DESCRIPTION:
as  |     ** TextStock.
as  |     ** This will be the store of the displayable texts of the application.
as  |     ** Single texts and lists can be stored.
as  |     ** The lists contain the text codes.
as  |     ** The this set of text codes or these text representations
as  |     ** of the currend langCode can be returned.
as  |     ** No destroy method, it is constructed one time and we are done.
as  |     */
as  | 
as  |        package com . kisscodesystems . KissAs3Fw . text
as  |        lines   371
as  | 
as  |     Variables:
as  | 
as  |     // Reference to the Application object.
as  |     // Protected because we may add some new texts into it.
as  |        protected var application : Application = null ;
as  |     // The special array contains the codes of the available languages in the app.
as  |        protected var langCodes : Array = null ;
as  |     // The background images.
as  |        protected var textCodesBgImagePics : Array = null ;
as  |     // This object will store all of the texts.
as  |     // Protected because we may add some new texts into it.
as  |        protected var texts : Object = null ;
as  |     // Other lists. Protected because in case of adding new languages, these have to be modified.
as  |        protected var textCodesYesNo : Array = null ;
as  |        protected var textCodesOkCancel : Array = null ;
as  |        protected var textCodesBgImageAligns : Array = null ;
as  |        protected var textCodesTextTypes : Array = null ;
as  |        protected var textCodesWidgetsOrientations : Array = null ;
as  |        protected var textCodesDisplayingStyles : Array = null ;
as  |     // This is the actual lang code of this application.
as  |        private var langCode : String = null ;
as  |     // This event must be dispatched when the code of the language is changed.
as  |        private var eventLangCodeChanged : Event = null ;
as  | 
as  |     Functions:
as  | 
as  |     /*
as  |     ** Constructing the text stock object.
as  |     */
as  |PU      public function TextStock ( applicationRef : Application ) : void
as  | 
as  |     /*
as  |     ** Initializing the texts.
as  |     */
as  |        private function textIni ( ) : void
as  | 
as  |     /*
as  |     ** Destroying this application.
as  |     */
as  |PU      public function destroy ( ) : void
as  | 
as  |     /*
as  |     ** Getting a single text.
as  |     */
as  |PU      public function getText ( textCode : String ) : String
as  | 
as  |     /*
as  |     ** Sets the language code of this application.
as  |     */
as  |PU      public function setLangCode ( newCode : String ) : void
as  | 
as  |     /*
as  |     ** Gets the actual language code of this application.
as  |     */
as  |PU      public function getLangCode ( ) : String
as  | 
as  |     /*
as  |     ** Gets the list (array) of the language codes in this app.
as  |     */
as  |PU      public function getLangCodes ( ) : Array
as  | 
as  |     /*
as  |     ** Gets the list (array) of the texts of the language codes in this app.
as  |     */
as  |PU      public function getLangTexts ( ) : Array
as  | 
as  |     /*
as  |     ** Similar to the language codes and texts,
as  |     ** The functions below give the correct array according to the request.
as  |     */
as  |PU      public function getTextCodesYesNo ( ) : Array
as  | 
as  |PU      public function getTextsYesNo ( ) : Array
as  | 
as  |PU      public function getTextCodesOkCancel ( ) : Array
as  | 
as  |PU      public function getTextsOkCancel ( ) : Array
as  | 
as  |PU      public function getTextCodesBgImagePics ( ) : Array
as  | 
as  |PU      public function getTextsBgImagePics ( ) : Array
as  | 
as  |PU      public function getTextCodesBgImageAligns ( ) : Array
as  | 
as  |PU      public function getTextsBgImageAligns ( ) : Array
as  | 
as  |PU      public function getTextCodesTextTypes ( ) : Array
as  | 
as  |PU      public function getTextsTextTypes ( ) : Array
as  | 
as  |PU      public function getTextCodesWidgetsOrientations ( ) : Array
as  | 
as  |PU      public function getTextsWidgetsOrientations ( ) : Array
as  | 
as  |PU      public function getTextCodesDisplayingStyles ( ) : Array
as  | 
as  |PU      public function getTextsDisplayingStyles ( ) : Array
as  | 
    +---------------------------------------------------------------------------
as  | com\kisscodesystems\KissAs3Fw\text\Texts.as
as  | 
as  |     Texts
as  | 
as  |     /*
as  |     ** This class is a part of the KissAs3Fw actionscrip framework.
as  |     ** See the header comment lines of the
as  |     ** com . kisscodesystems . KissAs3Fw . Application
as  |     ** The whole framework is available at:
as  |     ** https://github.com/kisscodesystems/KissAs3Fw
as  |     ** Demo applications:
as  |     ** https://github.com/kisscodesystems/KissAs3FwDemos
as  |     **
as  |     ** DESCRIPTION:
as  |     ** Texts.
as  |     ** This will contain all of the language codes usable in this application.
as  |     ** Language code means: a string that can be represented differently on different languages.
as  |     ** These codes should start and end with specific strings that can be handled in the BaseTextField class.
as  |     */
as  | 
as  |        package com . kisscodesystems . KissAs3Fw . text
as  |        lines   94
as  | 
as  |     Variables:
as  | 
as  |     // The text code beginning and ending.
as  |     // Will be used in the displaying of the text in BaseTextField class.
as  |        public const BTC : String = "btxtcd" ;
as  |        public const ETC : String = "etxtcd" ;
as  |     // Language codes of this application.
as  |        public const LANG_EN : String = BTC + "LANG_EN" + ETC ;
as  |     // Yes and No.
as  |        public const YN_YES : String = BTC + "YN_YES" + ETC ;
as  |        public const YN_NO : String = BTC + "YN_NO" + ETC ;
as  |     // Ok and Cancel.
as  |        public const OC_OK : String = BTC + "OC_OK" + ETC ;
as  |        public const OC_CANCEL : String = BTC + "OC_CANCEL" + ETC ;
as  |     // The names of background images.
as  |        public const BACKGROUND_IMAGE_BG1 : String = BTC + "BACKGROUND_IMAGE_BG1" + ETC ;
as  |     // The types of aligning of the background picture.
as  |        public const BACKGROUND_ALIGN_NONE : String = BTC + "BACKGROUND_ALIGN_NONE" + ETC ;
as  |        public const BACKGROUND_ALIGN_CENTER1 : String = BTC + "BACKGROUND_ALIGN_CENTER1" + ETC ;
as  |        public const BACKGROUND_ALIGN_CENTER2 : String = BTC + "BACKGROUND_ALIGN_CENTER2" + ETC ;
as  |        public const BACKGROUND_ALIGN_CENTER3 : String = BTC + "BACKGROUND_ALIGN_CENTER3" + ETC ;
as  |        public const BACKGROUND_ALIGN_MOSAIC : String = BTC + "BACKGROUND_ALIGN_MOSAIC" + ETC ;
as  |     // The types of the text types (formats) usable in this application.
as  |        public const TEXT_TYPE_BRIGHT : String = BTC + "TEXT_TYPE_BRIGHT" + ETC ;
as  |        public const TEXT_TYPE_MID : String = BTC + "TEXT_TYPE_MID" + ETC ;
as  |        public const TEXT_TYPE_DARK : String = BTC + "TEXT_TYPE_DARK" + ETC ;
as  |     // The orientations of the widgets
as  |        public const ORIENTATION_MANUAL : String = BTC + "ORIENTATION_MANUAL" + ETC ;
as  |        public const ORIENTATION_VERTICAL : String = BTC + "ORIENTATION_VERTICAL" + ETC ;
as  |        public const ORIENTATION_HORIZONTAL : String = BTC + "ORIENTATION_HORIZONTAL" + ETC ;
as  |     // Types of the widgets.
as  |        public const WIDGET_TYPE_GENERAL : String = BTC + "WIDGET_TYPE_GENERAL" + ETC ;
as  |     // The headers of the widgets.
as  |        public const WIDGET_HEADER_GENERAL : String = BTC + "WIDGET_HEADER_GENERAL" + ETC ;
as  |     // The list of the widgets.
as  |        public const LISTS_OF_THE_WIDGETS : String = BTC + "LISTS_OF_THE_WIDGETS" + ETC ;
as  |     // The list of the contents.
as  |        public const LISTS_OF_THE_CONTENTS_TO_MOVE_INTO : String = BTC + "LISTS_OF_THE_CONTENTS_TO_MOVE_INTO" + ETC ;
as  |     // Te panels of the settings.
as  |        public const SETTINGS_PANEL_GENERAL : String = BTC + "SETTINGS_PANEL_GENERAL" + ETC ;
as  |        public const SETTINGS_PANEL_LINING : String = BTC + "SETTINGS_PANEL_LINING" + ETC ;
as  |        public const SETTINGS_PANEL_COLORING : String = BTC + "SETTINGS_PANEL_COLORING" + ETC ;
as  |        public const SETTINGS_PANEL_IMAGING : String = BTC + "SETTINGS_PANEL_IMAGING" + ETC ;
as  |        public const SETTINGS_PANEL_FONTING : String = BTC + "SETTINGS_PANEL_FONTING" + ETC ;
as  |        public const SETTINGS_PANEL_ABOUT : String = BTC + "SETTINGS_PANEL_ABOUT" + ETC ;
as  |     // The labels of the settings.
as  |        public const SETTING_LANGUAGE : String = BTC + "SETTING_LANGUAGE" + ETC ;
as  |        public const SETTING_DISPLAYING_STYLE : String = BTC + "SETTING_DISPLAYING_STYLE" + ETC ;
as  |        public const SETTING_NUM_OF_WIDGETCONTAINERS : String = BTC + "SETTING_NUM_OF_WIDGETCONTAINERS" + ETC ;
as  |        public const SETTING_CURR_WIDGETCONTAINER : String = BTC + "SETTING_CURR_WIDGETCONTAINER" + ETC ;
as  |        public const SETTING_WIDGET_ORIENTATION : String = BTC + "SETTING_WIDGET_ORIENTATION" + ETC ;
as  |        public const SETTING_LINE_THICKNESS : String = BTC + "SETTING_LINE_THICKNESS" + ETC ;
as  |        public const SETTING_MARGIN : String = BTC + "SETTING_MARGIN" + ETC ;
as  |        public const SETTING_PADDING : String = BTC + "SETTING_PADDING" + ETC ;
as  |        public const SETTING_RADIUS : String = BTC + "SETTING_RADIUS" + ETC ;
as  |        public const SETTING_BACKGROUND_BG_COLOR : String = BTC + "SETTING_BACKGROUND_BG_COLOR" + ETC ;
as  |        public const SETTING_BACKGROUND_FG_COLOR : String = BTC + "SETTING_BACKGROUND_FG_COLOR" + ETC ;
as  |        public const SETTING_BACKGROUND_FILL_ALPHA : String = BTC + "SETTING_BACKGROUND_FILL_ALPHA" + ETC ;
as  |        public const SETTING_BACKGROUND_IMAGE : String = BTC + "SETTING_BACKGROUND_IMAGE" + ETC ;
as  |        public const SETTING_BACKGROUND_ALIGN : String = BTC + "SETTING_BACKGROUND_ALIGN" + ETC ;
as  |        public const SETTING_BACKGROUND_ALPHA : String = BTC + "SETTING_BACKGROUND_ALPHA" + ETC ;
as  |        public const SETTING_BACKGROUND_LIVE : String = BTC + "SETTING_BACKGROUND_LIVE" + ETC ;
as  |        public const SETTING_BACKGROUND_FIXED : String = BTC + "SETTING_BACKGROUND_FIXED" + ETC ;
as  |        public const SETTING_FONT_FACE : String = BTC + "SETTING_FONT_FACE" + ETC ;
as  |        public const SETTING_FONT_SIZE : String = BTC + "SETTING_FONT_SIZE" + ETC ;
as  |        public const SETTING_FONT_COLORS : String = BTC + "SETTING_FONT_COLORS" + ETC ;
as  |        public const SETTING_FONT_BOLD : String = BTC + "SETTING_FONT_BOLD" + ETC ;
as  |        public const SETTING_FONT_ITALIC : String = BTC + "SETTING_FONT_ITALIC" + ETC ;
as  |     // The displaying style of the application.
as  |        public const DISPLAYING_STYLE_MODIFIED : String = BTC + "DISPLAYING_STYLE_MODIFIED" + ETC ;
as  |        public const DISPLAYING_STYLE_BASIC : String = BTC + "DISPLAYING_STYLE_BASIC" + ETC ;
as  |     // The default content of the multiple content component.
as  |        public const DEFAULT_CONTENT : String = BTC + "DEFAULT_CONTENT" + ETC ;
as  |     // The usage of the components.
as  |        public const COMPONENTS_USAGE : String = BTC + "COMPONENTS_USAGE" + ETC ;
as  | 
as  |     Functions:
as  | 
    +---------------------------------------------------------------------------
    | com\kisscodesystems\KissAs3Fw\ui
    +---------------------------------------------------------------------------
as  | com\kisscodesystems\KissAs3Fw\ui\ButtonBar.as
as  | 
as  |     ButtonBar
as  | 
as  |     /*
as  |     ** This class is a part of the KissAs3Fw actionscrip framework.
as  |     ** See the header comment lines of the
as  |     ** com . kisscodesystems . KissAs3Fw . Application
as  |     ** The whole framework is available at:
as  |     ** https://github.com/kisscodesystems/KissAs3Fw
as  |     ** Demo applications:
as  |     ** https://github.com/kisscodesystems/KissAs3FwDemos
as  |     **
as  |     ** DESCRIPTION:
as  |     ** ButtonBar.
as  |     ** Multiple buttonlinks. One of them can be active.
as  |     **
as  |     ** MAIN FEATURES:
as  |     ** - ButtonLinks can be added by the text code of its label
as  |     ** - The maximum width can be specified so the buttonlinks go into a content.
as  |     ** - The changing of the active element will be dispatched to others.
as  |     ** -
as  |     */
as  | 
as  |        package com . kisscodesystems . KissAs3Fw . ui
as  |        extends BaseSprite
as  |        lines   417
as  | 
as  |     Variables:
as  | 
as  |     // The array of the buttonlinks.
as  |        private var buttonLinksArray : Array = null ;
as  |     // The scroll of the buttons, it will scroll only horizontally.
as  |        private var baseScroll : BaseScroll = null ;
as  |     // The content of this button bar. It has to be different as the content of the scroll!
as  |        private var content : BaseSprite = null ;
as  |     // The active button of this link button bar.
as  |        private var activeIndex : int = - 1 ;
as  |     // The event of the changing.
as  |        private var eventChanged : Event = null ;
as  |     // The max width.0 means no limit to the displayed width.
as  |        private var maxWidth : int = 0 ;
as  |     // The original mouse x and y corrdinates (mouse down event)
as  |        private var origMouseX : int = 0 ;
as  |        private var origMouseY : int = 0 ;
as  | 
as  |     Functions:
as  | 
as  |     /*
as  |     ** The constructor doing the initialization of this object as usual.
as  |     */
as  |PU      public function ButtonBar ( applicationRef : Application ) : void
as  | 
as  |     /*
as  |     ** Gets the first index of the button having the specified label.
as  |     */
as  |PU      public function getIndexByLabel ( label : String ) : int
as  | 
as  |     /*
as  |     ** The lineThickness is changed.
as  |     */
as  |        private function lineThicknessChanged ( e : Event ) : void
as  | 
as  |     /*
as  |     ** The padding is changed.
as  |     */
as  |        private function paddingChanged ( e : Event ) : void
as  | 
as  |     /*
as  |     ** Repositioning the content object according to the scrolling.
as  |     */
as  |        private function reposContent ( e : Event ) : void
as  | 
as  |     /*
as  |     ** Sets the max width.
as  |     ** If this is not be set then the size can be anything.
as  |     ** But if the max width is set and the sum sizes of the
as  |     ** buttons is larget than this max width then the buttons
as  |     ** can be dragged.
as  |     */
as  |PU      public function setMaxWidth ( w : int ) : void
as  | 
as  |     /*
as  |     ** Roll over the mover.
as  |     */
as  |        private function moverRollOver ( e : MouseEvent ) : void
as  | 
as  |     /*
as  |     ** Roll out the mover.
as  |     */
as  |        private function moverRollOut ( e : MouseEvent ) : void
as  | 
as  |     /*
as  |     ** Moving the mouse over the mover object.
as  |     */
as  |        private function moverMouseMove ( e : MouseEvent ) : void
as  | 
as  |     /*
as  |     ** Mouse down on the mover.
as  |     */
as  |        private function moverMouseDown ( e : MouseEvent ) : void
as  | 
as  |     /*
as  |     ** Clicking on the mover!
as  |     */
as  |        private function moverMouseClick ( e : MouseEvent ) : void
as  | 
as  |     /*
as  |     ** Sets the button active.
as  |     */
as  |PU      public function setActiveIndex ( index : int ) : void
as  | 
as  |     /*
as  |     ** Gets the active index.
as  |     */
as  |PU      public function getActiveIndex ( ) : int
as  | 
as  |     /*
as  |     ** Gets the text code of the active button.
as  |     */
as  |PU      public function getActiveTextCode ( ) : String
as  | 
as  |     /*
as  |     ** Sets the elements.
as  |     ** index: marks as the state says.
as  |     ** activeIndex: let it be as state 2.
as  |     */
as  |        private function setState ( index : int , state : int ) : void
as  | 
as  |     /*
as  |     ** Gets the current element from the mouseX of content.
as  |     */
as  |        private function getActualElementIndexByMouse ( ) : int
as  | 
as  |     /*
as  |     ** Adds a button to the list of the buttons.
as  |     */
as  |PU      public function addButton ( label : String ) : void
as  | 
as  |     /*
as  |     ** Removes a button from the list.
as  |     */
as  |PU      public function removeButton ( i : int ) : void
as  | 
as  |     /*
as  |     ** Removes all of the buttons.
as  |     */
as  |PU      public function removeAllButtons ( ) : void
as  | 
as  |     /*
as  |     ** Repositioning of the buttons.
as  |     */
as  |        private function reposButtons ( ) : void
as  | 
as  |     /*
as  |     ** Resizing the button bar because of the resizing of an element.
as  |     */
as  |        private function resize ( e : Event ) : void
as  | 
as  |     /*
as  |     ** The content has been resized -> the size of the content of the base scroll has to be resized too.
as  |     */
as  |        private function contentResized ( e : Event ) : void
as  | 
as  |     /*
as  |     ** The set size methods have to have no effects.
as  |     */
as  |PU      override public function setsw ( newsw : int ) : void { }
as  | 
as  |PU      override public function setsh ( newsh : int ) : void { }
as  | 
as  |PU      override public function setswh ( newsw : int , newsh : int ) : void { }
as  | 
as  |     /*
as  |     ** Overriding this destroy method.
as  |     */
as  |PU      override public function destroy ( ) : void
as  | 
    +---------------------------------------------------------------------------
as  | com\kisscodesystems\KissAs3Fw\ui\ButtonDraw.as
as  | 
as  |     ButtonDraw
as  | 
as  |     /*
as  |     ** This class is a part of the KissAs3Fw actionscrip framework.
as  |     ** See the header comment lines of the
as  |     ** com . kisscodesystems . KissAs3Fw . Application
as  |     ** The whole framework is available at:
as  |     ** https://github.com/kisscodesystems/KissAs3Fw
as  |     ** Demo applications:
as  |     ** https://github.com/kisscodesystems/KissAs3FwDemos
as  |     **
as  |     ** DESCRIPTION:
as  |     ** ButtonDraw.
as  |     ** The button object that can be drawn.
as  |     **
as  |     ** MAINN FEATURES:
as  |     ** - button type (what to draw)
as  |     ** - text type (what colors and sizes to use)
as  |     */
as  | 
as  |        package com . kisscodesystems . KissAs3Fw . ui
as  |        extends BaseWorkingButton
as  |        lines   250
as  | 
as  |     Variables:
as  | 
as  |     // The shape to be drawn
as  |        private var baseShape : BaseShape = null ;
as  |     // This is the type of the button.
as  |        private var buttonType : String = null ;
as  |     // This is the text type of the button.
as  |     // (There will be no texts, just for the coloring from the given textformat.)
as  |        private var textType : String = null ;
as  |     // The color of the drawing.
as  |        private var drawColor : Number = 0 ;
as  | 
as  |     Functions:
as  | 
as  |     /*
as  |     ** The constructor doing the initialization of this object as usual.
as  |     */
as  |PU      public function ButtonDraw ( applicationRef : Application ) : void
as  | 
as  |     /*
as  |     ** The set size methods have to have no effects.
as  |     */
as  |PU      override public function setsw ( newsw : int ) : void { }
as  | 
as  |PU      override public function setsh ( newsh : int ) : void { }
as  | 
as  |PU      override public function setswh ( newsw : int , newsh : int ) : void { }
as  | 
as  |     /*
as  |     ** click + disabled!
as  |     */
as  |        override protected function baseWorkingButtonClick ( ) : void
as  | 
as  |     /*
as  |     ** The redrawing and the resizing.
as  |     */
as  |        private function redraw ( e : Event ) : void
as  | 
as  |     /*
as  |     ** Sets the dropShadowFilter according to the given color.
as  |     ** (The dropshadow filter can be bright or dark.)
as  |     */
as  |        private function setDropShadowFilter ( color : Number ) : void
as  | 
as  |     /*
as  |     ** Sets the type of the button.
as  |     */
as  |PU      public function setButtonType ( newButtonType : String ) : void
as  | 
as  |     /*
as  |     ** Sets the label of the button.
as  |     ** Almost the same as in the base text field.
as  |     */
as  |PU      public function setTextType ( newTextType : String ) : void
as  | 
as  |     /*
as  |     ** Overriding this destroy method.
as  |     */
as  |PU      override public function destroy ( ) : void
as  | 
    +---------------------------------------------------------------------------
as  | com\kisscodesystems\KissAs3Fw\ui\ButtonLink.as
as  | 
as  |     ButtonLink
as  | 
as  |     /*
as  |     ** This class is a part of the KissAs3Fw actionscrip framework.
as  |     ** See the header comment lines of the
as  |     ** com . kisscodesystems . KissAs3Fw . Application
as  |     ** The whole framework is available at:
as  |     ** https://github.com/kisscodesystems/KissAs3Fw
as  |     ** Demo applications:
as  |     ** https://github.com/kisscodesystems/KissAs3FwDemos
as  |     **
as  |     ** DESCRIPTION:
as  |     ** ButtonLink.
as  |     ** A clickable link surrounded with a base shape rect.
as  |     **
as  |     ** MAIN FUNCTIONS:
as  |     ** - clickable text label with underline (drawed)
as  |     */
as  | 
as  |        package com . kisscodesystems . KissAs3Fw . ui
as  |        extends BaseSprite
as  |        lines   258
as  | 
as  |     Variables:
as  | 
as  |     // The background of the button.
as  |        private var backgroundBaseShape : BaseShape = null ;
as  |     // The link underground of the baseShape.
as  |        private var underlineBaseShape : BaseShape = null ;
as  |     // The label of the button.
as  |        protected var textLabel : TextLabel = null ;
as  |     // The foreground of the button
as  |        private var foregroundSprite : BaseSprite = null ;
as  |     // This will be the event object which will be dispatched.
as  |        private var eventClick : Event = null ;
as  |     // This will be the current state to be painted:
as  |     // -1: pushed, 0: general, 1: unpushed, 2: no background to paint
as  |        private var state : int = 2 ;
as  |     // The url to be specified. When it is set then the default browser will navigate to this url.
as  |        private var url : String = null ;
as  | 
as  |     Functions:
as  | 
as  |     /*
as  |     ** The constructor doing the initialization of this object as usual.
as  |     */
as  |PU      public function ButtonLink ( applicationRef : Application ) : void
as  | 
as  |     /*
as  |     ** Gets the code of the text forom the label.
as  |     */
as  |PU      public function getTextCode ( ) : String
as  | 
as  |     /*
as  |     ** Sets the label of the button.
as  |     */
as  |PU      public function setTextCode ( newTextCode : String ) : void
as  | 
as  |     /*
as  |     ** Sets the state of this linkbutton manually.
as  |     */
as  |PU      public function setState ( i : int ) : void
as  | 
as  |     /*
as  |     ** Mouse events on the foreground.
as  |     */
as  |        private function rollOver ( e : MouseEvent ) : void
as  | 
as  |        private function rollOut ( e : MouseEvent ) : void
as  | 
as  |        private function mouseDown ( e : MouseEvent ) : void
as  | 
as  |        private function click ( e : MouseEvent ) : void
as  | 
as  |     /*
as  |     ** Gets the url if that is not empty.
as  |     */
as  |        private function navigateToUrlIfNotEmpy ( ) : void
as  | 
as  |     /*
as  |     ** Sets the url.
as  |     */
as  |PU      public function setUrl ( s : String ) : void
as  | 
as  |     /*
as  |     ** When the resize is needed.
as  |     */
as  |        private function resize ( e : Event ) : void
as  | 
as  |     /*
as  |     ** Repainting the background.
as  |     */
as  |        private function repaintBackground ( ) : void
as  | 
as  |     /*
as  |     ** Repositioning the label if necessary.
as  |     */
as  |        private function labelRepos ( ) : void
as  | 
as  |     /*
as  |     ** This will be called when the button is clicked.
as  |     */
as  |        protected function baseWorkingButtonClick ( ) : void
as  | 
as  |     /*
as  |     ** Repainting the underline.
as  |     */
as  |        private function repaintUnderline ( ) : void
as  | 
as  |     /*
as  |     ** Repainting the foreground.
as  |     */
as  |        private function repaintForeground ( ) : void
as  | 
as  |     /*
as  |     ** The set size methods have to have no effects.
as  |     */
as  |PU      override public function setsw ( newsw : int ) : void { }
as  | 
as  |PU      override public function setsh ( newsh : int ) : void { }
as  | 
as  |PU      override public function setswh ( newsw : int , newsh : int ) : void { }
as  | 
as  |     /*
as  |     ** Overriding this destroy method.
as  |     */
as  |PU      override public function destroy ( ) : void
as  | 
    +---------------------------------------------------------------------------
as  | com\kisscodesystems\KissAs3Fw\ui\ButtonText.as
as  | 
as  |     ButtonText
as  | 
as  |     /*
as  |     ** This class is a part of the KissAs3Fw actionscrip framework.
as  |     ** See the header comment lines of the
as  |     ** com . kisscodesystems . KissAs3Fw . Application
as  |     ** The whole framework is available at:
as  |     ** https://github.com/kisscodesystems/KissAs3Fw
as  |     ** Demo applications:
as  |     ** https://github.com/kisscodesystems/KissAs3FwDemos
as  |     **
as  |     ** DESCRIPTION:
as  |     ** ButtonText.
as  |     ** The standard button object with label.
as  |     **
as  |     ** MAIN FEATURES:
as  |     ** - button with text label, works as the base working button.
as  |     */
as  | 
as  |        package com . kisscodesystems . KissAs3Fw . ui
as  |        extends BaseWorkingButton
as  |        lines   95
as  | 
as  |     Variables:
as  | 
as  |     // This will be the label of the button.
as  |        private var textLabel : TextLabel = null ;
as  | 
as  |     Functions:
as  | 
as  |     /*
as  |     ** The constructor doing the initialization of this object as usual.
as  |     */
as  |PU      public function ButtonText ( applicationRef : Application ) : void
as  | 
as  |     /*
as  |     ** click + disabled!
as  |     */
as  |        override protected function baseWorkingButtonClick ( ) : void
as  | 
as  |     /*
as  |     ** On changing of the padding.
as  |     */
as  |        private function resize ( e : Event ) : void
as  | 
as  |     /*
as  |     ** The set size methods have to have no effects.
as  |     */
as  |PU      override public function setsw ( newsw : int ) : void { }
as  | 
as  |PU      override public function setsh ( newsh : int ) : void { }
as  | 
as  |PU      override public function setswh ( newsw : int , newsh : int ) : void { }
as  | 
as  |     /*
as  |     ** Sets the label of the button.
as  |     */
as  |PU      public function setTextCode ( newTextCode : String ) : void
as  | 
as  |     /*
as  |     ** Repositioning the label if necessary.
as  |     */
as  |        private function labelRepos ( ) : void
as  | 
as  |     /*
as  |     ** Overriding this destroy method.
as  |     */
as  |PU      override public function destroy ( ) : void
as  | 
    +---------------------------------------------------------------------------
as  | com\kisscodesystems\KissAs3Fw\ui\Color.as
as  | 
as  |     Color
as  | 
as  |     /*
as  |     ** This class is a part of the KissAs3Fw actionscrip framework.
as  |     ** See the header comment lines of the
as  |     ** com . kisscodesystems . KissAs3Fw . Application
as  |     ** The whole framework is available at:
as  |     ** https://github.com/kisscodesystems/KissAs3Fw
as  |     ** Demo applications:
as  |     ** https://github.com/kisscodesystems/KissAs3FwDemos
as  |     **
as  |     ** DESCRIPTION:
as  |     ** Color.
as  |     ** Coloring panel actually.
as  |     ** Can be used standalone but usually it appears in the ColorPicker.
as  |     **
as  |     ** MAIN FEATURES:
as  |     ** - actual and default colors.
as  |     ** - commit of the actual color to default color.
as  |     ** - set color from outside: setRGBColor ( string )
as  |     ** - set color by RGB code from the text input
as  |     ** - set color from any pixel of the stage
as  |     ** - set color from the prepared color squares
as  |     ** - set color from the colored rectangle: ffffff - actual_color - 000000
as  |     */
as  | 
as  |        package com . kisscodesystems . KissAs3Fw . ui
as  |        extends BaseSprite
as  |        lines   988
as  | 
as  |     Variables:
as  | 
as  |     // The input text what accepts the rgb color from the keyboard.
as  |        private var inputRgb : TextInput = null ;
as  |     // To make the actual color as the default color.
as  |        private var acceptNewColorButton : ButtonText = null ;
as  |     // This is the sprite that is clickable and colored by ffffff - actual_color - 000000
as  |        private var drawedCustomSprite : BaseSprite = null ;
as  |     // The array containing the colors of the above.
as  |        private var drawedColorArray : Array = null ;
as  |     // This also helps to the coloring of the above.
as  |        private var drawedMatrix : Matrix = null ;
as  |     // The size of this.
as  |        private var drawedWidth : int = 0 ;
as  |        private var drawedHeight : int = 0 ;
as  |     // The bitmap and bitmapdata objects to draw the drawed sprite.
as  |        private var drawedBitmapData : BitmapData = null ;
as  |        private var drawedBitmap : Bitmap = null ;
as  |     // The colored sprite of the actual color.
as  |        private var panelColorActual : BaseSprite = null ;
as  |     // The colored sprite of the default color.
as  |        private var panelColorDefault : BaseSprite = null ;
as  |     // This bitmapdata will be used when this object want to get a pixel from a satge.
as  |        private var stealPixelBitmapData : BitmapData = null ;
as  |     // The background of the below.
as  |        private var stealPixelSprite : BaseSprite = null ;
as  |     // Shows the rgb code of the pixel where the mouse is currently point into.
as  |        private var stealPixelColorText : TextLabel = null ;
as  |     // What is the margin size between the mouse pointer and the rgb displaying.
as  |        private var colorStealTextCDelta : int = 0 ;
as  |     // The array of the colored squares. (references to BaseSprite objects)
as  |        private var squareArray : Array = null ;
as  |     // The size of the squares.
as  |        private var squareWidth : int = 0 ;
as  |     // The variables help to create the base of the panel (creating the colored squares)
as  |        private var mx : int = 0 ;
as  |        private var my : int = 0 ;
as  |        private var st1 : int = 0 ;
as  |        private var st2 : int = 0 ;
as  |        private var st3 : int = 0 ;
as  |        private var rr : String = null ;
as  |        private var gg : String = null ;
as  |        private var bb : String = null ;
as  |        private var r : int = 0 ;
as  |        private var g : int = 0 ;
as  |        private var b : int = 0 ;
as  |        private var startSquaresX : int = 0 ;
as  |        private var startSquaresY : int = 0 ;
as  |     // The color of the actual color (in number format)
as  |        private var tempColorNumber : Number = 0 ;
as  |     // The index which square has to be marked.
as  |        private var markedSquareIndex : int = 0 ;
as  |     // This event will be changed after the changing of the default color of this Color object.
as  |        private var eventChanged : Event = null ;
as  | 
as  |     Functions:
as  | 
as  |     /*
as  |     ** The constructor doing the initialization of this object as usual.
as  |     */
as  |PU      public function Color ( applicationRef : Application ) : void
as  | 
as  |     /*
as  |     ** Owerwriting the removedFromStage.
as  |     */
as  |        override protected function removedFromStage ( e : Event ) : void
as  | 
as  |     /*
as  |     ** The line thickness has been changed.
as  |     */
as  |        private function lineThicknessChanged ( e : Event ) : void
as  | 
as  |     /*
as  |     ** The radius has been changed.
as  |     */
as  |        private function radiusChanged ( e : Event ) : void
as  | 
as  |     /*
as  |     ** Override this: every clickable object has to be changed at this time.
as  |     */
as  |PU      override public function setEnabled ( e : Boolean ) : void
as  | 
as  |     /*
as  |     ** Sets or clears the listeners according to the value of the enabled property.
as  |     */
as  |        private function setOrClearAllListeners ( ) : void
as  | 
as  |     /*
as  |     ** The set size methods have to have no effects.
as  |     */
as  |PU      override public function setsw ( newsw : int ) : void { }
as  | 
as  |PU      override public function setsh ( newsh : int ) : void { }
as  | 
as  |PU      override public function setswh ( newsw : int , newsh : int ) : void { }
as  | 
as  |     /*
as  |     ** Creating the content of the whole panel:
as  |     ** - color default
as  |     ** - color actual
as  |     ** - rgb input textfield
as  |     ** - OK button to accept the temp color
as  |     ** - color squares
as  |     ** - drawed bitmap according to the temp color.
as  |     */
as  |        private function createContentSingle ( ) : void
as  | 
as  |     /*
as  |     ** The size of the button has been changed.
as  |     */
as  |        private function acceptNewColorButtonResized ( e : Event ) : void
as  | 
as  |     /*
as  |     ** Creates a square object to the panel to be displayed.
as  |     */
as  |        private function createSquare ( rgbColor : String , cs : BaseSprite ) : void
as  | 
as  |        private function drawSquare ( cs : BaseSprite , over : Boolean ) : void
as  | 
as  |     /*
as  |     ** Removes all of the squares.
as  |     */
as  |        private function removeAllSquares ( ) : void
as  | 
as  |     /*
as  |     ** Marks and unmarks the squares. (according to the current tempColorNumber)
as  |     */
as  |        private function markSquare ( ) : void
as  | 
as  |     /*
as  |     ** Mouse out a square.
as  |     */
as  |        private function drawSquareOut ( e : MouseEvent ) : void
as  | 
as  |     /*
as  |     ** Mouse over a square.
as  |     */
as  |        private function drawSquareOver ( e : MouseEvent ) : void
as  | 
as  |     /*
as  |     ** MouseDown a square.
as  |     */
as  |        private function drawSquareMouseDown ( e : MouseEvent ) : void
as  | 
as  |     /*
as  |     ** Click a square.
as  |     */
as  |        private function drawSquareDoubleClick ( e : MouseEvent ) : void
as  | 
as  |     /*
as  |     ** Drawing the color object under the squares.
as  |     */
as  |        private function drawBitmap ( ) : void
as  | 
as  |     /*
as  |     ** Displaying the temporary color. (the actual value of this color object.)
as  |     */
as  |        private function displayTempColor ( color : Number ) : void
as  | 
as  |     /*
as  |     ** Displaying the default color. (the current value of this color object.)
as  |     */
as  |        private function displayDefaultColor ( color : Number ) : void
as  | 
as  |     /*
as  |     ** Sets the color immediately when double click on the drawed bitmap.
as  |     */
as  |        private function drawedCustomSpriteDoubleClick ( e : MouseEvent ) : void
as  | 
as  |     /*
as  |     ** Updating the tempColorNumber according the current click position.
as  |     */
as  |        private function updateBitmapColor ( e : MouseEvent ) : void
as  | 
as  |     /*
as  |     ** Sets the default color.
as  |     */
as  |        private function setDefaultColor ( e : MouseEvent ) : void
as  | 
as  |     /*
as  |     ** When the text changes in the rgb textfield.
as  |     */
as  |        private function onChangeInputRgbText ( e : Event ) : void
as  | 
as  |     /*
as  |     ** When the button is pressed.
as  |     */
as  |        private function acceptNewColorButtonPressed ( e : Event = null ) : void
as  | 
as  |     /*
as  |     ** For displaying the color.
as  |     */
as  |        private function colorToString ( color : Number ) : String
as  | 
as  |     /*
as  |     ** Gets the rgb color.
as  |     */
as  |PU      public function getRGBColor ( ) : String
as  | 
as  |     /*
as  |     ** Sets the rgb color as a string.
as  |     */
as  |PU      public function setRGBColor ( s : String ) : void
as  | 
as  |     /*
as  |     ** Let's start the pixel stealing (color) from any pixel of the stage.
as  |     */
as  |        private function stealPixel ( e : MouseEvent ) : void
as  | 
as  |     /*
as  |     ** Gets the pixel from the stage.
as  |     */
as  |        private function getColorFromStage ( e : Event ) : void
as  | 
as  |     /*
as  |     ** The key up on the stage. The pixel stealing has to be finished.
as  |     */
as  |        private function stealPixelKeyUp ( e : KeyboardEvent ) : void
as  | 
as  |     /*
as  |     ** The stage has been resized so the global bitmapdata has to be updated.
as  |     */
as  |        private function stageResized ( e : Event = null ) : void
as  | 
as  |     /*
as  |     ** When the mouse moves during the pixel stealing.
as  |     */
as  |        private function stealPixelMouseMove ( e : MouseEvent ) : void
as  | 
as  |     /*
as  |     ** Stops the pixel stealing.
as  |     */
as  |        private function stealPixelStop ( ) : void
as  | 
as  |     /*
as  |     ** Override of destroy.
as  |     */
as  |PU      override public function destroy ( ) : void
as  | 
    +---------------------------------------------------------------------------
as  | com\kisscodesystems\KissAs3Fw\ui\ColorPicker.as
as  | 
as  |     ColorPicker
as  | 
as  |     /*
as  |     ** This class is a part of the KissAs3Fw actionscrip framework.
as  |     ** See the header comment lines of the
as  |     ** com . kisscodesystems . KissAs3Fw . Application
as  |     ** The whole framework is available at:
as  |     ** https://github.com/kisscodesystems/KissAs3Fw
as  |     ** Demo applications:
as  |     ** https://github.com/kisscodesystems/KissAs3FwDemos
as  |     **
as  |     ** DESCRIPTION:
as  |     ** ColorPicker.
as  |     ** Openable coloring panel.
as  |     **
as  |     ** MAIN FEATURES:
as  |     ** - dispatches the event of the changing of the color
as  |     ** - also when click event occurs on the colored shape
as  |     */
as  | 
as  |        package com . kisscodesystems . KissAs3Fw . ui
as  |        extends BaseOpen
as  |        lines   228
as  | 
as  |     Variables:
as  | 
as  |     // The sprite to display the color belonging to the actual value.
as  |        private var baseSprite : BaseSprite = null ;
as  |     // The color panel of this colorpicker.
as  |        private var color : Color = null ;
as  |     // The event to the outside world of the changing of the color.
as  |        private var eventChanged : Event = null ;
as  |     // The type of the text to be used for considering the size of this object.
as  |        private var textType : String = null ;
as  | 
as  |     Functions:
as  | 
as  |     /*
as  |     ** The constructor doing the initialization of this object as usual.
as  |     */
as  |PU      public function ColorPicker ( applicationRef : Application ) : void
as  | 
as  |     /*
as  |     ** The color object has been resized.
as  |     */
as  |        private function colorResized ( e : Event ) : void
as  | 
as  |     /*
as  |     ** override open.
as  |     */
as  |PU      override public function open ( ) : void
as  | 
as  |     /*
as  |     ** override close.
as  |     */
as  |PU      override public function close ( ) : void
as  | 
as  |     /*
as  |     ** The color of the color object has been changed.
as  |     */
as  |        private function colorChanged ( e : Event ) : void
as  | 
as  |     /*
as  |     ** Sets the rgb color as a string.
as  |     */
as  |PU      public function setRGBColor ( s : String ) : void
as  | 
as  |     /*
as  |     ** Gets the rgb color as a string.
as  |     */
as  |PU      public function getRGBColor ( ) : String
as  | 
as  |     /*
as  |     ** The events of the base sprite to get it working.
as  |     */
as  |        private function baseSpriteRollOut ( e : MouseEvent ) : void
as  | 
as  |        private function baseSpriteMouseDown ( e : MouseEvent ) : void
as  | 
as  |        private function baseSpriteClick ( e : MouseEvent ) : void
as  | 
as  |     /*
as  |     ** The method to dispatch the coloring event (even if the color is the same!)
as  |     */
as  |        private function dispatchEventChanged ( ) : void
as  | 
as  |     /*
as  |     ** Creates a blur filter to the baseSprite
as  |     */
as  |        private function blurBaseShape ( b : Boolean ) : void
as  | 
as  |     /*
as  |     ** Resize the button object.
as  |     */
as  |        private function resize ( e : Event = null ) : void
as  | 
as  |     /*
as  |     ** Override the mouse close method!
as  |     ** the pixel stealing has to be not in progress.
as  |     */
as  |        override protected function hasToCloseByMouse ( e : MouseEvent ) : void
as  | 
as  |     /*
as  |     ** Calling the super . setswh ( )
as  |     */
as  |        private function superSetswh ( ) : void
as  | 
as  |     /*
as  |     ** Displaying the actual color.
as  |     */
as  |        private function baseSpriteColorPos ( ) : void
as  | 
as  |     /*
as  |     ** Overriding the sizer methods.
as  |     ** (to do nothing.)
as  |     */
as  |PU      override public function setsw ( newsw : int ) : void { }
as  | 
as  |PU      override public function setsh ( newsh : int ) : void { }
as  | 
as  |PU      override public function setswh ( newsw : int , newsh : int ) : void { }
as  | 
as  |     /*
as  |     ** Override of destroy.
as  |     */
as  |PU      override public function destroy ( ) : void
as  | 
    +---------------------------------------------------------------------------
as  | com\kisscodesystems\KissAs3Fw\ui\ContentMultiple.as
as  | 
as  |     ContentMultiple
as  | 
as  |     /*
as  |     ** This class is a part of the KissAs3Fw actionscrip framework.
as  |     ** See the header comment lines of the
as  |     ** com . kisscodesystems . KissAs3Fw . Application
as  |     ** The whole framework is available at:
as  |     ** https://github.com/kisscodesystems/KissAs3Fw
as  |     ** Demo applications:
as  |     ** https://github.com/kisscodesystems/KissAs3FwDemos
as  |     **
as  |     ** DESCRIPTION:
as  |     ** ContentMultiple.
as  |     ** Multiple content objects with a button bar to navigate in them.
as  |     **
as  |     ** MAIN FEATURES:
as  |     ** - button bar
as  |     ** - set of single contents
as  |     ** - the -1 index can be set
as  |     ** - the newer content go under the others
as  |     */
as  | 
as  |        package com . kisscodesystems . KissAs3Fw . ui
as  |        extends BaseSprite
as  |        lines   348
as  | 
as  |     Variables:
as  | 
as  |     // The button bar object to switch the contenst with.
as  |        private var buttonBar : ButtonBar = null ;
as  |     // The arrays of the single contents (references to ContentSingle objects)
as  |        private var arrayContentSinges : Array = null ;
as  | 
as  |     Functions:
as  | 
as  |     /*
as  |     ** The constructor doing the initialization of this object as usual.
as  |     */
as  |PU      public function ContentMultiple ( applicationRef : Application ) : void
as  | 
as  |     /*
as  |     ** Override this setEnabled method!
as  |     */
as  |PU      override public function setEnabled ( e : Boolean ) : void
as  | 
as  |     /*
as  |     ** Sets the default content.
as  |     */
as  |PU      public function setDefaultContent ( ) : void
as  | 
as  |     /*
as  |     ** Sets the max elementsArray of the line or column in a content.
as  |     */
as  |PU      public function setElementsFix ( index : int , e : int ) : void
as  | 
as  |PU      public function getElementsFix ( index : int ) : int
as  | 
as  |     /*
as  |     ** Sets the orientation of one of the contents.
as  |     */
as  |PU      public function setOrientation ( index : int , o : String ) : void
as  | 
as  |     /*
as  |     ** Gets the content single by its index.
as  |     */
as  |PU      public function getContentSingle ( index : int ) : ContentSingle
as  | 
as  |     /*
as  |     ** Gets the content single by its index.
as  |     */
as  |PU      public function getBaseScroll ( index : int ) : BaseScroll
as  | 
as  |     /*
as  |     ** Sets the visible of the button bar.
as  |     ** (If it is not visible then the contents will be resized!)
as  |     */
as  |PU      public function setButtonBarVisible ( v : Boolean ) : void
as  | 
as  |     /*
as  |     ** Sets the button active.
as  |     */
as  |PU      public function setActiveIndex ( index : int ) : void
as  | 
as  |     /*
as  |     ** Gets the active index.
as  |     */
as  |PU      public function getActiveIndex ( ) : int
as  | 
as  |     /*
as  |     ** Gets the index of the content by the label.
as  |     */
as  |PU      public function getContentIndexByLabel ( label : String ) : int
as  | 
as  |     /*
as  |     ** Gets the number of the contents.
as  |     */
as  |PU      public function getNumOfContents ( ) : int
as  | 
as  |     /*
as  |     ** Adds a content and returns the index of the content.
as  |     ** Unique elements can be added as the labels of the buttons.
as  |     */
as  |PU      public function addContent ( label : String ) : int
as  | 
as  |     /*
as  |     ** Removes a content.
as  |     */
as  |PU      public function removeContent ( i : int ) : void
as  | 
as  |     /*
as  |     ** Removes all of the contents.
as  |     */
as  |PU      public function removeAllContents ( ) : void
as  | 
as  |     /*
as  |     ** Adds an element to the content sprite.
as  |     */
as  |PU      public function addToContent ( i : int , displayObject : DisplayObject , normal : Boolean , cellIndex : int ) : void
as  | 
as  |     /*
as  |     ** Removes an element from the content (baseSprite or backSprite) sprite.
as  |     */
as  |PU      public function removeFromContent ( i : int , displayObject : DisplayObject ) : void
as  | 
as  |     /*
as  |     ** When the button bar changes.
as  |     */
as  |        private function buttonBarChanged ( e : Event ) : void
as  | 
as  |     /*
as  |     ** The button bar is resized.
as  |     */
as  |        private function buttonBarResized ( e : Event ) : void
as  | 
as  |     /*
as  |     ** Sets the active index.
as  |     */
as  |        private function setActiveContent ( index : int ) : void
as  | 
as  |     /*
as  |     ** Repositions the button bar.
as  |     */
as  |        private function buttonBarRepos ( ) : void
as  | 
as  |     /*
as  |     ** Overriding the setsw setsh and setswh functions.
as  |     ** Do the same but it is necessary to reposition the actualpos shape.
as  |     */
as  |PU      override public function setsw ( newsw : int ) : void
as  | 
as  |PU      override public function setsh ( newsh : int ) : void
as  | 
as  |PU      override public function setswh ( newsw : int , newsh : int ) : void
as  | 
as  |     /*
as  |     ** Resizes all of the contents.
as  |     */
as  |        private function resizeAllContents ( ) : void
as  | 
as  |     /*
as  |     ** Resizes one content.
as  |     */
as  |        private function resizeContent ( content : ContentSingle ) : void
as  | 
as  |     /*
as  |     ** Overriding this destroy method.
as  |     */
as  |PU      override public function destroy ( ) : void
as  | 
    +---------------------------------------------------------------------------
as  | com\kisscodesystems\KissAs3Fw\ui\ContentSingle.as
as  | 
as  |     ContentSingle
as  | 
as  |     /*
as  |     ** This class is a part of the KissAs3Fw actionscrip framework.
as  |     ** See the header comment lines of the
as  |     ** com . kisscodesystems . KissAs3Fw . Application
as  |     ** The whole framework is available at:
as  |     ** https://github.com/kisscodesystems/KissAs3Fw
as  |     ** Demo applications:
as  |     ** https://github.com/kisscodesystems/KissAs3FwDemos
as  |     **
as  |     ** DESCRIPTION:
as  |     ** ContentSingle.
as  |     ** A base scroll object and a base sprite behind it containing the elements of the content.
as  |     **
as  |     ** MAIN FEATURES:
as  |     ** - two sprites to add the elements into:
as  |     **   baseSprite: the elements can be used in it
as  |     **   backSprite: the elements can be only displayed and no user interaction.
as  |     ** - automatic element reposition according to the
as  |          orientation , elementsFix and cellIndexesArray
as  |     */
as  | 
as  |        package com . kisscodesystems . KissAs3Fw . ui
as  |        extends BaseSprite
as  |        lines   627
as  | 
as  |     Variables:
as  | 
as  |     // The back content: adding content here withto have no interaction and not to stpo the mover of scroll!
as  |     // for example text label.
as  |        private var backSprite : BaseSprite = null ;
as  |     // The content of the Content.
as  |        private var baseSprite : BaseSprite = null ;
as  |     // The scroll of the Content.
as  |        private var baseScroll : BaseScroll = null ;
as  |     // The array of the elementsArray of content.
as  |        private var elementsArray : Array = new Array ( ) ;
as  |     // The position to add the element into. Zero based indexes can be given.
as  |        private var cellIndexesArray : Array = new Array ( ) ;
as  |     // The orientation of the content.
as  |     // orientation == application . getTexts ( ) . ORIENTATION_MANUAL || elementsFix == -1 means no automatic positioning.
as  |        private var orientation : String = null ;
as  |     // Max index of elementsArray in perpendicular direction from the orientation.
as  |     // orientation == application . getTexts ( ) . ORIENTATION_MANUAL || elementsFix == -1 means no automatic positioning.
as  |        private var elementsFix : int = - 1 ;
as  | 
as  |     Functions:
as  | 
as  |     /*
as  |     ** The constructor doing the initialization of this object as usual.
as  |     */
as  |PU      public function ContentSingle ( applicationRef : Application ) : void
as  | 
as  |     /*
as  |     ** If the content has to be cached as a bitmap.
as  |     */
as  |        private function cacheBeginContent ( e : Event ) : void
as  | 
as  |     /*
as  |     ** The margin of the application has been changed.
as  |     */
as  |        private function marginChanged ( e : Event ) : void
as  | 
as  |     /*
as  |     ** The padding of the application has been changed.
as  |     */
as  |        private function paddingChanged ( e : Event ) : void
as  | 
as  |     /*
as  |     ** Automatic positioning?
as  |     */
as  |PU      public function getAutomaticPositioning ( ) : Boolean
as  | 
as  |     /*
as  |     ** Sets and gets the max elementsArray of the line or column.
as  |     */
as  |PU      public function setElementsFix ( es : int ) : void
as  | 
as  |PU      public function getElementsFix ( ) : int
as  | 
as  |     /*
as  |     ** Gets and sets the orientation of the content.
as  |     */
as  |PU      public function setOrientation ( o : String ) : void
as  | 
as  |PU      public function getOrientation ( ) : String
as  | 
as  |     /*
as  |     ** Automatic reposition of the elementsArray.
as  |     ** One cellIndex can contain multiuple elements!
as  |     */
as  |        private function reposElements ( e : Event = null ) : void
as  | 
as  |     /*
as  |     ** Repositioning the content object according to the scrolling.
as  |     */
as  |        private function reposContent ( e : Event ) : void
as  | 
as  |     /*
as  |     ** THe size of the content has been changed.
as  |     */
as  |        private function contentResized ( e : Event ) : void
as  | 
as  |     /*
as  |     ** Adds an element to the content sprite.
as  |     */
as  |PU      public function addToContent ( displayObject : DisplayObject , normal : Boolean , cellIndex : int ) : void
as  | 
as  |     /*
as  |     ** Removes an element from the content (baseSprite or backSprite) sprite.
as  |     */
as  |PU      public function removeFromContent ( displayObject : DisplayObject ) : void
as  | 
as  |     /*
as  |     ** Gets the reference to the scroll.
as  |     */
as  |PU      public function getBaseScroll ( ) : BaseScroll
as  | 
as  |     /*
as  |     ** Calculating content size.
as  |     ** Happens automatically for example if a BaseSprite or BaseShape
as  |     ** or BaseTextField is added into the content base sprite.
as  |     ** Has to be called manually if a non-Base... object is added to the content.
as  |     */
as  |PU      public function contentSizeRecalc ( ) : void
as  | 
as  |        private function contentSizeRecalcOnSprite ( sprite : BaseSprite ) : Array
as  | 
as  |     /*
as  |     ** Overriding the setsw setsh and setswh functions.
as  |     ** Do the same but it is necessary to reposition the actualpos shape.
as  |     */
as  |PU      override public function setsw ( newsw : int ) : void
as  | 
as  |PU      override public function setsh ( newsh : int ) : void
as  | 
as  |PU      override public function setswh ( newsw : int , newsh : int ) : void
as  | 
as  |     /*
as  |     ** Overriding this destroy method.
as  |     */
as  |PU      override public function destroy ( ) : void
as  | 
    +---------------------------------------------------------------------------
as  | com\kisscodesystems\KissAs3Fw\ui\List.as
as  | 
as  |     List
as  | 
as  |     /*
as  |     ** This class is a part of the KissAs3Fw actionscrip framework.
as  |     ** See the header comment lines of the
as  |     ** com . kisscodesystems . KissAs3Fw . Application
as  |     ** The whole framework is available at:
as  |     ** https://github.com/kisscodesystems/KissAs3Fw
as  |     ** Demo applications:
as  |     ** https://github.com/kisscodesystems/KissAs3FwDemos
as  |     **
as  |     ** DESCRIPTION:
as  |     ** List.
as  |     ** The class of the selectable list object.
as  |     ** Texts and its value representation can be set.
as  |     **
as  |     ** MAIN FEATURES:
as  |     ** - labels and values can be specified separately
as  |     ** - multiple selection is possible
as  |     ** - it can be empty or not (as specified)
as  |     ** - number of displayable elements can be set
as  |     ** - the already selected indexes can be specified
as  |     */
as  | 
as  |        package com . kisscodesystems . KissAs3Fw . ui
as  |        extends BaseSprite
as  |        lines   508
as  | 
as  |     Variables:
as  | 
as  |     // This will be the type of the text using in the list.
as  |        private var textType : String = null ;
as  |     // The content of the Content.
as  |        private var baseList : BaseList = null ;
as  |     // The scroll of the Content.
as  |        private var baseScroll : BaseScroll = null ;
as  |     // The displayable texts and the values are here.
as  |        private var arrayLabels : Array = null ;
as  |        private var arrayValues : Array = null ;
as  |     // Multiple or not
as  |        private var multiple : Boolean = false ;
as  |     // The index to start the displaying from.
as  |        private var startIndex : int = - 1 ;
as  |     // The array of the selected items.
as  |        private var selectedIndexes : Array = null ;
as  |     // The original mouse x and y corrdinates (mouse down event)
as  |        private var origMouseX : int = 0 ;
as  |        private var origMouseY : int = 0 ;
as  |     // The event of the changing of the selected items.
as  |        private var eventChanged : Event = null ;
as  |     // This is the number of maximum displayable items in this list.
as  |        private var numOfElements : int = 0 ;
as  |     // Can the list be empty or not.
as  |        private var canBeEmpty : Boolean = false ;
as  | 
as  |     Functions:
as  | 
as  |     /*
as  |     ** The constructor doing the initialization of this object as usual.
as  |     */
as  |PU      public function List ( applicationRef : Application ) : void
as  | 
as  |     /*
as  |     ** Override this setEnabled.
as  |     */
as  |PU      override public function setEnabled ( e : Boolean ) : void
as  | 
as  |     /*
as  |     ** Sets the canBeEmpty property.
as  |     */
as  |PU      public function setCanBeEmpty ( e : Boolean ) : void
as  | 
as  |     /*
as  |     ** Gets the canBeEmpty property.
as  |     */
as  |PU      public function getCanBeEmpty ( ) : Boolean
as  | 
as  |     /*
as  |     ** The padding of the application has been changed.
as  |     */
as  |        private function paddingChanged ( e : Event ) : void
as  | 
as  |     /*
as  |     ** The line thickness of the application has been changed.
as  |     */
as  |        private function lineThicknessChanged ( e : Event ) : void
as  | 
as  |     /*
as  |     ** Gets the type of the text used in the list.
as  |     */
as  |PU      public function getTextType ( ) : String
as  | 
as  |     /*
as  |     ** Roll over the mover.
as  |     */
as  |        private function moverRollOver ( e : MouseEvent ) : void
as  | 
as  |     /*
as  |     ** Roll out the mover.
as  |     */
as  |        private function moverRollOut ( e : MouseEvent ) : void
as  | 
as  |     /*
as  |     ** Moving the mouse over the mover object.
as  |     */
as  |        private function moverMouseMove ( e : MouseEvent ) : void
as  | 
as  |     /*
as  |     ** Mouse down on the mover.
as  |     */
as  |        private function moverMouseDown ( e : MouseEvent ) : void
as  | 
as  |     /*
as  |     ** Dispatches the event of the changing of the selected items.
as  |     */
as  |        private function dispatchSelectedChanged ( ) : void
as  | 
as  |     /*
as  |     ** Clicking on the mover!
as  |     */
as  |        private function moverMouseClick ( e : MouseEvent ) : void
as  | 
as  |     /*
as  |     ** Gets the multiple property of this list object.
as  |     */
as  |PU      public function getMultiple ( ) : Boolean
as  | 
as  |     /*
as  |     ** Sets the multiple property.
as  |     */
as  |PU      public function setMultiple ( m : Boolean ) : void
as  | 
as  |     /*
as  |     ** Repositioning the content object according to the scrolling.
as  |     */
as  |        private function reposContent ( e : Event ) : void
as  | 
as  |     /*
as  |     ** Repositioning the list according to the position of the scroll mask.
as  |     */
as  |        private function baseListRepos ( ) : void
as  | 
as  |     /*
as  |     ** Sets the selected items.
as  |     */
as  |PU      public function setSelectedIndexes ( indexes : Array ) : void
as  | 
as  |     /*
as  |     ** Gets the selected indexes.
as  |     */
as  |PU      public function getSelectedIndexes ( ) : Array
as  | 
as  |     /*
as  |     ** The number of the elements.
as  |     */
as  |PU      public function getNumOfElements ( ) : int
as  | 
as  |     /*
as  |     ** Good start index?
as  |     ** it not then it will correct that index and will returnn with that.
as  |     */
as  |        private function validStartIndex ( index : int ) : int
as  | 
as  |     /*
as  |     ** Sets the start index property.
as  |     */
as  |PU      public function setStartIndex ( index : int ) : void
as  | 
as  |     /*
as  |     ** The size of the elements has been changed.
as  |     */
as  |        private function listResized ( e : Event ) : void
as  | 
as  |     /*
as  |     ** Sets the elements to be displayed.
as  |     */
as  |PU      public function setNumOfElements ( num : int ) : void
as  | 
as  |     /*
as  |     ** Sets the arrays of the list to be displayed.
as  |     */
as  |PU      public function setArrays ( labels : Array , values : Array ) : void
as  | 
as  |     /*
as  |     ** Gets the array of labels.
as  |     */
as  |PU      public function getArrayLabels ( ) : Array
as  | 
as  |     /*
as  |     ** Gets the array of labels.
as  |     */
as  |PU      public function getArrayValues ( ) : Array
as  | 
as  |     /*
as  |     ** Displays the list elements and their marks from the specified index.
as  |     */
as  |        private function displayFromIndex ( index : int , buttonDown : Boolean ) : void
as  | 
as  |     /*
as  |     ** Gets the actual element by the mouse pointer.
as  |     */
as  |        private function getActualElementIndexByMouse ( ) : int
as  | 
as  |     /*
as  |     ** Overriding the setsw setsh and setswh functions.
as  |     ** setsh and setswh: should be out of order!
as  |     ** The sh depends on the number of elements to be displayed.
as  |     */
as  |PU      override public function setsw ( newsw : int ) : void
as  | 
as  |PU      override public function setsh ( newsh : int ) : void { }
as  | 
as  |PU      override public function setswh ( newsw : int , newsh : int ) : void { }
as  | 
as  |     /*
as  |     ** Overriding this destroy method.
as  |     */
as  |PU      override public function destroy ( ) : void
as  | 
    +---------------------------------------------------------------------------
as  | com\kisscodesystems\KissAs3Fw\ui\ListPicker.as
as  | 
as  |     ListPicker
as  | 
as  |     /*
as  |     ** This class is a part of the KissAs3Fw actionscrip framework.
as  |     ** See the header comment lines of the
as  |     ** com . kisscodesystems . KissAs3Fw . Application
as  |     ** The whole framework is available at:
as  |     ** https://github.com/kisscodesystems/KissAs3Fw
as  |     ** Demo applications:
as  |     ** https://github.com/kisscodesystems/KissAs3FwDemos
as  |     **
as  |     ** DESCRIPTION:
as  |     ** ListPicker.
as  |     ** Usually known as combobox. Combination of a text and a list.
as  |     **
as  |     ** MAIN FEATURES:
as  |     ** - openable component, has a text label in a base working button and a list.
as  |     */
as  | 
as  |        package com . kisscodesystems . KissAs3Fw . ui
as  |        extends BaseOpen
as  |        lines   223
as  | 
as  |     Variables:
as  | 
as  |     // The label object to display the label belonging to the actual value.
as  |        private var textLabel : TextLabel = null ;
as  |     // The list of this listpicker.
as  |        private var list : List = null ;
as  |     // The event to the outside world of the changing of the selected items.
as  |        private var eventChanged : Event = null ;
as  | 
as  |     Functions:
as  | 
as  |     /*
as  |     ** The constructor doing the initialization of this object as usual.
as  |     */
as  |PU      public function ListPicker ( applicationRef : Application ) : void
as  | 
as  |     /*
as  |     ** The list has been resized so the content of this has to be updated.
as  |     */
as  |        private function listResized ( e : Event ) : void
as  | 
as  |     /*
as  |     ** Sets the selected index.
as  |     */
as  |PU      public function setSelectedIndex ( index : int ) : void
as  | 
as  |     /*
as  |     ** Gets the selected index.
as  |     */
as  |PU      public function getSelectedIndex ( ) : int
as  | 
as  |     /*
as  |     ** The selected item has been changed.
as  |     */
as  |        private function selectedItemChanged ( e : Event ) : void
as  | 
as  |     /*
as  |     ** Dispatches the event of changing.
as  |     */
as  |        private function dispatchEventChanged ( ) : void
as  | 
as  |     /*
as  |     ** Sets the elements to be displayed.
as  |     */
as  |PU      public function setNumOfElements ( num : int ) : void
as  | 
as  |     /*
as  |     ** Sets the arrays of the list to be displayed.
as  |     */
as  |PU      public function setArrays ( labels : Array , values : Array ) : void
as  | 
as  |     /*
as  |     ** Repositioning the Label.
as  |     */
as  |        private function reposResizeLabel ( ) : void
as  | 
as  |     /*
as  |     ** When the text label has been resized.
as  |     */
as  |        private function resize ( e : Event ) : void
as  | 
as  |     /*
as  |     ** Sets the sh to the size of label.
as  |     */
as  |        private function shToLabel ( ) : void
as  | 
as  |     /*
as  |     ** Gets the type of the text used in the list.
as  |     */
as  |PU      public function getTextType ( ) : String
as  | 
as  |     /*
as  |     ** Gets the text currently having in the label..
as  |     */
as  |PU      public function getText ( ) : String
as  | 
as  |     /*
as  |     ** Override open:
as  |     ** - the list has to start from the correct index
as  |     ** - the size will be changed
as  |     ** - calls the original open method.
as  |     */
as  |PU      override public function open ( ) : void
as  | 
as  |     /*
as  |     ** Override close:
as  |     ** - calls the original close method
as  |     ** - the size will be reduced to the size of the label (and paddings)
as  |     */
as  |PU      override public function close ( ) : void
as  | 
as  |     /*
as  |     ** Overriding the setsw setsh and setswh functions.
as  |     ** setsh and setswh: should be out of order!
as  |     ** The sh depends on the number of elements to be displayed and of the size of the label (and paddings)
as  |     */
as  |PU      override public function setsw ( newsw : int ) : void
as  | 
as  |PU      override public function setsh ( newsh : int ) : void { }
as  | 
as  |PU      override public function setswh ( newsw : int , newsh : int ) : void { }
as  | 
as  |     /*
as  |     ** Overriding this destroy method.
as  |     */
as  |PU      override public function destroy ( ) : void
as  | 
    +---------------------------------------------------------------------------
as  | com\kisscodesystems\KissAs3Fw\ui\Potmet.as
as  | 
as  |     Potmet
as  | 
as  |     /*
as  |     ** This class is a part of the KissAs3Fw actionscrip framework.
as  |     ** See the header comment lines of the
as  |     ** com . kisscodesystems . KissAs3Fw . Application
as  |     ** The whole framework is available at:
as  |     ** https://github.com/kisscodesystems/KissAs3Fw
as  |     ** Demo applications:
as  |     ** https://github.com/kisscodesystems/KissAs3FwDemos
as  |     **
as  |     ** DESCRIPTION:
as  |     ** Potmet. This object can be the numeric stepper.
as  |     **
as  |     ** MAIN FEATURES:
as  |     ** - min max and inc value can be specified
as  |     ** - the decimal precision can be specified too
as  |     ** - a glow filter is displayed in the size depending on the current value.
as  |     */
as  | 
as  |        package com . kisscodesystems . KissAs3Fw . ui
as  |        extends BaseSprite
as  |        lines   344
as  | 
as  |     Variables:
as  | 
as  |     // The event of the changing of the selected items.
as  |        private var eventChanged : Event = null ;
as  |     // The mover object.
as  |        private var spriteMover : BaseSprite = null ;
as  |     // The label object to display the actual state.
as  |        private var textLabel : TextLabel = null ;
as  |     // The drawed shapes.
as  |        private var drawShapeLittle : BaseShape = null ;
as  |        private var drawShapeBig : BaseShape = null ;
as  |     // And the container of the shapes.
as  |        private var drawContainer : BaseSprite = null ;
as  |     // The glow filter of the potmeter.
as  |        private var glowFilter : GlowFilter = null ;
as  |     // The values of this object. min-max values and the increase and the current and temp value.
as  |        private var minValue : Number = 0 ;
as  |        private var maxValue : Number = 0 ;
as  |        private var incValue : Number = 0 ;
as  |        private var curValue : Number = 0 ;
as  |        private var tmpValue : Number = 0 ;
as  |     // The radiuses of the circles.
as  |        private var radius : int = 0 ;
as  |        private var radiusLittle : int = 0 ;
as  |     // What is the size of the expectable glow filter.
as  |        private var factor : Number = 0 ;
as  |     // The decimal precision of the values to be displayed.
as  |        private var decimalPrecision : int = 2 ;
as  |     // How many pixels have to be dragged to increase 1 time.
as  |     // At least 1 pixel per inc will be calculated.
as  |        private var pxsPerInc : int = 1 ;
as  | 
as  |     Functions:
as  | 
as  |     /*
as  |     ** The constructor doing the initialization of this object as usual.
as  |     */
as  |PU      public function Potmet ( applicationRef : Application ) : void
as  | 
as  |     /*
as  |     ** The mouse events on the mover.
as  |     */
as  |        private function spriteMoverRollOver ( e : MouseEvent ) : void
as  | 
as  |        private function spriteMoverRollOut ( e : MouseEvent ) : void
as  | 
as  |        private function spriteMoverMouseDown ( e : MouseEvent ) : void
as  | 
as  |        private function spriteMoverClick ( e : MouseEvent ) : void
as  | 
as  |     /*
as  |     ** Sets the precision of the potmet.
as  |     */
as  |PU      public function setDecimalPrecision ( i : int ) : void
as  | 
as  |     /*
as  |     ** Gets the decimal precision.
as  |     */
as  |PU      public function getDecimalPrecision ( ) : int
as  | 
as  |     /*
as  |     ** Updating the whole potmet.
as  |     */
as  |        private function updatePotmet ( e : Event ) : void
as  | 
as  |     /*
as  |     ** Resetting the mover object.
as  |     */
as  |        private function moverReset ( ) : void
as  | 
as  |     /*
as  |     ** When the resizing is needed.
as  |     */
as  |        private function resize ( e : Event ) : void
as  | 
as  |     /*
as  |     ** Recreates a glow filter based on the factor.
as  |     */
as  |        private function recreateGlowFilter ( blur : int ) : void
as  | 
as  |     /*
as  |     ** Only the rotating and the glow filter will be updated.
as  |     ** Don't consider the precision here!
as  |     */
as  |        private function updateDisplaying ( val : Number ) : void
as  | 
as  |     /*
as  |     ** Repositions the text label.
as  |     */
as  |        private function reposTextLabel ( ) : void
as  | 
as  |     /*
as  |     ** Redrawing the shape objects. ( draw and mask)
as  |     */
as  |        private function updateShapes ( ) : void
as  | 
as  |     /*
as  |     ** Sets the min-max-inc values.
as  |     ** The difference of max and min has to be the multiply of the inc!
as  |     */
as  |PU      public function setMinMaxIncValues ( min : Number , max : Number , inc : Number ) : void
as  | 
as  |     /*
as  |     ** Calculates the speed of the increasing.
as  |     */
as  |        private function calcPxsPerInc ( ) : void
as  | 
as  |     /*
as  |     ** Sets the current value.
as  |     */
as  |PU      public function setCurValue ( n : Number ) : void
as  | 
as  |     /*
as  |     ** Gets the value of the object.
as  |     */
as  |PU      public function getCurValue ( ) : Number
as  | 
as  |     /*
as  |     ** Overriding the setsw setsh and setswh functions.
as  |     */
as  |PU      override public function setsw ( newsw : int ) : void { }
as  | 
as  |PU      override public function setsh ( newsh : int ) : void { }
as  | 
as  |PU      override public function setswh ( newsw : int , newsh : int ) : void { }
as  | 
as  |     /*
as  |     ** Overriding this destroy method.
as  |     */
as  |PU      override public function destroy ( ) : void
as  | 
    +---------------------------------------------------------------------------
as  | com\kisscodesystems\KissAs3Fw\ui\Switcher.as
as  | 
as  |     Switcher
as  | 
as  |     /*
as  |     ** This class is a part of the KissAs3Fw actionscrip framework.
as  |     ** See the header comment lines of the
as  |     ** com . kisscodesystems . KissAs3Fw . Application
as  |     ** The whole framework is available at:
as  |     ** https://github.com/kisscodesystems/KissAs3Fw
as  |     ** Demo applications:
as  |     ** https://github.com/kisscodesystems/KissAs3FwDemos
as  |     **
as  |     ** DESCRIPTION:
as  |     ** Switcher.
as  |     ** An object that can be up or down.
as  |     **
as  |     ** MAIN FEATURES:
as  |     ** - states: up (true) or down (false)
as  |     ** - different text codes are able to specify for up and down state
as  |     */
as  | 
as  |        package com . kisscodesystems . KissAs3Fw . ui
as  |        extends BaseSprite
as  |        lines   275
as  | 
as  |     Variables:
as  | 
as  |     // The padding size of the drawn.
as  |        private var drawnPadding : int = 0 ;
as  |     // The label of this switcher.
as  |        private var textLabel : TextLabel = null ;
as  |     // The foreground of the switcher.
as  |        private var foregroundSprite : BaseSprite = null ;
as  |     // This will be drawn.
as  |        private var drawn : BaseShape = null ;
as  |     // And this will contain the drawn.
as  |        private var drawnContainer : BaseSprite = null ;
as  |     // The text of the up and down switcher.
as  |        private var textUp : String = null ;
as  |        private var textDown : String = null ;
as  |     // up or not.
as  |        private var up : Boolean = false ;
as  |     // The event object to be dispatched.
as  |        private var eventChanged : Event = null ;
as  |     // The glow filter of the up switcher.
as  |        private var glowFilter : GlowFilter = null ;
as  | 
as  |     Functions:
as  | 
as  |     /*
as  |     ** The constructor doing the initialization of this object as usual.
as  |     */
as  |PU      public function Switcher ( applicationRef : Application ) : void
as  | 
as  |     /*
as  |     ** Mouse down on the foreground.
as  |     */
as  |        private function foregroundSpriteMouseDown ( e : MouseEvent ) : void
as  | 
as  |     /*
as  |     ** Click on the foreground: let's modify the value to its opposite.
as  |     */
as  |        private function foregroundSpriteClick ( e : MouseEvent ) : void
as  | 
as  |     /*
as  |     ** Roll out on the foreground.
as  |     */
as  |        private function foregroundSpriteRollOut ( e : MouseEvent ) : void
as  | 
as  |     /*
as  |     ** Overriding the setsw setsh and setswh functions.
as  |     ** setsh and setswh: should be out of order!
as  |     ** The sh depends on the number of elements to be displayed.
as  |     */
as  |PU      override public function setsw ( newsw : int ) : void { }
as  | 
as  |PU      override public function setsh ( newsh : int ) : void { }
as  | 
as  |PU      override public function setswh ( newsw : int , newsh : int ) : void { }
as  | 
as  |     /*
as  |     ** The content of the label or some of the properties of the application has been changed.
as  |     */
as  |        private function resize ( e : Event ) : void
as  | 
as  |     /*
as  |     ** Draws the switcher.
as  |     */
as  |        private function draw ( buttonDown : Boolean = false ) : void
as  | 
as  |     /*
as  |     ** Gets the selection of the switcher.
as  |     */
as  |PU      public function getUp ( ) : Boolean
as  | 
as  |     /*
as  |     ** Sets the selection if it is different from the current value
as  |     ** and does all of the configuration.
as  |     */
as  |PU      public function setUp ( s : Boolean ) : void
as  | 
as  |     /*
as  |     ** Sets the texts (tu: up text, td: down text) of this switcher.
as  |     */
as  |PU      public function setTextCodes ( tu : String , td : String ) : void
as  | 
as  |     /*
as  |     ** Overriding this destroy method.
as  |     */
as  |PU      override public function destroy ( ) : void
as  | 
    +---------------------------------------------------------------------------
as  | com\kisscodesystems\KissAs3Fw\ui\TextArea.as
as  | 
as  |     TextArea
as  | 
as  |     /*
as  |     ** This class is a part of the KissAs3Fw actionscrip framework.
as  |     ** See the header comment lines of the
as  |     ** com . kisscodesystems . KissAs3Fw . Application
as  |     ** The whole framework is available at:
as  |     ** https://github.com/kisscodesystems/KissAs3Fw
as  |     ** Demo applications:
as  |     ** https://github.com/kisscodesystems/KissAs3FwDemos
as  |     **
as  |     ** DESCRIPTION:
as  |     ** TextArea.
as  |     ** A multiline and editable textfield. (TextBox: multiline and NOT editable textfield.)
as  |     **
as  |     ** MAIN FEATURES:
as  |     ** - scroller ( the text can be scrolled)
as  |     ** - and editor (the text can be edited) mode.
as  |     */
as  | 
as  |        package com . kisscodesystems . KissAs3Fw . ui
as  |        extends TextBox
as  |        lines   317
as  | 
as  |     Variables:
as  | 
as  |     // The original point of the click (on mover)
as  |        private var origMouseX : int = 0 ;
as  |        private var origMouseY : int = 0 ;
as  |     // The background of the textfield.
as  |        private var baseShape : BaseShape = null ;
as  |     // The original text has been changed or not.
as  |     // ( changed when the user enters text into textfield.)
as  |        private var iniTextChanged : Boolean = false ;
as  | 
as  |     Functions:
as  | 
as  |     /*
as  |     ** The constructor doing the initialization of this object as usual.
as  |     */
as  |PU      public function TextArea ( applicationRef : Application ) : void
as  | 
as  |     /*
as  |     ** Gets the text of the basetextfield.
as  |     */
as  |PU      public function getText ( ) : String
as  | 
as  |     /*
as  |     ** Sets the scroller mode.
as  |     */
as  |        private function setModeScroller ( ) : void
as  | 
as  |     /*
as  |     ** Sets the editor mode.
as  |     */
as  |        private function setModeEditor ( ) : void
as  | 
as  |     /*
as  |     ** The radius of the application has been changed.
as  |     */
as  |        private function lineThicknessChanged ( e : Event ) : void
as  | 
as  |     /*
as  |     ** The radius of the application has been changed.
as  |     */
as  |        private function paddingChanged ( e : Event ) : void
as  | 
as  |     /*
as  |     ** The radius of the application has been changed.
as  |     */
as  |        private function radiusChanged ( e : Event ) : void
as  | 
as  |     /*
as  |     ** The filler color (background) of the background has been changed.
as  |     */
as  |        private function backgroundBgColorChanged ( e : Event ) : void
as  | 
as  |     /*
as  |     ** The filler color (foreground) of the background has been changed.
as  |     */
as  |        private function backgroundFgColorChanged ( e : Event ) : void
as  | 
as  |     /*
as  |     ** The alpha of the filler color of the background has been changed.
as  |     */
as  |        private function fillAlphaChanged ( e : Event ) : void
as  | 
as  |     /*
as  |     ** The repainting of the background.
as  |     */
as  |        private function baseShapeRepaint ( ) : void
as  | 
as  |     /*
as  |     ** Sets the size of the base shape object.
as  |     */
as  |        private function baseShapeSetSize ( ) : void
as  | 
as  |     /*
as  |     ** Down on the mover.
as  |     */
as  |        private function moverMouseDown ( e : MouseEvent ) : void
as  | 
as  |     /*
as  |     ** Click on the mover.
as  |     */
as  |        private function moverMouseClick ( e : MouseEvent ) : void
as  | 
as  |     /*
as  |     ** When the text of the textField scrolled.
as  |     */
as  |        private function scroll ( e : Event ) : void
as  | 
as  |     /*
as  |     ** When the text has not been changed but the scrol of the text has been changed.
as  |     */
as  |        private function reposScroll ( ) : void
as  | 
as  |     /*
as  |     ** Overriding this because the background also has to be dragged with the textfield.
as  |     */
as  |        override protected function baseTextFieldPos ( ) : void
as  | 
as  |     /*
as  |     ** When the text field losts the focus then the original state should be set.
as  |     */
as  |        private function focusOut ( e : FocusEvent ) : void
as  | 
as  |     /*
as  |     ** Overriding the setsw setsh and setswh functions.
as  |     ** Do the same but it is necessary to reposition the actualpos shape.
as  |     */
as  |PU      override public function setsw ( newsw : int ) : void
as  | 
as  |PU      override public function setsh ( newsh : int ) : void
as  | 
as  |PU      override public function setswh ( newsw : int , newsh : int ) : void
as  | 
as  |     /*
as  |     ** The user enters text into this textfield.
as  |     */
as  |        private function textInput ( e : TextEvent ) : void
as  | 
as  |     /*
as  |     ** Restrict.
as  |     */
as  |PU      public function setRestrict ( r : String ) : void
as  | 
as  |     /*
as  |     ** maxChars.
as  |     */
as  |PU      public function setMaxChars ( m : int ) : void
as  | 
as  |     /*
as  |     ** Overriding this destroy method.
as  |     */
as  |PU      override public function destroy ( ) : void
as  | 
    +---------------------------------------------------------------------------
as  | com\kisscodesystems\KissAs3Fw\ui\TextBox.as
as  | 
as  |     TextBox
as  | 
as  |     /*
as  |     ** This class is a part of the KissAs3Fw actionscrip framework.
as  |     ** See the header comment lines of the
as  |     ** com . kisscodesystems . KissAs3Fw . Application
as  |     ** The whole framework is available at:
as  |     ** https://github.com/kisscodesystems/KissAs3Fw
as  |     ** Demo applications:
as  |     ** https://github.com/kisscodesystems/KissAs3FwDemos
as  |     **
as  |     ** DESCRIPTION:
as  |     ** TextBox.
as  |     ** Read only and scrollable text area views silngle or html text.
as  |     ** The wordWrap property also available for changing.
as  |     **
as  |     ** MAIN FEATURES:
as  |     ** - display multiline (single or html formatted) text
as  |     ** - able to scroll when the text is longer than the area to view it
as  |     */
as  | 
as  |        package com . kisscodesystems . KissAs3Fw . ui
as  |        extends BaseSprite
as  |        lines   211
as  | 
as  |     Variables:
as  | 
as  |     // This contains a base textfield.
as  |        protected var baseTextField : BaseTextField = null ;
as  |     // And a base scroll object.
as  |        protected var baseScroll : BaseScroll = null ;
as  |     // Events of the reaches of the bottoms.
as  |        private var bottomReached : Event = null ;
as  | 
as  |     Functions:
as  | 
as  |     /*
as  |     ** The constructor doing the initialization of this object as usual.
as  |     */
as  |PU      public function TextBox ( applicationRef : Application ) : void
as  | 
as  |     /*
as  |     ** The width has to be at least the minimum.
as  |     */
as  |PU      override public function setsw ( newsw : int ) : void
as  | 
as  |PU      override public function setsh ( newsh : int ) : void
as  | 
as  |PU      override public function setswh ( newsw : int , newsh : int ) : void
as  | 
as  |     /*
as  |     ** Repositions the visible content of the text.
as  |     */
as  |        private function reposText ( e : Event ) : void
as  | 
as  |     /*
as  |     ** Dispatches an event.
as  |     */
as  |        protected function dispatchEventBottomReached ( ) : void
as  | 
as  |     /*
as  |     ** Positioning of the base text field according to the current position of mask.
as  |     */
as  |        protected function baseTextFieldPos ( ) : void
as  | 
as  |     /*
as  |     ** This is the method runs after the changing of the size of this object.
as  |     */
as  |        override protected function doSizeChanged ( ) : void
as  | 
as  |     /*
as  |     ** When the text or the size have been changed.
as  |     */
as  |        protected function doSizeOrTextChanged ( e : Event = null ) : void
as  | 
as  |     /*
as  |     ** Sets the wordWrap.
as  |     */
as  |PU      public function setWordWrap ( wordWrap : Boolean ) : void
as  | 
as  |     /*
as  |     ** Sets the type of this text.
as  |     */
as  |PU      public function setTextType ( newTextType : String ) : void
as  | 
as  |     /*
as  |     ** Sets the textcode.
as  |     */
as  |PU      public function setTextCode ( newTextCode : String ) : void
as  | 
as  |     /*
as  |     ** Sets the html property.
as  |     */
as  |PU      public function setHtml ( html : Boolean ) : void
as  | 
as  |     /*
as  |     ** Overriding this destroy method.
as  |     */
as  |PU      override public function destroy ( ) : void
as  | 
    +---------------------------------------------------------------------------
as  | com\kisscodesystems\KissAs3Fw\ui\TextInput.as
as  | 
as  |     TextInput
as  | 
as  |     /*
as  |     ** This class is a part of the KissAs3Fw actionscrip framework.
as  |     ** See the header comment lines of the
as  |     ** com . kisscodesystems . KissAs3Fw . Application
as  |     ** The whole framework is available at:
as  |     ** https://github.com/kisscodesystems/KissAs3Fw
as  |     ** Demo applications:
as  |     ** https://github.com/kisscodesystems/KissAs3FwDemos
as  |     **
as  |     ** DESCRIPTION:
as  |     ** TextInput.
as  |     ** Single line text input.
as  |     **
as  |     ** MAIN FEATURES:
as  |     ** - single line text input
as  |     ** - text to uppercase
as  |     */
as  | 
as  |        package com . kisscodesystems . KissAs3Fw . ui
as  |        extends BaseSprite
as  |        lines   204
as  | 
as  |     Variables:
as  | 
as  |     // The textfield to write in.
as  |        private var baseTextField : BaseTextField = null ;
as  |     // There is a background under it.
as  |        private var baseShape : BaseShape = null ;
as  |     // The original text has been changed or not.
as  |     // ( changed when the user enters text into textfield.)
as  |        private var iniTextChanged : Boolean = false ;
as  | 
as  |     Functions:
as  | 
as  |     /*
as  |     ** The constructor doing the initialization of this object as usual.
as  |     */
as  |PU      public function TextInput ( applicationRef : Application ) : void
as  | 
as  |     /*
as  |     ** The type of the basetextfield has to be changed.
as  |     */
as  |PU      override public function setEnabled ( e : Boolean ) : void
as  | 
as  |     /*
as  |     ** Sets the password property of its textfield
as  |     */
as  |PU      public function setDisplayAsPassword ( b : Boolean ) : void
as  | 
as  |     /*
as  |     ** Get this into the focus! (and make it visible if not visible on the content)
as  |     */
as  |PU      public function toFocus ( ) : void
as  | 
as  |     /*
as  |     ** The user enters text into this textfield.
as  |     */
as  |        private function textInput ( e : TextEvent ) : void
as  | 
as  |     /*
as  |     ** Gets the text of the basetextfield.
as  |     */
as  |PU      public function getText ( ) : String
as  | 
as  |     /*
as  |     ** Sets the text to uppercase.
as  |     */
as  |PU      public function setTextToUpperCase ( ) : void
as  | 
as  |     /*
as  |     ** On changing of the padding.
as  |     */
as  |        private function resize ( e : Event ) : void
as  | 
as  |     /*
as  |     ** Overriding the setsw setsh and setswh functions.
as  |     ** setsh and setswh: should be out of order!
as  |     ** The sh depends on the number of elements to be displayed.
as  |     */
as  |PU      override public function setsw ( newsw : int ) : void
as  | 
as  |PU      override public function setsh ( newsh : int ) : void { }
as  | 
as  |PU      override public function setswh ( newsw : int , newsh : int ) : void { }
as  | 
as  |     /*
as  |     ** Sets the label of the button.
as  |     */
as  |PU      public function setTextCode ( newTextCode : String ) : void
as  | 
as  |     /*
as  |     ** Repositioning the label if necessary.
as  |     */
as  |        private function baseTextFieldRepos ( ) : void
as  | 
as  |     /*
as  |     ** Restrict.
as  |     */
as  |PU      public function setRestrict ( r : String ) : void
as  | 
as  |     /*
as  |     ** maxChars.
as  |     */
as  |PU      public function setMaxChars ( m : int ) : void
as  | 
as  |     /*
as  |     ** Overriding this destroy method.
as  |     */
as  |PU      override public function destroy ( ) : void
as  | 
    +---------------------------------------------------------------------------
as  | com\kisscodesystems\KissAs3Fw\ui\TextLabel.as
as  | 
as  |     TextLabel
as  | 
as  |     /*
as  |     ** This class is a part of the KissAs3Fw actionscrip framework.
as  |     ** See the header comment lines of the
as  |     ** com . kisscodesystems . KissAs3Fw . Application
as  |     ** The whole framework is available at:
as  |     ** https://github.com/kisscodesystems/KissAs3Fw
as  |     ** Demo applications:
as  |     ** https://github.com/kisscodesystems/KissAs3FwDemos
as  |     **
as  |     ** DESCRIPTION:
as  |     ** TextLabel.
as  |     ** Not scrollable text. Can be multiline if maxWidth has been set.
as  |     **
as  |     ** MAIN FEATURES:
as  |     ** - the text code is displayed and will be changed automatically if the lang code is changed.
as  |     ** - multiline text displaying is enabled.
as  |     ** - maxWidth can be set. (useful for example in base list.)
as  |     */
as  | 
as  |        package com . kisscodesystems . KissAs3Fw . ui
as  |        extends BaseTextField
as  |        lines   92
as  | 
as  |     Variables:
as  | 
as  |     // The maximum width of the label.
as  |        private var maxWidth : int = 0 ;
as  | 
as  |     Functions:
as  | 
as  |     /*
as  |     ** The constructor doing the initialization of this object as usual.
as  |     */
as  |PU      public function TextLabel ( applicationRef : Application ) : void
as  | 
as  |     /*
as  |     ** Sets the maximum width of the label.
as  |     ** If the displayed text is longer than this value then multiple lines
as  |     ** of the text will be displayed.
as  |     */
as  |PU      public function setMaxWidth ( newWidth : int , allowMultiline : Boolean ) : void
as  | 
as  |     /*
as  |     ** Overriding this destroy method.
as  |     */
as  |PU      override public function destroy ( ) : void
as  | 
    +---------------------------------------------------------------------------
as  | com\kisscodesystems\KissAs3Fw\ui\Widget.as
as  | 
as  |     Widget
as  | 
as  |     /*
as  |     ** This class is a part of the KissAs3Fw actionscrip framework.
as  |     ** See the header comment lines of the
as  |     ** com . kisscodesystems . KissAs3Fw . Application
as  |     ** The whole framework is available at:
as  |     ** https://github.com/kisscodesystems/KissAs3Fw
as  |     ** Demo applications:
as  |     ** https://github.com/kisscodesystems/KissAs3FwDemos
as  |     **
as  |     ** DESCRIPTION:
as  |     ** Widget.
as  |     ** This object will be the replacement of a usual window.
as  |     **
as  |     ** MAIN FEATURES:
as  |     ** - can be:
as  |     **   - added to the content of the Widgets (implemented in Widgets class)
as  |     **   - repositioned (implemented in Widgets class)
as  |     **   - closed and removed from the content of the widgets (implemented in Widgets clas)
as  |     **   - resized
as  |     **   - minimised (content hide, only the header is visible)
as  |     ** - cannot be under each other
as  |     ** - new widgets should extend this
as  |     ** - can have an id and a type and these can be set once.
as  |     */
as  | 
as  |        package com . kisscodesystems . KissAs3Fw . ui
as  |        extends BaseSprite
as  |        lines   885
as  | 
as  |     Variables:
as  | 
as  |     // The mouse down event can be happened on this objects.
as  |        private const mouseDownHappenedMover : String = "mouseDownHappenedMover" ;
as  |        private const mouseDownHappenedResizer : String = "mouseDownHappenedResizer" ;
as  |     // The id of the Widget (unique identifier integer), can be set only one time.
as  |        private var widgetId : int = - 1 ;
as  |     // The header of the Widget (unique text or text code of the header label), can be set only one time.
as  |        private var widgetHeader : String = null ;
as  |     // The type of the Widget (basically the menu item, not has to be unique), can be set only one time.
as  |        private var widgetType : String = null ;
as  |     // A shape to the background of all.
as  |        private var baseShape : BaseShape = null ;
as  |     // The background of the widget
as  |        private var backLabel : BaseShape = null ;
as  |     // The label of the widget
as  |        private var textLabel : TextLabel = null ;
as  |     // The mover of this widget.
as  |        private var mover : BaseSprite = null ;
as  |     // The closer of this widget.
as  |     // Double click on it results the close me event to the outside.
as  |        private var closer : BaseSprite = null ;
as  |     // The resizer of this widget.
as  |        private var resizer : BaseSprite = null ;
as  |     // And the contentMultiple of this widget.
as  |        private var contentMultiple : ContentMultiple = null ;
as  |     // To be able to determine: the widget is moved or not.
as  |        private var prevMouseX : int = 0 ;
as  |        private var prevMouseY : int = 0 ;
as  |     // The mouse down has happened in..
as  |        private var mouseDownHappened : String = null ;
as  |     // The event of closing this widget.
as  |        private var eventWidgetCloseMe : Event = null ;
as  |     // The events of dragging and dropping this widget.
as  |        private var eventWidgetDragStart : Event = null ;
as  |        private var eventWidgetDragStop : Event = null ;
as  |     // The movement of the widget is controlled.
as  |        private var prevX : Number = 0 ;
as  |        private var prevY : Number = 0 ;
as  |        private var widgetInMove : Boolean = false ;
as  |     // The buttons of the navigation.
as  |        private var buttonDrawMove : ButtonDraw = null ;
as  |        private var buttonDrawPrev : ButtonDraw = null ;
as  |        private var buttonDrawNext : ButtonDraw = null ;
as  |        private var buttonDrawList : ButtonDraw = null ;
as  |     // The id of the content.
as  |        private var contentId : int = 0 ;
as  | 
as  |     Functions:
as  | 
as  |     /*
as  |     ** The constructor doing the initialization of this object as usual.
as  |     */
as  |PU      public function Widget ( applicationRef : Application ) : void
as  | 
as  |     /*
as  |     ** This method will be called if the object is being added to the stage.
as  |     ** A lot of initializing happens here because the stage is available
as  |     ** from here.
as  |     */
as  |        override protected function addedToStage ( e : Event ) : void
as  | 
as  |        override protected function removedFromStage ( e : Event ) : void
as  | 
as  |     /*
as  |     ** Sets and gets the id of the content of this widget.
as  |     */
as  |PU      public function setContentId ( cid : int ) : void
as  | 
as  |PU      public function getContentId ( ) : int
as  | 
as  |     /*
as  |     ** Sets the visible of the buttons located in the header.
as  |     */
as  |PU      public function setButtonsVisible ( prev : Boolean , next : Boolean , list : Boolean ) : void
as  | 
as  |     /*
as  |     ** Sets the visible of the buttons located in the header.
as  |     */
as  |PU      public function setButtonMoveVisible ( move : Boolean ) : void
as  | 
as  |     /*
as  |     ** Sets the orientation of a content.
as  |     */
as  |PU      public function setOrientation ( index : int , o : String ) : void
as  | 
as  |     /*
as  |     ** Navigates on the widgets.
as  |     */
as  |        private function buttonDrawMoveClick ( e : Event ) : void
as  | 
as  |        private function buttonDrawPrevClick ( e : Event ) : void
as  | 
as  |        private function buttonDrawNextClick ( e : Event ) : void
as  | 
as  |        private function buttonDrawListClick ( e : Event ) : void
as  | 
as  |     /*
as  |     ** The function to be called after doubleClick.
as  |     */
as  |        private function closerDoubleClick ( e : MouseEvent ) : void
as  | 
as  |     /*
as  |     ** Gets the size of the content.
as  |     */
as  |PU      public function getContentsw ( ) : int
as  | 
as  |PU      public function getContentsh ( ) : int
as  | 
as  |     /*
as  |     ** Gets the event dispatcher of the content.
as  |     */
as  |PU      public function getContentBaseEventDispatcher ( ) : BaseEventDispatcher
as  | 
as  |     /*
as  |     ** The header has to be at visible space all the time.
as  |     ** If not (the header is too up or too left), then this method
as  |     ** brings the widget into a place where the header is accessible
as  |     ** for further repositioning.
as  |     */
as  |PU      public function safePlace ( ) : void
as  | 
as  |     /*
as  |     ** When the mouse is up on stage.
as  |     */
as  |        private function stageMouseUp ( e : MouseEvent ) : void
as  | 
as  |     /*
as  |     ** The overriding of the set size methods.
as  |     ** The sizes of the widgets have to be at least the following constants.
as  |     */
as  |PU      override public function setsw ( newsw : int ) : void
as  | 
as  |PU      override public function setsh ( newsh : int ) : void
as  | 
as  |PU      override public function setswh ( newsw : int , newsh : int ) : void
as  | 
as  |     /*
as  |     ** Gets the sizes from the size of stage (more precisely from parent content).
as  |     */
as  |PU      public function getswFromParentContent ( ) : int
as  | 
as  |PU      public function getshFromParentContent ( ) : int
as  | 
as  |     /*
as  |     ** Grabs the widget on the header.
as  |     */
as  |        private function moverMouseDown ( e : MouseEvent ) : void
as  | 
as  |     /*
as  |     ** The blur effect should be applied when this Widget really moves.
as  |     ** (In case of hiding-unhiding, the other widgets should not be blured.)
as  |     */
as  |        private function enterFrameCheckMovement ( e : Event ) : void
as  | 
as  |     /*
as  |     ** Overrides the setsh method!
as  |     ** If the content of the widget hides then the height will be reduced!
as  |     ** (just for displaying, the sh property will beuntouched in case of masking)
as  |     */
as  |PU      override public function getsh ( ) : int
as  | 
as  |     /*
as  |     ** Grabs the widget on the resizer area.
as  |     */
as  |        private function resizerMouseDown ( e : MouseEvent ) : void
as  | 
as  |     /*
as  |     ** Updates the resizer to see the new size of the widget.
as  |     ** Not needed to register into the line thickness changing.
as  |     */
as  |        private function enterFrameUpdateResizer ( e : Event ) : void
as  | 
as  |     /*
as  |     ** Hides or unhides the content of the widget.
as  |     */
as  |PU      public function setHidden ( hidden : Boolean ) : void
as  | 
as  |     /*
as  |     ** Gets the hidden property of this widget
as  |     */
as  |PU      public function getHidden ( ) : Boolean
as  | 
as  |     /*
as  |     ** Sets the default content.
as  |     */
as  |PU      public function setDefaultContent ( ) : void
as  | 
as  |     /*
as  |     ** Adds a content and returns the index of the content.
as  |     ** Unique elements can be added as the labels of the buttons.
as  |     */
as  |PU      public function addContent ( label : String ) : int
as  | 
as  |     /*
as  |     ** Removes a content.
as  |     */
as  |PU      public function removeContent ( i : int ) : void
as  | 
as  |     /*
as  |     ** Sets the active index.
as  |     */
as  |PU      public function setActiveContent ( index : int ) : void
as  | 
as  |     /*
as  |     ** Sets the visible of the button bar.
as  |     ** (If it is not visible then the contents will be resized!)
as  |     */
as  |PU      public function setButtonBarVisible ( v : Boolean ) : void
as  | 
as  |     /*
as  |     ** Adds an element to the content sprite.
as  |     */
as  |PU      public function addToContent ( index : int , displayObject : DisplayObject , normal : Boolean , cellIndex : int ) : void
as  | 
as  |     /*
as  |     ** To remove an element from the contentMultiple of this widget.
as  |     */
as  |PU      public function removeFromContent ( index : int , displayObject : DisplayObject ) : void
as  | 
as  |     /*
as  |     ** Sets and gets the max elementsArray of the line or column in the content.
as  |     */
as  |PU      public function setElementsFix ( index : int , es : int ) : void
as  | 
as  |PU      public function getElementsFix ( index : int ) : int
as  | 
as  |     /*
as  |     ** In case of resizing the drawed buttons, the elements have to be resized and repositioned.
as  |     */
as  |        private function buttonDrawResized ( e : Event ) : void
as  | 
as  |     /*
as  |     ** In case of resizing the label, the elements have to be resized and repositioned.
as  |     */
as  |        private function textLabelResized ( e : Event ) : void
as  | 
as  |     /*
as  |     ** Sets the id ot fhe widget.
as  |     ** (Not changable later.)
as  |     */
as  |PU      public function setWidgetId ( id : int ) : void
as  | 
as  |     /*
as  |     ** Gets the id of the widget.
as  |     */
as  |PU      public function getWidgetId ( ) : int
as  | 
as  |     /*
as  |     ** Sets the header ot fhe widget.
as  |     ** (Not changable later.)
as  |     */
as  |PU      public function setWidgetHeaderCode ( header : String ) : void
as  | 
as  |     /*
as  |     ** Gets the header of the widget.
as  |     */
as  |PU      public function getWidgetHeader ( ) : String
as  | 
as  |     /*
as  |     ** Sets the type ot fhe widget.
as  |     ** (Not changable later.)
as  |     */
as  |PU      public function setWidgetType ( type : String ) : void
as  | 
as  |     /*
as  |     ** Gets the type ot fhe widget.
as  |     */
as  |PU      public function getWidgetType ( ) : String
as  | 
as  |     /*
as  |     ** This is the method runs after the changing of the size of this object.
as  |     ** If this has happened then the
as  |     */
as  |        override protected function doSizeChanged ( ) : void
as  | 
as  |     /*
as  |     ** The margin of the application has been changed.
as  |     */
as  |        private function marginChanged ( e : Event ) : void
as  | 
as  |     /*
as  |     ** The radius of the application has been changed.
as  |     */
as  |        private function radiusChanged ( e : Event ) : void
as  | 
as  |     /*
as  |     ** The filler color (background) of the background has been changed.
as  |     */
as  |        private function backgroundBgColorChanged ( e : Event ) : void
as  | 
as  |     /*
as  |     ** The filler color (foreground) of the background has been changed.
as  |     */
as  |        private function backgroundFgColorChanged ( e : Event ) : void
as  | 
as  |     /*
as  |     ** The alpha of the filler color of the background has been changed.
as  |     */
as  |        private function fillAlphaChanged ( e : Event ) : void
as  | 
as  |     /*
as  |     ** Clears just the resizer.
as  |     ** super . getsh! this is the way to work properly in hidden state.
as  |     */
as  |        private function clearResizer ( ) : void
as  | 
as  |     /*
as  |     ** Resizes only the background.
as  |     */
as  |        private function resizeBackground ( ) : void
as  | 
as  |     /*
as  |     ** Resizing the closer.
as  |     */
as  |        private function resizeCloser ( ) : void
as  | 
as  |     /*
as  |     ** This is the method should be run after the size changing or changing of
as  |     ** any of the properties we registered before.
as  |     ** super . getsh! this is the way to work properly in hidden state.
as  |     */
as  |        private function resizeElements ( ) : void
as  | 
as  |     /*
as  |     ** Override these as necessary.
as  |     */
as  |        protected function onCreate ( ) : void { }
as  | 
as  |PU      public function onClose ( ) : Boolean
as  | 
as  |     /*
as  |     ** Overriding this destroy method.
as  |     */
as  |PU      override public function destroy ( ) : void
as  | 
    +---------------------------------------------------------------------------
as  | com\kisscodesystems\KissAs3Fw\ui\XmlLister.as
as  | 
as  |     XmlLister
as  | 
as  |     /*
as  |     ** This class is a part of the KissAs3Fw actionscrip framework.
as  |     ** See the header comment lines of the
as  |     ** com . kisscodesystems . KissAs3Fw . Application
as  |     ** The whole framework is available at:
as  |     ** https://github.com/kisscodesystems/KissAs3Fw
as  |     ** Demo applications:
as  |     ** https://github.com/kisscodesystems/KissAs3FwDemos
as  |     **
as  |     ** DESCRIPTION:
as  |     ** XmlLister. Lists and handles xmls.
as  |     **
as  |     ** MAIN FEATURES:
as  |     ** - xml-s can be specified as string
as  |     **   (empty XML will be used if the parsing of this is not successful.)
as  |     ** - dispatches event only if the selected leaf item has been changed
as  |     **   and not that time when a tree part is closed or opened
as  |     ** - labels and values can be set as into the list object
as  |     */
as  | 
as  |        package com . kisscodesystems . KissAs3Fw . ui
as  |        extends BaseSprite
as  |        lines   279
as  | 
as  |     Variables:
as  | 
as  |     // The list.
as  |        private var list : List = null ;
as  |     // The array that can be displayed.
as  |        private var arrayLabels : Array = null ;
as  |        private var arrayValues : Array = null ;
as  |     // The xml object to be handled.
as  |     // The keywords are: items, item, opened, value.
as  |        private var xml : XML = null ;
as  |     // The selected item.
as  |        private var selectedItem : String = null ;
as  |     // The start index
as  |        private var startIndex : int = 0 ;
as  |     // The event if the selected item has been changed.
as  |        private var eventChanged : Event = null ;
as  | 
as  |     Functions:
as  | 
as  |     /*
as  |     ** The constructor doing the initialization of this object as usual.
as  |     */
as  |PU      public function XmlLister ( applicationRef : Application ) : void
as  | 
as  |     /*
as  |     ** Gets the text type of the list.
as  |     */
as  |PU      public function getTextType ( ) : String
as  | 
as  |     /*
as  |     ** Sets the xml to be displayed.
as  |     */
as  |PU      public function setXmlAsString ( xmlstring : String ) : void
as  | 
as  |     /*
as  |     ** Creates the elements to be displayed.
as  |     */
as  |        private function createArrays ( ) : void
as  | 
as  |     /*
as  |     ** Lists the item specified as xmlList.
as  |     ** beginString: holds the current depth of the tree.
as  |     */
as  |        private function listAnItem ( xmlList : XMLList , beginString : String ) : void
as  | 
as  |     /*
as  |     ** The list has been resized.
as  |     */
as  |        private function listResized ( e : Event ) : void
as  | 
as  |     /*
as  |     ** Gets the selected item.
as  |     */
as  |PU      public function getSelectedItem ( ) : String
as  | 
as  |     /*
as  |     ** The selected items of the list has been changed.
as  |     */
as  |PU      public function listChanged ( e : Event ) : void
as  | 
as  |     /*
as  |     ** Dispatches the event about the changing of the selected item.
as  |     */
as  |        private function dispatchEventChanged ( ) : void
as  | 
as  |     /*
as  |     ** Overriding the setsw setsh and setswh functions.
as  |     ** setsh and setswh: should be out of order!
as  |     ** The sh depends on the number of elements to be displayed.
as  |     */
as  |PU      override public function setsw ( newsw : int ) : void
as  | 
as  |PU      override public function setsh ( newsh : int ) : void { }
as  | 
as  |PU      override public function setswh ( newsw : int , newsh : int ) : void { }
as  | 
as  |     /*
as  |     ** Sets the elements to be displayed.
as  |     */
as  |PU      public function setNumOfElements ( num : int ) : void
as  | 
as  |     /*
as  |     ** The number of the elements.
as  |     */
as  |PU      public function getNumOfElements ( ) : int
as  | 
as  |     /*
as  |     ** Sets the start index property.
as  |     */
as  |PU      public function setStartIndex ( index : int ) : void
as  | 
as  |     /*
as  |     ** Override this: the list has to be enabled or disabled mostly.
as  |     */
as  |PU      override public function setEnabled ( e : Boolean ) : void
as  | 
as  |     /*
as  |     ** Overriding this destroy method.
as  |     */
as  |PU      override public function destroy ( ) : void
as  | 
    +---------------------------------------------------------------------------
